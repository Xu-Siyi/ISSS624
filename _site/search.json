[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624",
    "section": "",
    "text": "This is a Quarto website.\nIn this webpage, I’m going to share with you my learning journey of geospatial analytics."
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "ISSS624",
    "section": "Overview",
    "text": "Overview\nThis is the overview paragraph"
  },
  {
    "objectID": "index.html#getting-stared",
    "href": "index.html#getting-stared",
    "title": "ISSS624",
    "section": "Getting Stared",
    "text": "Getting Stared\nThis is the getting start paragraph"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex01.html",
    "href": "Hands-on_Ex01.html",
    "title": "Hands-on_Ex01",
    "section": "",
    "text": "In this webpage, I’m going to share with you my learning journey of geospatial analytics."
  },
  {
    "objectID": "Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "Getting Started",
    "text": "Getting Started\nThis is the getting start paragraph"
  },
  {
    "objectID": "Hands-on_Ex01.html#getting-stared",
    "href": "Hands-on_Ex01.html#getting-stared",
    "title": "Hands-on_Ex01",
    "section": "Getting Stared",
    "text": "Getting Stared\nThis is the getting start paragraph"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "",
    "text": "In this hands-on exercise, I learn how to import and wrangling geospatial data using appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#getting-started",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#getting-started",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below install and load sf and tidyverse packages into R environment\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#section",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#section",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "Importing Geospatial Data\nImporting polygon feature data\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#importing-geospatial-data",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#importing-geospatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Importing Geospatial Data",
    "text": "Importing Geospatial Data\n\n(1) Importing polygon feature data\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n(2) Importing polyline feature data in shapefile form\nThe code chunk below uses st_read() function of sf package to import CyclingPath shapefile into R as line feature data frame.\n\ncyclingpath = st_read(dsn = \"data/geospatial\", \n                         layer = \"CyclingPath\")\n\nReading layer `CyclingPath' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 1625 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 12711.19 ymin: 28711.33 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\n\n(3) Importing GIS data in kml format\nThe pre-schools-location-kml is in kml format. The code chunk below will be used to import the kml into R. Notice that in the code chunk below, the complete path and the kml file extension were provided.\n\npreschool = st_read(\"data/geospatial/pre-schools-location-kml.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Hands-on_Ex1\\data\\geospatial\\pre-schools-location-kml.kml' \n  using driver `KML'\nSimple feature collection with 1359 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nThe message above reveals that preschool is a point feature data frame. There are a total of 1359 features and 2 fields. Different from the previous two simple feature data frame, preschool is in wgs84 coordinates system."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Checking the Content of A Simple Feature Data Frame",
    "text": "Checking the Content of A Simple Feature Data Frame\nIn this sub-section, you will learn different ways to retrieve information related to the content of a simple feature data frame.\n\n(1)Working with st_geometry()\nThe column in the sf data.frame that contains the geometries is a list, of class sfc. We can retrieve the geometry list-column in this case by mpsz$geom or mpsz[[1]], but the more general way uses st_geometry() as shown in the code chunk below.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\n\n(2) Working with glimpse()\nBeside the basic feature information, we also would like to learn more about the associated attribute information in the data frame. This is the time you will find glimpse() of dplyr. very handy as shown in the code chunk below.\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\n(3) Working with head()\nSometimes we would like to reveal complete information of a feature object, this is the job of head() of Base R\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#plotting-the-geospatial-data",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#plotting-the-geospatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Plotting the Geospatial Data",
    "text": "Plotting the Geospatial Data\nIn geospatial data science, by looking at the feature information is not enough. We are also interested to visualise the geospatial features. This is the time you will find plot() of R Graphic comes in very handy as shown in the code chunk below.\n\nplot(mpsz)\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\nThe default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum as shown above. We can, however, choose to plot only the geometry by using the code chunk below.\n\nplot(st_geometry(mpsz))\n\n\n\n\nAlternatively, we can also choose the plot the sf object by using a specific attribute as shown in the code chunk below.\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#working-with-projection",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#working-with-projection",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Working with Projection",
    "text": "Working with Projection\nMap projection is an important property of a geospatial data. In order to perform geoprocessing using two geospatial data, we need to ensure that both geospatial data are projected using similar coordinate system.\nIn this section, you will learn how to project a simple feature data frame from one coordinate system to another coordinate system. The technical term of this process is called projection transformation.\n\n(1)Assigning EPSG code to a simple feature data frame\nOne of the common issue that can happen during importing geospatial data into R is that the coordinate system of the source data was either missing (such as due to missing .proj for ESRI shapefile) or wrongly assigned during the importing process.\nThis is an example the coordinate system of mpsz simple feature data frame by using st_crs() of sf package as shown in the code chunk below.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nAlthough mpsz data frame is projected in svy21 but when we read until the end of the print, it indicates that the EPSG is 9001. This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414.\nIn order to assign the correct EPSG code to mpsz data frame, st_set_crs() of sf package is used as shown in the code chunk below.\n\nmpsz3414 <- st_set_crs(mpsz, 3414)\n\nWarning: st_crs<- : replacing crs does not reproject data; use st_transform for\nthat\n\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n(2) Transforming the projection of preschool from wgs84 to svy21\n\npreschool3414 <- st_transform(preschool, \n                              crs = 3414)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#importing-and-converting-an-aspatial-data",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#importing-and-converting-an-aspatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Importing and Converting An Aspatial Data",
    "text": "Importing and Converting An Aspatial Data\n\n(1)Importing the aspatial data\n\nlistings <- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 4252 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): name, host_name, neighbourhood_group, neighbourhood, room_type\ndbl  (10): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nlist(listings) \n\n[[1]]\n# A tibble: 4,252 × 16\n       id name     host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n    <dbl> <chr>      <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  50646 Pleasan…  227796 Sujatha Centra… Bukit …    1.33    104. Privat…    80\n 2  71609 Ensuite…  367042 Belinda East R… Tampin…    1.35    104. Privat…   178\n 3  71896 B&B  Ro…  367042 Belinda East R… Tampin…    1.35    104. Privat…    81\n 4  71903 Room 2-…  367042 Belinda East R… Tampin…    1.35    104. Privat…    81\n 5 275343 Conveni… 1439258 Joyce   Centra… Bukit …    1.29    104. Privat…    52\n 6 275344 15 mins… 1439258 Joyce   Centra… Bukit …    1.29    104. Privat…    40\n 7 294281 5 mins … 1521514 Elizab… Centra… Newton     1.31    104. Privat…    72\n 8 301247 Nice ro… 1552002 Rahul   Centra… Geylang    1.32    104. Privat…    41\n 9 324945 20 Mins… 1439258 Joyce   Centra… Bukit …    1.29    104. Privat…    49\n10 330089 Accomo@… 1439258 Joyce   Centra… Bukit …    1.29    104. Privat…    49\n# … with 4,242 more rows, 6 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n\n\n\n\n(2)Creating a simple feature data frame from an aspatial data frame\n\nlistings_sf <- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n\nglimpse(listings_sf)\n\nRows: 4,252\nColumns: 15\n$ id                             <dbl> 50646, 71609, 71896, 71903, 275343, 275…\n$ name                           <chr> \"Pleasant Room along Bukit Timah\", \"Ens…\n$ host_id                        <dbl> 227796, 367042, 367042, 367042, 1439258…\n$ host_name                      <chr> \"Sujatha\", \"Belinda\", \"Belinda\", \"Belin…\n$ neighbourhood_group            <chr> \"Central Region\", \"East Region\", \"East …\n$ neighbourhood                  <chr> \"Bukit Timah\", \"Tampines\", \"Tampines\", …\n$ room_type                      <chr> \"Private room\", \"Private room\", \"Privat…\n$ price                          <dbl> 80, 178, 81, 81, 52, 40, 72, 41, 49, 49…\n$ minimum_nights                 <dbl> 90, 90, 90, 90, 14, 14, 90, 8, 14, 14, …\n$ number_of_reviews              <dbl> 18, 20, 24, 48, 20, 13, 133, 105, 14, 1…\n$ last_review                    <date> 2014-07-08, 2019-12-28, 2014-12-10, 20…\n$ reviews_per_month              <dbl> 0.22, 0.28, 0.33, 0.67, 0.20, 0.16, 1.2…\n$ calculated_host_listings_count <dbl> 1, 4, 4, 4, 50, 50, 7, 1, 50, 50, 50, 4…\n$ availability_365               <dbl> 365, 365, 365, 365, 353, 364, 365, 90, …\n$ geometry                       <POINT [m]> POINT (22646.02 35167.9), POINT (…"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#geoprocessing-with-sf-package",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#geoprocessing-with-sf-package",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Geoprocessing with sf package",
    "text": "Geoprocessing with sf package\n\n(1)Buffering\nThe solution:\nFirstly, st_buffer() of sf package is used to compute the 5-meter buffers around cycling paths\n\nbuffer_cycling <- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n\n\nsum(buffer_cycling$AREA)\n\n773143.9 [m^2]\n\n\n\n\n(2) Point-in-polygon count\n\nmpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   2.000   4.207   6.000  37.000 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 23449.05 ymin: 46001.23 xmax: 25594.22 ymax: 47996.47\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      290          3 WOODLANDS EAST    WDSZ03      N  WOODLANDS         WD\n      REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 NORTH REGION       NR C90769E43EE6B0F2 2014-12-05 24506.64 46991.63\n  SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1   6603.608    2553464 MULTIPOLYGON (((24786.75 46...           37\n\n\n\nmpsz3414$Area <- mpsz3414 %>%\n  st_area()\n\n\nmpsz3414 <- mpsz3414 %>%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#explorotary-data-analysis-eda",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#explorotary-data-analysis-eda",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Explorotary Data Analysis (EDA)",
    "text": "Explorotary Data Analysis (EDA)\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nDIY\n\nlibrary(ggplot2)\nlibrary(units)\n\nudunits database from C:/R/R-4.2.2/library/units/share/udunits/udunits2.xml\n\nggplot(mpsz3414, aes(x = `PreSch Count`,y = `PreSch Density`)) + geom_point()+labs(title=\"The relationship between Pre-school Density and Pre-school Count\",\n       x=\"Pre-school count (per km sq)\", y = \"PreSch Desnity\")+\n  theme_classic()"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#getting-started-1",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#getting-started-1",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#importing-data-into-r",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#importing-data-into-r",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Importing Data into R",
    "text": "Importing Data into R\n\nImporting Geospatial Data into R\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\nImporting Attribute Data into R\n\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nData Preparation\n\nData Wrangling\n\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\nJoining the attribute data and geospatial data\n\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\n\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on Exercise 1.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex1/Hands-on Exercise 1.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R AND Choropleth Mapping with R",
    "section": "Choropleth Mapping Geospatial Data Using tmap",
    "text": "Choropleth Mapping Geospatial Data Using tmap\n\n(1) Plotting a choropleth map quickly by using qtm()\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n(2) Creating a choropleth map by using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n1. Drawing a base map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n2. Drawing a choropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n3. Drawing a choropleth map using tm_fill() and *tm_border()**\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_ex1.html",
    "href": "In-class_Ex/In-class_Ex1/In-class_ex1.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In this in-class exercise 1, I will finish Chapter 3 Spatial Weights and Applications, which help me to understand how to define spatial relationship."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_ex1.html#getting-started",
    "href": "In-class_Ex/In-class_Ex1/In-class_ex1.html#getting-started",
    "title": "In-class Exercise",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below will install and load tidyverse and sf packages.\n\npacman::p_load(sf,tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_ex1.html#importing-geospatial-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_ex1.html#importing-geospatial-data",
    "title": "In-class Exercise 1",
    "section": "3 Importing Geospatial Data",
    "text": "3 Importing Geospatial Data\n\n3.1 importing Polygon features\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\nhunan = st_read(dsn = \"data/geospatial\", \n                  layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\Xu-Siyi\\ISSS624\\In-class_Ex\\In-class_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n3.2 Import csv file\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R dataframe class.\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n3.3 Performing relational join\nThe code chunk below will be used to update the attribute table of hunan's SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\nhunan <- left_join(hunan,hunan2012)\n\nJoining, by = \"County\""
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_ex1.html#the-study-area-and-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_ex1.html#the-study-area-and-data",
    "title": "In-class Exercise 1",
    "section": "2 The Study Area and Data",
    "text": "2 The Study Area and Data\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan county boundary layer. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n2.1 Getting Started\nThe code chunk below will install and load tidyverse and sf packages.\n\npacman::p_load(sf,tidyverse,spdep)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#import-data",
    "href": "Take-home Exercise/Take-home Ex1.html#import-data",
    "title": "Take home ex1",
    "section": "1 Import data",
    "text": "1 Import data\nFirst of all we load the package that needed: sf, spdep, tmap, tidyverse,dplyr, funModeling\n\npacman::p_load(sf, spdep, tmap, tidyverse,dplyr, funModeling)\n\nThere are two dataset we used:\n\ngeo_export:\nnga_admbnda_adm2_osgof_20190417\n\nchange it to shorter name\n\n1.1 import waterpoint\n\nwp<- st_read(dsn=\"geodata\",\n             layer=\"geo_export\",\n             crs=4326) %>%\n  filter(clean_coun==\"Nigeria\")\n\nin the\nThen I saved it into wp_nga.rds. In this way I can delete geo_export data which is too large to git push.\nI add #eval: false to make sure the code chunk will only display\nref\n\nwp_nga<-write_rds(wp,\"geodata/wp_nga.rds\")\n\n\n\n1.2 import Nigeria LGA boundary data\n\nnga<- st_read(dsn=\"geodata\",\n             layer=\"geoBoundaries-NGA-ADM2\",\n             crs=4326)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Take-home Exercise\\geodata' using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#data-wrangling",
    "href": "Take-home Exercise/Take-home Ex1.html#data-wrangling",
    "title": "Take home ex1",
    "section": "2 Data Wrangling",
    "text": "2 Data Wrangling\n\n2.1 Recoding NA values into string\nIn the code chunk below, replace_na() is used to recode all the NA values in status_cle field into Unknown.\n\nwp_nga <- read_rds(\"geodata/wp_nga.rds\") %>%\n  mutate(status_cle = replace_na(status_cle, \"Unknown\"))\n\n\n\n2.2 EDA\nIn the code chunk below, freq() of funModeling package is used to display the distribution of status_cle field in wp_nga.\n\nfreq(data=wp_nga, \n     input = 'status_cle')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n                        status_cle frequency percentage cumulative_perc\n1                       Functional     16919      83.29           83.29\n2      Functional but needs repair      2102      10.35           93.64\n3        Functional but not in use       579       2.85           96.49\n4                          Unknown       396       1.95           98.44\n5         Abandoned/Decommissioned       234       1.15           99.59\n6                        Abandoned        76       0.37           99.96\n7                   Non-Functional         5       0.02           99.98\n8 Non functional due to dry season         2       0.01          100.00"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#extracting-water-point-data",
    "href": "Take-home Exercise/Take-home Ex1.html#extracting-water-point-data",
    "title": "Take home ex1",
    "section": "3 Extracting Water Point Data",
    "text": "3 Extracting Water Point Data\nIn this section, we will extract the water point records by using classes in status_cle field.\n\n3.1 Extracting the functional water point data\nin this code chunk below, filter() is used to select functional water points\n\nwpt_functional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\n\nfreq(data=wpt_functional, \n     input = 'status_cle')\n\n\n\n\n                   status_cle frequency percentage cumulative_perc\n1                  Functional     16919      86.32           86.32\n2 Functional but needs repair      2102      10.72           97.04\n3   Functional but not in use       579       2.95          100.00\n\n\n\n\n3.2 Extracting non-funtional water point\nIn the code chunk below, filter() of dplyr is used to select non-functional water points.\n\nwpt_nonfunctional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\n\nfreq(data=wpt_nonfunctional, \n     input = 'status_cle')\n\n\n\n\n                        status_cle frequency percentage cumulative_perc\n1         Abandoned/Decommissioned       234      73.82           73.82\n2                        Abandoned        76      23.97           97.79\n3                   Non-Functional         5       1.58           99.37\n4 Non functional due to dry season         2       0.63          100.00\n\n\n\n\n3.3 Extracting water point with Unknown class\nIn the code chunk below, filter() of dplyr is used to select water points with unknown status.\n\nwpt_unknown <- wp_nga %>%\n  filter(status_cle == \"Unknown\")\n\n\nfreq(data=wpt_unknown, \n     input = 'status_cle')\n\n\n\n\n  status_cle frequency percentage cumulative_perc\n1    Unknown       396        100             100"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#performing-point-in-polygon-count",
    "href": "Take-home Exercise/Take-home Ex1.html#performing-point-in-polygon-count",
    "title": "Take home ex1",
    "section": "4 Performing Point-in-Polygon Count",
    "text": "4 Performing Point-in-Polygon Count\nThe point-in-polygon (PIP) problem asks whether a given point in the plane lies inside, outside, or on the boundary of a polygon.\n\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_nga))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown)))"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#saving-the-analytical-data-table",
    "href": "Take-home Exercise/Take-home Ex1.html#saving-the-analytical-data-table",
    "title": "Take home ex1",
    "section": "5 Saving the Analytical Data Table",
    "text": "5 Saving the Analytical Data Table\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`) %>%\n  select(3:4, 9:10, 18:23)\n\nThings to learn from the code chunk above:\nmutate() of dplyr package is used to derive two fields namely pct_functional and pct_non-functional.\nto keep the file size small, select() of dplyr is used to retain only field 3,4,9,10, 18,19,20,21,22,and 23.\nNow, you have the tidy sf data table subsequent analysis. We will save the sf data table into rds format.\n\nwrite_rds(nga_wp, \"geodata/nga_wp.rds\")\n\nThere is only data file we use, nga_wp.rds, which is the combination of the geospatial and aspatial data."
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#visualising-the-spatial-dsitribution-of-water-points",
    "href": "Take-home Exercise/Take-home Ex1.html#visualising-the-spatial-dsitribution-of-water-points",
    "title": "Take home ex1",
    "section": "6 Visualising the spatial dsitribution of water points",
    "text": "6 Visualising the spatial dsitribution of water points\n\nnga_wp <- read_rds(\"geodata/nga_wp.rds\")\ntotal <- qtm(nga_wp, \"total wpt\")\nwp_functional <- qtm(nga_wp, \"wpt functional\")\nwp_nonfunctional <- qtm(nga_wp, \"wpt non-functional\")\nunknown <- qtm(nga_wp, \"wpt unknown\")\n\ntmap_arrange(total, wp_functional, wp_nonfunctional, unknown, asp=1, ncol=2)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#global-spatial-autocorrelation",
    "href": "Take-home Exercise/Take-home Ex1.html#global-spatial-autocorrelation",
    "title": "Take home ex1",
    "section": "2.1 Global Spatial Autocorrelation",
    "text": "2.1 Global Spatial Autocorrelation\n\n2.1.1 Computing Contiguity Spatial Weights\n\nwm_q <- poly2nb(nga_wp, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\nThe summary report above shows that there are 774 area units in Hunan. The most connected area unit has 14 neighbours. There are two area units (138 and 560) with only one neighbours.\n\n\n2.1.2 Row-standardised weights matrix\nNow we calculate\nBecause there is 1 region with no links in the NGA data, I use set.ZeroPolicyOption(TRUE) to create the Weights Matrix.\n\nset.ZeroPolicyOption(TRUE)\n\n[1] FALSE\n\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE\n                   )\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\n\nWeights style: W \nWeights constants summary:\n    n     nn  S0       S1       S2\nW 773 597529 773 285.0658 3198.414\n\n\n\n\n2.1.3 Global Spatial Autocorrelation: Moran’s I\nMoran’s I is a measure of spatial autocorrelation\nI use moran.test() of spdep to do Moran’s I statistics testing\n\n2.1.3.1 Maron’s I test\n\n(1) Funtional waterpoint\n\nmoran.test(nga_wp$`wpt functional`, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  nga_wp$`wpt functional`  \nweights: rswm_q  n reduced by no-neighbour observations\n  \n\nMoran I statistic standard deviate = 27.729, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.597453820      -0.001295337       0.000466245 \n\n\np-value<0.01, means we reject Null hypothesis.\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(nga_wp$`wpt functional`, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  nga_wp$`wpt functional` \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.59745, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nIn the code chunk below we use hist() and abline() to visualize Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.001937958\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.0004471542\n\n\n\nsummary(bperm$res[1:999])\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.066100 -0.016121 -0.002669 -0.001938  0.011703  0.077458 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n(2) Water-non fuctional\n\nmoran.test(nga_wp$`wpt non-functional`, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  nga_wp$`wpt non-functional`  \nweights: rswm_q  n reduced by no-neighbour observations\n  \n\nMoran I statistic standard deviate = 10.244, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.2144866157     -0.0012953368      0.0004437415 \n\n\n\nset.seed(1234)\nbperm= moran.mc(nga_wp$`wpt non-functional`, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  nga_wp$`wpt non-functional` \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.21449, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nIn the code chunk below we use hist() and abline() to visualize Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.002834731\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.0003851432\n\n\n\nsummary(bperm$res[1:999])\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.046615 -0.016790 -0.005141 -0.002835  0.009189  0.093353 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#spatial-correlogram",
    "href": "Take-home Exercise/Take-home Ex1.html#spatial-correlogram",
    "title": "Take home ex1",
    "section": "2.2 Spatial Correlogram",
    "text": "2.2 Spatial Correlogram\n\n2.2.1 Compute Moran’s I correlogram\n\n(1) Functional water points\n\nMI_corr <- sp.correlogram(wm_q, \n                          nga_wp$`wpt functional`, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for nga_wp$`wpt functional` \nmethod: Moran's I\n           estimate expectation    variance standard deviate Pr(I) two sided\n1 (773)  5.9745e-01 -1.2953e-03  4.6625e-04           27.729       < 2.2e-16\n2 (773)  4.9033e-01 -1.2953e-03  1.9980e-04           34.781       < 2.2e-16\n3 (773)  3.9305e-01 -1.2953e-03  1.2053e-04           35.920       < 2.2e-16\n4 (773)  3.2632e-01 -1.2953e-03  8.6612e-05           35.202       < 2.2e-16\n5 (773)  2.3144e-01 -1.2953e-03  6.8012e-05           28.221       < 2.2e-16\n6 (773)  1.4209e-01 -1.2953e-03  5.6741e-05           19.035       < 2.2e-16\n           \n1 (773) ***\n2 (773) ***\n3 (773) ***\n4 (773) ***\n5 (773) ***\n6 (773) ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n(2) Not Functional water points\n\nMI_corr <- sp.correlogram(wm_q, \n                          nga_wp$`wpt non-functional`, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for nga_wp$`wpt non-functional` \nmethod: Moran's I\n           estimate expectation    variance standard deviate Pr(I) two sided\n1 (773)  2.1449e-01 -1.2953e-03  4.4374e-04          10.2435       < 2.2e-16\n2 (773)  1.0322e-01 -1.2953e-03  1.9016e-04           7.5792       3.478e-14\n3 (773)  7.7266e-02 -1.2953e-03  1.1471e-04           7.3351       2.216e-13\n4 (773)  5.8938e-02 -1.2953e-03  8.2437e-05           6.6341       3.266e-11\n5 (773)  4.0501e-02 -1.2953e-03  6.4736e-05           5.1948       2.049e-07\n6 (773)  2.4576e-02 -1.2953e-03  5.4011e-05           3.5203        0.000431\n           \n1 (773) ***\n2 (773) ***\n3 (773) ***\n4 (773) ***\n5 (773) ***\n6 (773) ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#cluster-and-outlier-analysis",
    "href": "Take-home Exercise/Take-home Ex1.html#cluster-and-outlier-analysis",
    "title": "Take home ex1",
    "section": "2.3 Cluster and Outlier Analysis",
    "text": "2.3 Cluster and Outlier Analysis\nI use Local Indicators for Spatial Association (LISA) to detect cluster and/or outlier from functional waterpoint and Not Functional water points of Nigeria\n\n2.3.1 Functional water points\n\n2.3.1.1 Computing local Moran’s I\nI use shapeID column because there are duplication “Bassa, Ifelodun, Irepodun, Nasarawa, Obi, Surulere” in shapename column\n\nfips <- order(nga_wp$shapeID)\nlocalMI <- localmoran(nga_wp$`wpt functional`, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii       Z.Ii Pr(z != E(Ii))\n1  0.072133151 -3.070532e-04 0.0591657387  0.2978136   7.658454e-01\n2 -0.042519745 -1.241765e-05 0.0031954141 -0.7519695   4.520694e-01\n3  0.453434964 -5.865912e-04 0.1508598995  1.1689329   2.424307e-01\n4 -0.162429843 -9.740804e-05 0.0106857965 -1.5703695   1.163292e-01\n5  0.006090939 -4.911403e-06 0.0007563421  0.2216538   8.245834e-01\n6  2.719950590 -2.940625e-03 0.3216733273  4.8009012   1.579532e-06\n\n\nlocalmoran() function returns a matrix of values whose columns are:\nIi: the local Moran’s I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(): the p-value of local moran statistic\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=nga_wp$shapeID[fips]),\n  check.names=FALSE)\n\n                                    Ii        E.Ii      Var.Ii        Z.Ii\nNGA-ADM2-72505758B10049836  4.5343e-01 -5.8659e-04  2.2658e-01  9.5381e-01\nNGA-ADM2-72505758B10063467 -9.6710e-02 -4.8993e-05  9.4429e-03 -9.9471e-01\nNGA-ADM2-72505758B10065661 -2.8800e-01 -5.6662e-03  6.1813e-01 -3.5910e-01\nNGA-ADM2-72505758B10302610  2.9115e-01 -4.9757e-04  6.3739e-02  1.1552e+00\nNGA-ADM2-72505758B10682130  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B11317593 -9.3856e-03 -6.0372e-04  9.2915e-02 -2.8810e-02\nNGA-ADM2-72505758B1132196   1.3739e-01 -3.0705e-04  3.3677e-02  7.5033e-01\nNGA-ADM2-72505758B11373444  4.4896e-01 -5.8659e-04  1.1300e-01  1.3373e+00\nNGA-ADM2-72505758B11735424  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B11870040  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B11997780  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B122892   -7.1407e-02 -1.0067e-05  1.9404e-03 -1.6208e+00\nNGA-ADM2-72505758B12413588  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B1244901   1.8731e-01 -5.4117e-04  5.9340e-02  7.7114e-01\nNGA-ADM2-72505758B12596325  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B12674914  9.2220e-01 -9.7765e-04  1.5041e-01  2.3804e+00\nNGA-ADM2-72505758B12680831  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B12769973  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B12816297 -1.8706e-02 -1.5863e-06  2.4429e-04 -1.1967e+00\nNGA-ADM2-72505758B13021078  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B13075745  4.5343e-01 -5.8659e-04  4.4847e-02  2.1439e+00\nNGA-ADM2-72505758B13233811  2.2813e-02 -6.5905e-06  1.6959e-03  5.5413e-01\nNGA-ADM2-72505758B13380599  6.1078e-02 -1.6230e-04  2.0797e-02  4.2466e-01\nNGA-ADM2-72505758B13427126  5.1892e-01 -1.4413e-03  2.2163e-01  1.1053e+00\nNGA-ADM2-72505758B13487741  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B13685756  2.0082e-01 -1.6230e-04  3.1277e-02  1.1365e+00\nNGA-ADM2-72505758B139854    4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B14016122  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B14174427  2.2439e-01 -3.0705e-04  5.9166e-02  9.2378e-01\nNGA-ADM2-72505758B14213332  2.1590e-01 -4.1587e-04  8.0125e-02  7.6421e-01\nNGA-ADM2-72505758B14369579 -2.3397e-02 -1.6230e-04  2.4989e-02 -1.4698e-01\nNGA-ADM2-72505758B14654508 -9.9657e-02 -3.7777e-04  7.2787e-02 -3.6799e-01\nNGA-ADM2-72505758B14842261 -1.5058e-01 -1.1721e-04  1.1236e-02 -1.4195e+00\nNGA-ADM2-72505758B15135669  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B15152925  1.5866e-01 -1.2418e-05  1.9123e-03  3.6285e+00\nNGA-ADM2-72505758B15168871  4.1985e-01 -5.8659e-04  5.6205e-02  1.7734e+00\nNGA-ADM2-72505758B15269567 -2.6156e-01 -2.7444e-04  2.3351e-02 -1.7099e+00\nNGA-ADM2-72505758B15283345 -6.5138e-02 -5.4031e-05  6.9244e-03 -7.8214e-01\nNGA-ADM2-72505758B15329511  1.9968e-03 -9.1702e-08  1.4122e-05  5.3138e-01\nNGA-ADM2-72505758B15626765  4.4627e-01 -5.8659e-04  9.0281e-02  1.4872e+00\nNGA-ADM2-72505758B15745475  1.6682e-01 -1.9733e-04  1.8914e-02  1.2144e+00\nNGA-ADM2-72505758B15928088  8.6339e+00 -4.1790e-02  4.3932e+00  4.1391e+00\nNGA-ADM2-72505758B1616690   3.1706e+00 -2.6376e-03  4.0511e-01  4.9856e+00\nNGA-ADM2-72505758B16281923 -1.0863e-01 -9.7408e-05  1.4999e-02 -8.8618e-01\nNGA-ADM2-72505758B16283774  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B16331092 -1.1025e-01 -4.9757e-04  6.3739e-02 -4.3471e-01\nNGA-ADM2-72505758B16408752 -1.6556e-01 -9.7408e-05  1.2483e-02 -1.4809e+00\nNGA-ADM2-72505758B16424915  1.9150e+00 -3.5961e-03  4.5924e-01  2.8312e+00\nNGA-ADM2-72505758B16610760  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B16696559  4.9135e-01 -8.0641e-04  8.8402e-02  1.6553e+00\nNGA-ADM2-72505758B16765159 -2.4029e-01 -4.1587e-04  3.9854e-02 -1.2016e+00\nNGA-ADM2-72505758B16773759  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B17259178  1.4667e+00 -9.1874e-04  1.7692e-01  3.4891e+00\nNGA-ADM2-72505758B17453237  1.7848e-02 -5.4031e-05  8.3202e-03  1.9626e-01\nNGA-ADM2-72505758B17534332  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B17563771  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B17614134  1.7009e+00 -3.2601e-03  5.0042e-01  2.4091e+00\nNGA-ADM2-72505758B17633838  1.1906e-03 -2.5869e-05  9.9982e-03  1.2166e-02\nNGA-ADM2-72505758B17736122  1.8383e-01 -1.8759e-04  2.4037e-02  1.1869e+00\nNGA-ADM2-72505758B1782277   3.8763e-03 -4.2752e-07  5.4793e-05  5.2373e-01\nNGA-ADM2-72505758B18027142  4.4896e-01 -5.8659e-04  1.1300e-01  1.3373e+00\nNGA-ADM2-72505758B18156007  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B18272004  1.0956e-01 -1.8759e-04  2.4037e-02  7.0783e-01\nNGA-ADM2-72505758B1827434   1.8646e-02 -4.8993e-05  5.3749e-03  2.5500e-01\nNGA-ADM2-72505758B18295427  5.5328e-01 -5.5762e-04  8.5825e-02  1.8905e+00\nNGA-ADM2-72505758B18326272  9.2477e-01 -2.5474e-04  6.5536e-02  3.6134e+00\nNGA-ADM2-72505758B18376242  2.5333e-01 -1.0446e-04  1.3387e-02  2.1904e+00\nNGA-ADM2-72505758B18447698  2.7415e-01 -4.7092e-04  7.2486e-02  1.0200e+00\nNGA-ADM2-72505758B18534598  5.1856e-01 -1.5148e-03  1.9385e-01  1.1812e+00\nNGA-ADM2-72505758B18548676 -4.8099e-02 -2.0075e-05  3.0915e-03 -8.6471e-01\nNGA-ADM2-72505758B18747813  4.4624e+00 -1.0222e-02  1.9502e+00  3.2028e+00\nNGA-ADM2-72505758B18888506  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B18960886  3.2893e-02 -2.5869e-05  2.8381e-03  6.1791e-01\nNGA-ADM2-72505758B19119765  2.2410e-01 -1.9733e-04  1.6791e-02  1.7309e+00\nNGA-ADM2-72505758B19327087  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B19376786  1.0661e-01 -1.6230e-04  2.0797e-02  7.4040e-01\nNGA-ADM2-72505758B19458752  2.3111e+00 -1.6602e-02  1.7912e+00  1.7392e+00\nNGA-ADM2-72505758B19462210 -8.2286e-04 -1.5863e-06  2.4429e-04 -5.2546e-02\nNGA-ADM2-72505758B19539344  8.4384e-02 -2.7444e-04  3.0101e-02  4.8795e-01\nNGA-ADM2-72505758B196939    3.2588e+00 -1.8633e-02  2.8159e+00  1.9531e+00\nNGA-ADM2-72505758B19914513  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B20050296  4.5088e-01 -5.8659e-04  6.4318e-02  1.7801e+00\nNGA-ADM2-72505758B20351569  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B20421162  1.8881e-01 -3.4150e-04  1.3194e-01  5.2075e-01\nNGA-ADM2-72505758B20535362  4.6822e-03 -4.2752e-07  6.5837e-05  5.7711e-01\nNGA-ADM2-72505758B20542872  1.9848e-01 -3.0705e-04  5.9166e-02  8.1723e-01\nNGA-ADM2-72505758B20606047 -4.2156e-02 -3.6516e-05  7.0382e-03 -5.0205e-01\nNGA-ADM2-72505758B20675427  1.3542e-02 -1.5863e-06  1.3501e-04  1.1656e+00\nNGA-ADM2-72505758B20849864  2.9483e-04 -9.1702e-08  1.4122e-05  7.8479e-02\nNGA-ADM2-72505758B21150125  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B21444598  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B21552075  4.5812e+00 -3.7118e-03  4.0571e-01  7.1982e+00\nNGA-ADM2-72505758B2169568   1.4966e-02 -6.5905e-06  1.0149e-03  4.7000e-01\nNGA-ADM2-72505758B2190517   3.7568e-02 -2.7444e-04  5.2883e-02  1.6456e-01\nNGA-ADM2-72505758B21920023  4.5343e-01 -5.8659e-04  4.9895e-02  2.0326e+00\nNGA-ADM2-72505758B2204672   6.2843e+00 -1.8633e-02  2.0061e+00  4.4500e+00\nNGA-ADM2-72505758B22226897  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B22346210  3.4331e-02 -6.5905e-06  1.0149e-03  1.0778e+00\nNGA-ADM2-72505758B22432067  1.9683e-01 -5.4117e-04  5.1855e-02  8.6674e-01\nNGA-ADM2-72505758B22509400  5.3270e-04 -1.1721e-04  2.2589e-02  4.3242e-03\nNGA-ADM2-72505758B22625464  6.2100e-01 -1.1010e-03  1.0544e-01  1.9159e+00\nNGA-ADM2-72505758B22711214  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B22775279  1.2945e-01 -2.7444e-04  5.2883e-02  5.6411e-01\nNGA-ADM2-72505758B22890603  9.1903e-01 -6.5165e-04  1.6758e-01  2.2466e+00\nNGA-ADM2-72505758B22914768  1.7971e-01 -4.1587e-04  6.4017e-02  7.1192e-01\nNGA-ADM2-72505758B22969834  8.6775e-03 -7.9439e-05  1.5311e-02  7.0771e-02\nNGA-ADM2-72505758B23063504  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B23284206  1.9468e-01 -5.4117e-04  5.9340e-02  8.0141e-01\nNGA-ADM2-72505758B23339862  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B23406569  7.4582e-02 -1.6230e-04  2.4989e-02  4.7282e-01\nNGA-ADM2-72505758B23525102  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B23727233  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B23758727 -2.6266e-03 -5.4031e-05  6.9244e-03 -3.0915e-02\nNGA-ADM2-72505758B23938972  1.1005e-01 -2.7444e-04  7.0603e-02  4.1521e-01\nNGA-ADM2-72505758B24068194 -4.1930e-03 -4.9114e-06  4.7087e-04 -1.9300e-01\nNGA-ADM2-72505758B24079849  1.5220e-01 -3.0705e-04  3.3677e-02  8.3103e-01\nNGA-ADM2-72505758B24173949  9.0976e-02 -1.7136e-04  1.8797e-02  6.6480e-01\nNGA-ADM2-72505758B24287701 -2.7745e-01 -4.1587e-04  4.5607e-02 -1.2972e+00\nNGA-ADM2-72505758B24946110  3.9970e-01 -5.8659e-04  9.0281e-02  1.3322e+00\nNGA-ADM2-72505758B24975398  2.3957e+00 -7.1980e-03  6.8513e-01  2.9030e+00\nNGA-ADM2-72505758B25108439  2.1590e+00 -9.8389e-03  1.8778e+00  1.5827e+00\nNGA-ADM2-72505758B25110832  1.4782e-01 -3.4150e-04  6.5800e-02  5.7758e-01\nNGA-ADM2-72505758B25204428  4.0866e-01 -5.8659e-04  7.5136e-02  1.4930e+00\nNGA-ADM2-72505758B25323941  2.1532e-01 -5.4117e-04  8.3293e-02  7.4796e-01\nNGA-ADM2-72505758B25363477  3.7206e-01 -1.7136e-04  1.6426e-02  2.9043e+00\nNGA-ADM2-72505758B25708171  0.0000e+00  0.0000e+00  0.0000e+00         NaN\nNGA-ADM2-72505758B26082732  6.0650e-03 -6.3301e-05  6.9445e-03  7.3540e-02\nNGA-ADM2-72505758B26198977  2.4841e-01 -7.0140e-04  2.7090e-01  4.7861e-01\nNGA-ADM2-72505758B26243068  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B2628120   4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B26346364  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B26429015  1.3991e-01 -2.8619e-04  2.1887e-02  9.4764e-01\nNGA-ADM2-72505758B26523677  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B26556107 -1.9482e-02 -1.1721e-04  2.2589e-02 -1.2885e-01\nNGA-ADM2-72505758B2657339   4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B26581542  1.3723e+01 -7.8938e-02  5.0496e+00  6.1419e+00\nNGA-ADM2-72505758B27276798  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B27408614  2.4376e+00 -2.6376e-03  3.3715e-01  4.2027e+00\nNGA-ADM2-72505758B2745087  -2.3226e-02 -5.4117e-04  4.6033e-02 -1.0573e-01\nNGA-ADM2-72505758B27539273  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B27542400 -7.4060e-03 -4.2752e-07  4.0987e-05 -1.1567e+00\nNGA-ADM2-72505758B2760907  -4.9211e-02 -2.5869e-05  3.9837e-03 -7.7927e-01\nNGA-ADM2-72505758B27615672  4.0698e-01 -2.3510e-03  3.0061e-01  7.4657e-01\nNGA-ADM2-72505758B27700910  4.2299e-01 -5.8659e-04  4.4847e-02  2.0002e+00\nNGA-ADM2-72505758B27714394  1.4054e-02 -1.7053e-05  1.8709e-03  3.2532e-01\nNGA-ADM2-72505758B27717699 -2.5707e-03 -4.2752e-07  4.6904e-05 -3.7529e-01\nNGA-ADM2-72505758B27989153  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B28102942 -4.4581e-01 -1.1721e-04  4.5295e-02 -2.0941e+00\nNGA-ADM2-72505758B28219123  3.4616e+00 -3.5961e-03  3.4353e-01  5.9122e+00\nNGA-ADM2-72505758B28322663  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B28358277  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B28448754  2.2229e-01 -7.0140e-04  5.9654e-02  9.1301e-01\nNGA-ADM2-72505758B28451778  3.7374e-01 -1.0384e-03  1.3295e-01  1.0279e+00\nNGA-ADM2-72505758B28517619  6.1152e-01 -2.2592e-03  2.4730e-01  1.2342e+00\nNGA-ADM2-72505758B28558302  4.5402e-02 -6.3301e-05  9.7476e-03  4.6050e-01\nNGA-ADM2-72505758B28564088  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B28688505  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B28779634  2.6287e-02 -2.0075e-05  3.8694e-03  4.2291e-01\nNGA-ADM2-72505758B28994882  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B29272053  3.9968e-02 -2.5938e-06  2.4867e-04  2.5347e+00\nNGA-ADM2-72505758B29476596  1.7014e-01 -2.7444e-04  3.0101e-02  9.8223e-01\nNGA-ADM2-72505758B29578266  7.9042e-01 -3.9154e-04  1.0072e-01  2.4919e+00\nNGA-ADM2-72505758B29634978  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B29748439  1.9154e-02 -1.2418e-05  1.5915e-03  4.8044e-01\nNGA-ADM2-72505758B29886865 -2.8900e-02 -2.5869e-05  2.8381e-03 -5.4199e-01\nNGA-ADM2-72505758B30062209  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B30286847  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B30316327 -4.7296e-01 -3.7777e-04  3.2139e-02 -2.6361e+00\nNGA-ADM2-72505758B30341250 -3.1519e-02 -6.5905e-06  7.2305e-04 -1.1719e+00\nNGA-ADM2-72505758B30347581  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B30546335  2.9867e+00 -4.8350e-03  7.4098e-01  3.4753e+00\nNGA-ADM2-72505758B30682486  4.5343e-01 -5.8659e-04  4.9895e-02  2.0326e+00\nNGA-ADM2-72505758B3073896  -9.0178e-02 -1.0067e-05  1.9404e-03 -2.0470e+00\nNGA-ADM2-72505758B3096768   4.5343e-01 -5.8659e-04  4.9895e-02  2.0326e+00\nNGA-ADM2-72505758B31033090  1.6172e-02 -1.6230e-04  2.4989e-02  1.0333e-01\nNGA-ADM2-72505758B31054894  1.2823e-01 -1.3884e-04  2.1378e-02  8.7799e-01\nNGA-ADM2-72505758B31195973  4.5343e-01 -5.8659e-04  4.9895e-02  2.0326e+00\nNGA-ADM2-72505758B31206848  1.0732e-01 -1.3884e-04  1.3309e-02  9.3148e-01\nNGA-ADM2-72505758B31230586  5.1848e+00 -4.5726e-03  7.0095e-01  6.1983e+00\nNGA-ADM2-72505758B31246828  3.0012e-02 -1.2418e-05  1.5915e-03  7.5262e-01\nNGA-ADM2-72505758B31287755  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B31299772  1.0956e-01 -1.8759e-04  2.4037e-02  7.0783e-01\nNGA-ADM2-72505758B31351375  6.7143e-02 -2.4366e-04  4.6953e-02  3.1098e-01\nNGA-ADM2-72505758B31542029  1.5972e-01 -4.5581e-04  7.0161e-02  6.0472e-01\nNGA-ADM2-72505758B31597260  4.0196e+00 -3.9486e-03  2.7315e-01  7.6986e+00\nNGA-ADM2-72505758B31818357  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B31818553  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B3188194   5.6276e-02 -4.8993e-05  4.1696e-03  8.7228e-01\nNGA-ADM2-72505758B31996608  3.8282e-02 -3.6516e-05  7.0382e-03  4.5675e-01\nNGA-ADM2-72505758B32139672  1.3708e+00 -2.9406e-03  5.6513e-01  1.8274e+00\nNGA-ADM2-72505758B32177909 -4.1481e-02 -2.9563e-05  3.2434e-03 -7.2786e-01\nNGA-ADM2-72505758B32188730  1.4344e-01 -1.9733e-04  1.8914e-02  1.0444e+00\nNGA-ADM2-72505758B32218397  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B32330173  4.4896e-01 -5.8659e-04  1.1300e-01  1.3373e+00\nNGA-ADM2-72505758B32419485  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B32554889  3.0478e-01 -5.4117e-04  8.3293e-02  1.0579e+00\nNGA-ADM2-72505758B32611817  8.1494e-01 -3.8292e-03  3.6571e-01  1.3539e+00\nNGA-ADM2-72505758B32630687 -3.6920e-02 -9.7408e-05  9.3379e-03 -3.8106e-01\nNGA-ADM2-72505758B32774266  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B32794130  1.3640e-01 -2.4366e-04  4.6953e-02  6.3062e-01\nNGA-ADM2-72505758B32949816  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B3304967   4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B33054765  7.6715e+00 -2.7609e-02  2.5738e+00  4.7990e+00\nNGA-ADM2-72505758B33108582  4.3552e-01 -5.4117e-04  5.1855e-02  1.9149e+00\nNGA-ADM2-72505758B3317503   3.6579e+00 -4.7029e-03  3.9838e-01  5.8028e+00\nNGA-ADM2-72505758B33219881  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B33244779 -2.1214e-02 -1.2493e-04  2.4077e-02 -1.3591e-01\nNGA-ADM2-72505758B33343517  1.5034e-01 -3.7777e-04  4.1430e-02  7.4045e-01\nNGA-ADM2-72505758B33542533  5.0273e-02 -9.7408e-05  1.0686e-02  4.8727e-01\nNGA-ADM2-72505758B33577737  9.6220e-03 -2.1471e-04  2.3551e-02  6.4098e-02\nNGA-ADM2-72505758B3369984   1.1980e-01 -1.6230e-04  2.4989e-02  7.5889e-01\nNGA-ADM2-72505758B34009830  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B34036858  9.3746e-01 -5.5762e-04  1.0742e-01  2.8620e+00\nNGA-ADM2-72505758B34194291  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B34380318  2.2118e+00 -3.4823e-03  4.4475e-01  3.3217e+00\nNGA-ADM2-72505758B34441411  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B34494634  8.0853e-01 -1.9101e-03  4.9058e-01  1.1571e+00\nNGA-ADM2-72505758B34508441  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B34643703  4.4985e-01 -5.8659e-04  9.0281e-02  1.4991e+00\nNGA-ADM2-72505758B34822167  1.4140e+00 -8.7331e-03  7.3677e-01  1.6575e+00\nNGA-ADM2-72505758B34881213  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B35176966  1.7771e-01 -2.2512e-04  2.8846e-02  1.0477e+00\nNGA-ADM2-72505758B35597270  4.4149e-01 -5.8659e-04  4.9895e-02  1.9791e+00\nNGA-ADM2-72505758B35626837  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B35748968  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B35936626  4.5343e-01 -5.8659e-04  4.9895e-02  2.0326e+00\nNGA-ADM2-72505758B36147146 -1.6758e-03 -9.1702e-08  1.4122e-05 -4.4593e-01\nNGA-ADM2-72505758B3618695  -1.8805e-01 -2.7444e-04  3.5164e-02 -1.0014e+00\nNGA-ADM2-72505758B36277624  1.1788e-01 -4.1587e-04  8.0125e-02  4.1791e-01\nNGA-ADM2-72505758B36341125  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B36411974  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B36631288  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B36739173  2.7200e+00 -2.9406e-03  3.2167e-01  4.8009e+00\nNGA-ADM2-72505758B36818221 -8.1603e-02 -3.1948e-04  3.5039e-02 -4.3424e-01\nNGA-ADM2-72505758B36829366  4.0368e-01 -5.8659e-04  4.9895e-02  1.8099e+00\nNGA-ADM2-72505758B36860554  6.9785e-02 -1.1721e-04  1.8048e-02  5.2034e-01\nNGA-ADM2-72505758B36958634 -4.7282e-02 -4.9114e-06  6.2946e-04 -1.8844e+00\nNGA-ADM2-72505758B37006139  1.0904e+00 -4.3031e-04  6.6239e-02  4.2386e+00\nNGA-ADM2-72505758B37235287  4.5343e-01 -5.8659e-04  4.9895e-02  2.0326e+00\nNGA-ADM2-72505758B3729824  -3.7128e-02 -2.0075e-05  1.7085e-03 -8.9775e-01\nNGA-ADM2-72505758B37546318  6.3720e-01 -2.8619e-04  5.5148e-02  2.7146e+00\nNGA-ADM2-72505758B37687991  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B3771557   1.2230e-01 -2.7444e-04  7.0603e-02  4.6132e-01\nNGA-ADM2-72505758B37718139  4.0308e-02 -2.5869e-05  1.9789e-03  9.0669e-01\nNGA-ADM2-72505758B38224950 -4.6041e-02 -3.1948e-04  4.0933e-02 -2.2599e-01\nNGA-ADM2-72505758B3838497   4.2556e+00 -2.3510e-03  4.5209e-01  6.3327e+00\nNGA-ADM2-72505758B38387184  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B38470188  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B38532832  4.5120e-01 -5.8659e-04  5.6205e-02  1.9056e+00\nNGA-ADM2-72505758B38565081  2.1296e-01 -3.7777e-04  3.6204e-02  1.1212e+00\nNGA-ADM2-72505758B38716464  4.5291e-02 -9.7408e-05  8.2895e-03  4.9852e-01\nNGA-ADM2-72505758B38827784 -3.9162e-02 -8.5820e-05  6.5645e-03 -4.8230e-01\nNGA-ADM2-72505758B38868411  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B38957187 -1.9003e-01 -1.3884e-04  1.3309e-02 -1.6460e+00\nNGA-ADM2-72505758B38976800  1.1379e+00 -8.0641e-04  7.7250e-02  4.0968e+00\nNGA-ADM2-72505758B38989055  1.5106e+00 -3.0453e-03  7.8126e-01  1.7125e+00\nNGA-ADM2-72505758B39059766  2.3098e-01 -4.1587e-04  6.4017e-02  9.1457e-01\nNGA-ADM2-72505758B39110166  1.6505e-01 -4.0882e-05  3.4793e-03  2.7988e+00\nNGA-ADM2-72505758B39194027  4.4746e-01 -5.8659e-04  1.5086e-01  1.1536e+00\nNGA-ADM2-72505758B39432389  6.0909e-03 -4.9114e-06  7.5634e-04  2.2165e-01\nNGA-ADM2-72505758B39446185  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B39689947  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B40149693  1.3736e+00 -2.3510e-03  2.2487e-01  2.9016e+00\nNGA-ADM2-72505758B40157454  3.3178e+00 -3.9486e-03  4.3149e-01  5.0568e+00\nNGA-ADM2-72505758B40428434  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B40532579 -1.0827e-04 -9.1702e-08  1.4122e-05 -2.8786e-02\nNGA-ADM2-72505758B40651914  7.0885e-05 -9.1702e-08  1.0061e-05  2.2377e-02\nNGA-ADM2-72505758B40667848  4.5144e-01 -5.8659e-04  4.9895e-02  2.0237e+00\nNGA-ADM2-72505758B40714647  4.1871e-02 -6.3301e-05  9.7476e-03  4.2474e-01\nNGA-ADM2-72505758B40744784  1.0829e+00 -1.0222e-02  1.5581e+00  8.7573e-01\nNGA-ADM2-72505758B40746170  4.0567e-01 -5.8659e-04  7.5136e-02  1.4821e+00\nNGA-ADM2-72505758B40877575  4.5574e-02 -2.5869e-05  3.9837e-03  7.2246e-01\nNGA-ADM2-72505758B40987774  8.8575e-02 -1.8759e-04  2.0577e-02  6.1879e-01\nNGA-ADM2-72505758B41151402  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B41263993  1.2039e-01 -1.3884e-04  2.6757e-02  7.3685e-01\nNGA-ADM2-72505758B41363947  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B41458967  7.0319e-01 -2.8378e-03  3.6267e-01  1.1724e+00\nNGA-ADM2-72505758B41522993  2.4522e-01 -5.4031e-05  5.9275e-03  3.1858e+00\nNGA-ADM2-72505758B41606003 -4.8317e-02 -2.9563e-05  2.2615e-03 -1.0154e+00\nNGA-ADM2-72505758B41747981  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B41820351  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B41923004  5.3401e-02 -4.8993e-05  6.2789e-03  6.7453e-01\nNGA-ADM2-72505758B41928930  1.6910e-01 -2.8619e-04  3.6669e-02  8.8456e-01\nNGA-ADM2-72505758B41934932  4.6990e-03 -9.1702e-08  1.1753e-05  1.3707e+00\nNGA-ADM2-72505758B41955915  3.9210e-03 -8.5820e-05  7.3034e-03  4.6886e-02\nNGA-ADM2-72505758B4198149   1.5141e-01 -2.4366e-04  3.7514e-02  7.8299e-01\nNGA-ADM2-72505758B42001588  4.5343e-01 -5.8659e-04  2.2658e-01  9.5381e-01\nNGA-ADM2-72505758B42014722  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B42099323  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B42200288  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B42248280  6.1124e+00 -5.9579e-03  9.1204e-01  6.4066e+00\nNGA-ADM2-72505758B42260172 -6.2259e-01 -4.1587e-04  6.4017e-02 -2.4590e+00\nNGA-ADM2-72505758B42412373  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B42533808  1.5269e-02 -4.9114e-06  4.1800e-04  7.4705e-01\nNGA-ADM2-72505758B42614095  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B4268401   1.2316e+00 -1.7465e-03  2.2344e-01  2.6091e+00\nNGA-ADM2-72505758B42691841  1.1277e-01 -2.7444e-04  2.3351e-02  7.3980e-01\nNGA-ADM2-72505758B42781808  5.5374e-02 -1.1721e-04  1.8048e-02  4.1306e-01\nNGA-ADM2-72505758B42822246 -2.6142e-02 -1.9733e-04  3.0382e-02 -1.4885e-01\nNGA-ADM2-72505758B43208251  2.3741e-02 -2.5938e-06  4.9995e-04  1.0619e+00\nNGA-ADM2-72505758B43213978 -5.7511e-02 -1.1721e-04  2.2589e-02 -3.8188e-01\nNGA-ADM2-72505758B43516104  3.4012e-01 -6.5165e-04  1.6758e-01  8.3243e-01\nNGA-ADM2-72505758B43671176  2.4348e-01 -3.4150e-04  3.2729e-02  1.3477e+00\nNGA-ADM2-72505758B4371453   5.9002e-01 -6.5165e-04  7.1447e-02  2.2098e+00\nNGA-ADM2-72505758B43939903  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B43980846  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B44064464 -1.4817e-01 -6.3301e-05  8.1125e-03 -1.6444e+00\nNGA-ADM2-72505758B44073392 -2.6395e-02 -1.4723e-04  1.4113e-02 -2.2094e-01\nNGA-ADM2-72505758B4407900  -1.2146e-03 -1.7053e-05  1.8709e-03 -2.7688e-02\nNGA-ADM2-72505758B44145348 -1.2661e-01 -3.7777e-04  3.6204e-02 -6.6341e-01\nNGA-ADM2-72505758B44194354  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B44226036  1.4190e+00 -8.2049e-03  1.0430e+00  1.3975e+00\nNGA-ADM2-72505758B44240493  9.2697e-02 -2.7444e-04  5.2883e-02  4.0429e-01\nNGA-ADM2-72505758B44273667  7.8544e-02 -7.9439e-05  1.2233e-02  7.1087e-01\nNGA-ADM2-72505758B44395382 -1.4795e-02 -2.5869e-05  4.9861e-03 -2.0916e-01\nNGA-ADM2-72505758B44548256  4.2782e-01 -1.9733e-04  3.8027e-02  2.1949e+00\nNGA-ADM2-72505758B44695959  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B44831066  4.7586e-01 -8.5820e-05  7.3034e-03  5.5692e+00\nNGA-ADM2-72505758B44941782  6.3362e-01 -4.7092e-04  7.2486e-02  2.3552e+00\nNGA-ADM2-72505758B45015575  4.0194e-01 -5.8659e-04  5.6205e-02  1.6979e+00\nNGA-ADM2-72505758B45047614  1.1664e+00 -4.7092e-04  9.0726e-02  3.8740e+00\nNGA-ADM2-72505758B4505528   2.0511e-02 -1.7053e-05  2.6261e-03  4.0059e-01\nNGA-ADM2-72505758B45148365  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B45209095 -3.7701e-02 -4.8993e-05  7.5445e-03 -4.3348e-01\nNGA-ADM2-72505758B45319201  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B4532539   4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B45363429  1.4053e-01 -1.6230e-04  2.4989e-02  8.9000e-01\nNGA-ADM2-72505758B45556353  1.7018e-01 -4.9757e-04  7.6587e-02  6.1673e-01\nNGA-ADM2-72505758B45800050 -1.0404e-01 -6.3301e-05  1.6288e-02 -8.1473e-01\nNGA-ADM2-72505758B4580856   1.1997e+00 -9.7765e-04  1.5041e-01  3.0959e+00\nNGA-ADM2-72505758B45966975  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B46314370  2.7445e+00 -2.3510e-03  2.5733e-01  5.4149e+00\nNGA-ADM2-72505758B46349170  1.1680e-01 -4.1587e-04  4.5607e-02  5.4888e-01\nNGA-ADM2-72505758B4635888  -4.5954e-02 -3.6516e-05  5.6232e-03 -6.1233e-01\nNGA-ADM2-72505758B46467475 -6.7693e-02 -4.0882e-05  5.2394e-03 -9.3464e-01\nNGA-ADM2-72505758B46624629 -1.9395e-03 -4.9114e-06  9.4666e-04 -6.2879e-02\nNGA-ADM2-72505758B46727460 -1.3346e-01 -6.3301e-05  9.7476e-03 -1.3511e+00\nNGA-ADM2-72505758B46745149  3.5198e-01 -1.9733e-04  3.0382e-02  2.0205e+00\nNGA-ADM2-72505758B46906771 -8.3884e-02 -5.8659e-04  9.0281e-02 -2.7722e-01\nNGA-ADM2-72505758B46945820  1.3107e+00 -9.7765e-04  1.8826e-01  3.0230e+00\nNGA-ADM2-72505758B47092163  5.2907e-01 -2.0810e-03  4.0027e-01  8.3955e-01\nNGA-ADM2-72505758B47276571  1.4248e+00 -1.6674e-03  3.2086e-01  2.5183e+00\nNGA-ADM2-72505758B47502716  1.2231e-01 -1.6230e-04  4.1757e-02  5.9936e-01\nNGA-ADM2-72505758B47558893  4.4985e-01 -5.8659e-04  9.0281e-02  1.4991e+00\nNGA-ADM2-72505758B47569121  7.0142e+00 -4.3175e-03  1.1062e+00  6.6730e+00\nNGA-ADM2-72505758B47597427  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B47868503  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B47972472  3.1826e-01 -7.5299e-04  7.2137e-02  1.1878e+00\nNGA-ADM2-72505758B48054636  2.2393e-02 -2.1471e-04  4.1376e-02  1.1114e-01\nNGA-ADM2-72505758B48100225  5.2358e-02 -9.7408e-05  1.0686e-02  5.0744e-01\nNGA-ADM2-72505758B48120393  2.4629e-01 -5.4117e-04  1.0425e-01  7.6446e-01\nNGA-ADM2-72505758B48161598  4.5343e-01 -5.8659e-04  4.9895e-02  2.0326e+00\nNGA-ADM2-72505758B48168473  2.5028e-02 -6.5905e-06  8.4466e-04  8.6140e-01\nNGA-ADM2-72505758B48317000  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B485966    1.5372e-01 -2.4366e-04  3.7514e-02  7.9491e-01\nNGA-ADM2-72505758B48644703  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B48817484  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B48854878  7.2467e-02 -1.3884e-04  1.7791e-02  5.4433e-01\nNGA-ADM2-72505758B48978893  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B48991596 -6.9521e-02 -1.1721e-04  2.2589e-02 -4.6178e-01\nNGA-ADM2-72505758B49088403  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B49090421 -1.8028e-02 -1.0067e-05  1.5503e-03 -4.5762e-01\nNGA-ADM2-72505758B49591931  3.6746e-01 -5.8659e-04  9.0281e-02  1.2249e+00\nNGA-ADM2-72505758B49639858 -1.7493e-01 -1.1721e-04  1.5020e-02 -1.4264e+00\nNGA-ADM2-72505758B49756103  4.3836e-02 -1.3884e-04  1.5230e-02  3.5633e-01\nNGA-ADM2-72505758B49835051  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B49932072  3.0269e+00 -6.7193e-03  1.2864e+00  2.6746e+00\nNGA-ADM2-72505758B50036017  5.1285e-02 -6.3301e-05  9.7476e-03  5.2009e-01\nNGA-ADM2-72505758B50480947  6.6680e-02 -7.9439e-05  1.2233e-02  6.0360e-01\nNGA-ADM2-72505758B50499057  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B50500527  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B50566658  4.7266e-02 -1.2418e-05  8.6242e-04  1.6099e+00\nNGA-ADM2-72505758B50825869  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B5084877   3.3791e-01 -2.0810e-03  2.6615e-01  6.5903e-01\nNGA-ADM2-72505758B50871717  1.7930e+00 -1.7465e-03  4.4864e-01  2.6795e+00\nNGA-ADM2-72505758B5090387   4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B50946056  1.3673e+00 -1.2316e-03  1.5765e-01  3.4466e+00\nNGA-ADM2-72505758B51199259  7.6999e-02 -1.8759e-04  2.0577e-02  5.3809e-01\nNGA-ADM2-72505758B5121987  -1.2241e-01 -3.7777e-04  4.8398e-02 -5.5472e-01\nNGA-ADM2-72505758B51332829 -6.0110e-02 -3.5459e-04  1.3700e-01 -1.6144e-01\nNGA-ADM2-72505758B51610317  1.3460e-01 -3.1948e-04  1.2344e-01  3.8403e-01\nNGA-ADM2-72505758B5164375   4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B51901764 -9.1926e-02 -2.1471e-04  3.3057e-02 -5.0442e-01\nNGA-ADM2-72505758B51902603  1.4828e-01 -3.7777e-04  5.8154e-02  6.1646e-01\nNGA-ADM2-72505758B52057503  1.4792e-01 -4.0882e-05  6.2955e-03  1.8648e+00\nNGA-ADM2-72505758B52690633  2.2048e-01 -5.4117e-04  6.9321e-02  8.3948e-01\nNGA-ADM2-72505758B52856855 -2.5154e-02 -1.8759e-04  2.8883e-02 -1.4690e-01\nNGA-ADM2-72505758B528653    4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B52884892  4.5343e-01 -5.8659e-04  2.2658e-01  9.5381e-01\nNGA-ADM2-72505758B53166523  6.9954e-02 -2.9563e-05  3.2434e-03  1.2288e+00\nNGA-ADM2-72505758B53799809  1.4294e-01 -3.0705e-04  3.3677e-02  7.8059e-01\nNGA-ADM2-72505758B53984624  9.4534e-02 -2.7444e-04  4.2252e-02  4.6124e-01\nNGA-ADM2-72505758B54152816  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B54320674  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B54394765  2.1071e-01 -1.9733e-04  1.5092e-02  1.7168e+00\nNGA-ADM2-72505758B54495757 -4.5438e-03 -3.6516e-05  4.6799e-03 -6.5887e-02\nNGA-ADM2-72505758B54638889  4.5088e-01 -5.8659e-04  6.4318e-02  1.7801e+00\nNGA-ADM2-72505758B54686951  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B54729887  6.1371e-02 -2.4366e-04  3.7514e-02  3.1812e-01\nNGA-ADM2-72505758B54838860  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B54904664  1.9327e-01 -4.9757e-04  7.6587e-02  7.0018e-01\nNGA-ADM2-72505758B55254312  4.5120e-01 -5.8659e-04  5.6205e-02  1.9056e+00\nNGA-ADM2-72505758B55275980  1.9409e-01 -3.1948e-04  6.1559e-02  7.8354e-01\nNGA-ADM2-72505758B55501663  3.7703e-01 -5.4117e-04  8.3293e-02  1.3083e+00\nNGA-ADM2-72505758B5575139   9.2479e-02 -7.9439e-05  8.7148e-03  9.9149e-01\nNGA-ADM2-72505758B5578796   4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B5592240   4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B56024064  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B56032953  4.4985e-01 -5.8659e-04  9.0281e-02  1.4991e+00\nNGA-ADM2-72505758B56149510  1.6927e-02 -1.5863e-06  1.7404e-04  1.2832e+00\nNGA-ADM2-72505758B5623512   4.4597e-02 -3.0705e-04  2.9429e-02  2.6175e-01\nNGA-ADM2-72505758B56331112  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B5637778   4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B56394634  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B56444221  4.4448e-01 -5.8659e-04  7.5136e-02  1.6237e+00\nNGA-ADM2-72505758B56744751  2.2452e-01 -4.0882e-05  6.2955e-03  2.8302e+00\nNGA-ADM2-72505758B56799054  2.1834e-02 -1.7053e-05  2.1855e-03  4.6741e-01\nNGA-ADM2-72505758B56816258  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B56925175 -2.0036e-01 -1.9946e-03  3.8369e-01 -3.2024e-01\nNGA-ADM2-72505758B56934856  1.0863e-01 -2.8619e-04  5.5148e-02  4.6382e-01\nNGA-ADM2-72505758B56955836  1.9989e-01 -2.7444e-04  4.2252e-02  9.7380e-01\nNGA-ADM2-72505758B57073987  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B5716143   4.3552e-01 -5.4117e-04  1.3918e-01  1.1688e+00\nNGA-ADM2-72505758B57235084  2.1057e-01 -3.7777e-04  9.7175e-02  6.7669e-01\nNGA-ADM2-72505758B57280378 -9.9667e-02 -4.8993e-05  5.3749e-03 -1.3588e+00\nNGA-ADM2-72505758B57306951  3.2898e-02 -3.0705e-04  2.6125e-02  2.0544e-01\nNGA-ADM2-72505758B57412385  5.3086e-01 -2.8619e-04  5.5148e-02  2.2618e+00\nNGA-ADM2-72505758B57514033  8.0704e-02 -6.3301e-05  9.7476e-03  8.1806e-01\nNGA-ADM2-72505758B57638513  1.1436e+00 -2.5402e-03  4.8838e-01  1.6401e+00\nNGA-ADM2-72505758B57815144  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B57963290  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B58223447  4.8117e+00 -1.1828e-02  1.2824e+00  4.2595e+00\nNGA-ADM2-72505758B5824220   4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B58295941  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B5834354   8.1097e-03 -1.2418e-05  1.3623e-03  2.2005e-01\nNGA-ADM2-72505758B58432429  4.9277e-01 -7.5299e-04  1.1587e-01  1.4498e+00\nNGA-ADM2-72505758B58640661 -8.0003e-02 -2.8378e-03  3.1046e-01 -1.3849e-01\nNGA-ADM2-72505758B5875612   4.5045e-01 -5.8659e-04  7.5136e-02  1.6455e+00\nNGA-ADM2-72505758B59054861  1.6441e-01 -3.4150e-04  3.7453e-02  8.5131e-01\nNGA-ADM2-72505758B59091347 -8.6499e-01 -2.4366e-04  4.6953e-02 -3.9907e+00\nNGA-ADM2-72505758B59710243  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B5987673   4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B59879704  4.3390e+00 -1.2248e-02  3.1132e+00  2.4661e+00\nNGA-ADM2-72505758B60171436  2.1597e+00 -5.3818e-03  5.1319e-01  3.0222e+00\nNGA-ADM2-72505758B60425686  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B60502549  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B60765301  1.5450e+00 -2.1057e-02  2.2616e+00  1.0414e+00\nNGA-ADM2-72505758B61058152  5.0309e-02 -2.0075e-05  3.8694e-03  8.0909e-01\nNGA-ADM2-72505758B61328021 -4.7732e-02 -3.0705e-04  3.9341e-02 -2.3910e-01\nNGA-ADM2-72505758B6140913   2.4282e+00 -2.2592e-03  3.4712e-01  4.1253e+00\nNGA-ADM2-72505758B614754    4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B61554030  4.5045e-01 -5.8659e-04  7.5136e-02  1.6455e+00\nNGA-ADM2-72505758B61584452  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B61679125  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B6178712   4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B61803394  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B61833663  4.4448e-01 -5.8659e-04  2.2658e-01  9.3500e-01\nNGA-ADM2-72505758B61849091  1.5612e-01 -5.8659e-04  4.4847e-02  7.3998e-01\nNGA-ADM2-72505758B6187391   2.9540e-02 -1.8759e-04  2.8883e-02  1.7492e-01\nNGA-ADM2-72505758B61968000 -1.6243e-01 -9.7408e-05  1.0686e-02 -1.5704e+00\nNGA-ADM2-72505758B62110738  3.3301e+00 -1.3695e-03  2.6362e-01  6.4887e+00\nNGA-ADM2-72505758B62204667  3.8627e-01 -5.8659e-04  1.1300e-01  1.1508e+00\nNGA-ADM2-72505758B62431971  1.0249e-01 -2.5474e-04  3.9220e-02  5.1881e-01\nNGA-ADM2-72505758B62522831  2.1074e+00 -2.5402e-03  2.7799e-01  4.0018e+00\nNGA-ADM2-72505758B6253464   4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B62747799  5.0483e+00 -5.2424e-03  8.0308e-01  5.6391e+00\nNGA-ADM2-72505758B62799042  4.5144e-01 -5.8659e-04  4.9895e-02  2.0237e+00\nNGA-ADM2-72505758B62812657  2.4149e+00 -4.1927e-03  4.0028e-01  3.8237e+00\nNGA-ADM2-72505758B62943467  3.4708e-02 -1.3884e-04  1.7791e-02  2.6125e-01\nNGA-ADM2-72505758B62956588  1.7014e-01 -2.0075e-05  2.5729e-03  3.3547e+00\nNGA-ADM2-72505758B63001706  6.8508e-01 -1.2316e-03  1.3495e-01  1.8682e+00\nNGA-ADM2-72505758B63074678  2.5317e-02 -2.7444e-04  5.2883e-02  1.1128e-01\nNGA-ADM2-72505758B63382694 -4.5048e-03 -4.2752e-07  8.2404e-05 -4.9621e-01\nNGA-ADM2-72505758B63641874  5.1210e-01 -2.8619e-04  2.7430e-02  3.0937e+00\nNGA-ADM2-72505758B63662909  6.1049e-02 -2.7444e-04  7.0603e-02  2.3079e-01\nNGA-ADM2-72505758B636923    1.0754e-01 -2.4366e-04  3.1221e-02  6.1003e-01\nNGA-ADM2-72505758B63774666  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B63992612  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B64173383  1.3695e-01 -1.3884e-04  2.1378e-02  9.3759e-01\nNGA-ADM2-72505758B64244244  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B64250128  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B64450018  3.1256e+00 -6.4092e-03  5.4199e-01  4.2543e+00\nNGA-ADM2-72505758B64474046  3.7761e-02 -1.1721e-04  1.8048e-02  2.8196e-01\nNGA-ADM2-72505758B64572421  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B64703850  1.0345e-01 -1.3884e-04  1.1815e-02  9.5301e-01\nNGA-ADM2-72505758B64792691  3.1868e+00 -6.7193e-03  5.6802e-01  4.2373e+00\nNGA-ADM2-72505758B6536467   3.8422e-01 -4.5726e-03  7.0095e-01  4.6438e-01\nNGA-ADM2-72505758B65494204  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B65514383  7.7383e-02 -2.7444e-04  4.2252e-02  3.7780e-01\nNGA-ADM2-72505758B65565348  1.5556e+00 -1.2997e-03  3.3401e-01  2.6939e+00\nNGA-ADM2-72505758B65644548  7.8563e-01 -1.6674e-03  2.1335e-01  1.7045e+00\nNGA-ADM2-72505758B65886725  2.5317e-01 -5.4117e-04  8.3293e-02  8.7910e-01\nNGA-ADM2-72505758B65916530  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B66076488  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B66114245  8.7157e-02 -9.7408e-05  9.3379e-03  9.0295e-01\nNGA-ADM2-72505758B6619157   4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B66230476 -1.5289e-01 -3.1948e-04  2.0306e-02 -1.0706e+00\nNGA-ADM2-72505758B66286397  4.5120e-01 -5.8659e-04  5.6205e-02  1.9056e+00\nNGA-ADM2-72505758B66300646  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B66308875 -2.4064e-02 -4.9114e-06  1.8982e-03 -5.5222e-01\nNGA-ADM2-72505758B66311687  1.7502e-02 -1.0067e-05  1.1045e-03  5.2695e-01\nNGA-ADM2-72505758B66384798  1.2750e+00 -1.3330e-02  1.2609e+00  1.1473e+00\nNGA-ADM2-72505758B6675111  -1.1980e-01 -5.1335e-04  6.5760e-02 -4.6516e-01\nNGA-ADM2-72505758B67103889 -1.9496e-02 -2.5869e-05  4.9861e-03 -2.7574e-01\nNGA-ADM2-72505758B67188591  4.7998e-01 -1.8273e-03  1.7487e-01  1.1522e+00\nNGA-ADM2-72505758B67228552 -3.6522e-03 -2.5938e-06  4.9995e-04 -1.6323e-01\nNGA-ADM2-72505758B67267634  2.5011e+00 -6.8770e-03  5.2246e-01  3.4697e+00\nNGA-ADM2-72505758B67283121  2.0436e+00 -2.6376e-03  2.5221e-01  4.0745e+00\nNGA-ADM2-72505758B6732783  -1.2585e-02 -2.5938e-06  4.9995e-04 -5.6272e-01\nNGA-ADM2-72505758B67592189  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B67778003 -2.9551e-02 -7.9439e-05  1.2233e-02 -2.6647e-01\nNGA-ADM2-72505758B6786568   4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B67905963 -4.2520e-02 -1.2418e-05  3.1954e-03 -7.5197e-01\nNGA-ADM2-72505758B68001848  1.3114e-01 -1.0446e-04  2.6878e-02  8.0051e-01\nNGA-ADM2-72505758B68194313  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B68200680 -3.5530e-03 -2.5938e-06  3.3243e-04 -1.9473e-01\nNGA-ADM2-72505758B68356378  4.5343e-01 -5.8659e-04  4.4847e-02  2.1439e+00\nNGA-ADM2-72505758B68486014  7.3896e+00 -1.2461e-02  1.5771e+00  5.8941e+00\nNGA-ADM2-72505758B68552788  2.9102e-01 -5.4117e-04  8.3293e-02  1.0102e+00\nNGA-ADM2-72505758B68678547  7.4255e-02 -6.5165e-04  1.2552e-01  2.1143e-01\nNGA-ADM2-72505758B6884405   4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B68875813  4.9534e-01 -2.0810e-03  4.0027e-01  7.8623e-01\nNGA-ADM2-72505758B68878432  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B68896460 -3.0259e-02 -5.4031e-05  1.0414e-02 -2.9598e-01\nNGA-ADM2-72505758B69061814  3.2060e-03 -9.1702e-08  1.0061e-05  1.0108e+00\nNGA-ADM2-72505758B69218817  1.5946e-01 -1.9733e-04  5.0768e-02  7.0858e-01\nNGA-ADM2-72505758B69255840  6.8544e-02 -6.3301e-05  8.1125e-03  7.6172e-01\nNGA-ADM2-72505758B69267419  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B69319692  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B69353048  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B69357183  1.0385e+00 -1.2316e-03  1.5765e-01  2.6187e+00\nNGA-ADM2-72505758B69384871 -2.1920e-01 -6.3301e-05  6.9445e-03 -2.6296e+00\nNGA-ADM2-72505758B69642516  1.2144e-01 -4.0882e-05  6.2955e-03  1.5311e+00\nNGA-ADM2-72505758B69788799  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B70059085  8.4271e-01 -1.4413e-03  3.7035e-01  1.3871e+00\nNGA-ADM2-72505758B70119517  2.1086e-01 -2.1471e-04  2.3551e-02  1.3754e+00\nNGA-ADM2-72505758B70167647 -1.3802e-01 -1.5902e-03  1.1027e-01 -4.1084e-01\nNGA-ADM2-72505758B70182243  1.8984e-01 -3.0705e-04  3.9341e-02  9.5865e-01\nNGA-ADM2-72505758B70270736  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B70271338  1.4230e+00 -1.5902e-03  1.7419e-01  3.4134e+00\nNGA-ADM2-72505758B70495723 -2.6749e-02 -2.7444e-04  5.2883e-02 -1.1513e-01\nNGA-ADM2-72505758B70869724  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B70905299  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B70998471  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B71477681  5.1971e-02 -1.6230e-04  2.4989e-02  3.2979e-01\nNGA-ADM2-72505758B718280    9.2798e+00 -1.4688e-02  1.5878e+00  7.3761e+00\nNGA-ADM2-72505758B7184000   4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B71906601  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B71918331  2.7246e-01 -4.1587e-04  8.0125e-02  9.6400e-01\nNGA-ADM2-72505758B71990951  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B72019004  6.2395e-03 -4.8993e-05  4.1696e-03  9.7388e-02\nNGA-ADM2-72505758B72123387  1.5576e+00 -7.1980e-03  7.8402e-01  1.7673e+00\nNGA-ADM2-72505758B7217003   4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B72331537  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B72340078  2.8840e-01 -4.9757e-04  6.3739e-02  1.1443e+00\nNGA-ADM2-72505758B72369186  1.0236e+00 -2.2512e-04  2.4693e-02  6.5155e+00\nNGA-ADM2-72505758B72408011  4.4896e-01 -5.8659e-04  1.1300e-01  1.3373e+00\nNGA-ADM2-72505758B72527598  2.4059e-01 -4.3031e-04  4.1238e-02  1.1869e+00\nNGA-ADM2-72505758B72583543  3.9362e-02 -1.1721e-04  1.8048e-02  2.9387e-01\nNGA-ADM2-72505758B72901624  1.9551e-01 -3.7777e-04  4.1430e-02  9.6238e-01\nNGA-ADM2-72505758B72996990  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B73155659  1.8254e-01 -5.8659e-04  5.6205e-02  7.7242e-01\nNGA-ADM2-72505758B73169585 -8.6779e-02 -2.7444e-04  4.2252e-02 -4.2084e-01\nNGA-ADM2-72505758B7318634   2.5638e+00 -2.9406e-03  5.6513e-01  3.4144e+00\nNGA-ADM2-72505758B7324564   3.0134e+00 -1.1212e-02  1.7073e+00  2.3148e+00\nNGA-ADM2-72505758B73267274  9.2212e-02 -2.9563e-05  5.6981e-03  1.2220e+00\nNGA-ADM2-72505758B73302858  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B73332929  7.4811e-01 -1.2316e-03  1.3495e-01  2.0398e+00\nNGA-ADM2-72505758B73850861  8.9904e-01 -5.5762e-04  8.5825e-02  3.0707e+00\nNGA-ADM2-72505758B74167895  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B74224076  3.1394e-01 -2.8378e-03  3.1046e-01  5.6853e-01\nNGA-ADM2-72505758B74273353  3.3260e-01 -4.5581e-04  8.7816e-02  1.1239e+00\nNGA-ADM2-72505758B74442045  6.7420e+00 -1.0811e-02  1.6468e+00  5.2621e+00\nNGA-ADM2-72505758B74527534  2.4206e-02 -1.0067e-05  1.5503e-03  6.1504e-01\nNGA-ADM2-72505758B74576641  1.5065e-01 -1.1721e-04  1.5020e-02  1.2302e+00\nNGA-ADM2-72505758B74718112  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B7490938   6.7204e-02 -4.8993e-05  1.2607e-02  5.9897e-01\nNGA-ADM2-72505758B75034141  5.7376e+00 -5.9579e-03  7.5905e-01  6.5924e+00\nNGA-ADM2-72505758B75040986 -2.1624e-01 -1.9733e-04  7.6251e-02 -7.8239e-01\nNGA-ADM2-72505758B75230852  1.1230e+00 -5.1048e-03  5.5720e-01  1.5113e+00\nNGA-ADM2-72505758B7553151   2.3322e+00 -2.7368e-03  4.2030e-01  3.6015e+00\nNGA-ADM2-72505758B75536077  7.4198e-02 -6.5905e-06  1.0149e-03  2.3293e+00\nNGA-ADM2-72505758B75784992  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B75801679  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B75908239  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B75983929 -1.0206e-02 -1.2418e-05  1.9123e-03 -2.3311e-01\nNGA-ADM2-72505758B76052259  3.2115e-02 -1.7053e-05  2.6261e-03  6.2704e-01\nNGA-ADM2-72505758B76392163 -1.1298e-01 -4.8993e-05  5.3749e-03 -1.5403e+00\nNGA-ADM2-72505758B76566778 -1.5789e-02 -6.5905e-06  8.4466e-04 -5.4303e-01\nNGA-ADM2-72505758B7691229   2.3855e-02 -2.4366e-04  4.6953e-02  1.1121e-01\nNGA-ADM2-72505758B77062793  4.4746e-01 -5.8659e-04  1.5086e-01  1.1536e+00\nNGA-ADM2-72505758B7732292   8.1107e-02 -3.6516e-05  4.6799e-03  1.1861e+00\nNGA-ADM2-72505758B77767589 -6.9215e-02 -1.7136e-04  2.1959e-02 -4.6593e-01\nNGA-ADM2-72505758B77907079  5.2450e-01 -9.7765e-04  1.5041e-01  1.3549e+00\nNGA-ADM2-72505758B78258316 -3.8245e-03 -2.5869e-05  3.3154e-03 -6.5971e-02\nNGA-ADM2-72505758B783054    2.4591e+00 -3.4823e-03  8.9298e-01  2.6059e+00\nNGA-ADM2-72505758B78395267  7.9393e-02 -1.1721e-04  1.8048e-02  5.9185e-01\nNGA-ADM2-72505758B7845389   3.1015e-01 -5.8659e-04  5.6205e-02  1.3107e+00\nNGA-ADM2-72505758B78492046  1.8697e-01 -1.8759e-04  2.0577e-02  1.3047e+00\nNGA-ADM2-72505758B78527113  4.5088e-01 -5.8659e-04  6.4318e-02  1.7801e+00\nNGA-ADM2-72505758B78527729  4.5088e-01 -5.8659e-04  6.4318e-02  1.7801e+00\nNGA-ADM2-72505758B78555816  4.1569e-02 -4.8993e-05  5.3749e-03  5.6767e-01\nNGA-ADM2-72505758B7855953   4.0112e-01 -5.4117e-04  4.1376e-02  1.9746e+00\nNGA-ADM2-72505758B78597532  8.3800e-01 -2.5402e-03  3.9020e-01  1.3456e+00\nNGA-ADM2-72505758B78619683 -6.6675e-02 -1.2493e-04  1.1976e-02 -6.0813e-01\nNGA-ADM2-72505758B78698197 -2.5281e-02 -1.6230e-04  1.2560e-01 -7.0877e-02\nNGA-ADM2-72505758B78741094  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B79155077  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B79178637  7.3751e-01 -5.1335e-04  1.3203e-01  2.0311e+00\nNGA-ADM2-72505758B79193959  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B79316383  5.4055e-01 -1.0384e-03  4.0092e-01  8.5534e-01\nNGA-ADM2-72505758B79444654  3.7716e+00 -2.3510e-03  4.5209e-01  5.6128e+00\nNGA-ADM2-72505758B79493017  3.5295e-01 -5.4117e-04  8.3293e-02  1.2248e+00\nNGA-ADM2-72505758B7968540   5.0995e-01 -8.0641e-04  1.2409e-01  1.4500e+00\nNGA-ADM2-72505758B79803896  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B79815894  7.2133e-02 -3.0705e-04  5.9166e-02  2.9781e-01\nNGA-ADM2-72505758B79902123  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B79945925  2.3103e-03 -9.7408e-05  1.8773e-02  1.7572e-02\nNGA-ADM2-72505758B79983056  2.6950e-02 -3.6516e-05  4.0061e-03  4.2637e-01\nNGA-ADM2-72505758B80057854  4.0180e-01 -3.1948e-04  3.5039e-02  2.1482e+00\nNGA-ADM2-72505758B80290097  2.0710e-01 -1.6230e-04  4.1757e-02  1.0143e+00\nNGA-ADM2-72505758B8045942   4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B80517430  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B80733792  2.3253e-01 -5.4117e-04  8.3293e-02  8.0757e-01\nNGA-ADM2-72505758B80737371 -2.8470e-03 -4.2752e-07  4.6904e-05 -4.1564e-01\nNGA-ADM2-72505758B80966644  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B81144344  1.7925e-01 -3.4150e-04  5.2572e-02  7.8326e-01\nNGA-ADM2-72505758B8143254   2.0954e+00 -1.5156e-02  1.9130e+00  1.5260e+00\nNGA-ADM2-72505758B8152058   3.2027e-02 -1.0067e-05  2.5905e-03  6.2945e-01\nNGA-ADM2-72505758B81562716  2.5904e+00 -6.1065e-03  6.6587e-01  3.1820e+00\nNGA-ADM2-72505758B81594808  2.0476e-01 -3.4150e-04  8.7848e-02  6.9199e-01\nNGA-ADM2-72505758B81600634  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B81840583 -2.6164e-03 -9.1702e-08  2.3598e-05 -5.3858e-01\nNGA-ADM2-72505758B8232613   2.2649e-02 -5.4117e-04  4.6033e-02  1.0808e-01\nNGA-ADM2-72505758B82571199  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B82611067  1.9248e-03 -1.5863e-06  1.5209e-04  1.5621e-01\nNGA-ADM2-72505758B82612540  6.2159e-02 -9.7408e-05  1.4999e-02  5.0833e-01\nNGA-ADM2-72505758B82650021  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B82952463  1.5341e-01 -4.5581e-04  7.0161e-02  5.8088e-01\nNGA-ADM2-72505758B82980400 -6.8442e-01 -4.5581e-04  1.1724e-01 -1.9975e+00\nNGA-ADM2-72505758B83115922  1.6424e+00 -1.1010e-03  2.1197e-01  3.5696e+00\nNGA-ADM2-72505758B83213265  7.1258e-02 -2.7444e-04  3.5164e-02  3.8146e-01\nNGA-ADM2-72505758B83356374  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B83595220  4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B83712041  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B83816053  1.2776e-02 -1.5863e-06  2.4429e-04  8.1749e-01\nNGA-ADM2-72505758B83963728  3.3919e-01 -5.4117e-04  4.1376e-02  1.6702e+00\nNGA-ADM2-72505758B83971794  4.0663e+00 -3.7118e-03  4.0571e-01  6.3898e+00\nNGA-ADM2-72505758B84114048  2.7804e-02 -1.8759e-04  2.0577e-02  1.9514e-01\nNGA-ADM2-72505758B84194123  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B84339715  7.6317e-01 -1.4413e-03  5.5625e-01  1.0252e+00\nNGA-ADM2-72505758B84457876  2.7866e-01 -4.5581e-04  1.1724e-01  8.1517e-01\nNGA-ADM2-72505758B84478450  2.4120e-01 -3.4150e-04  4.3753e-02  1.1548e+00\nNGA-ADM2-72505758B84831958  1.9848e-01 -3.0705e-04  5.9166e-02  8.1723e-01\nNGA-ADM2-72505758B84865629  2.2364e+00 -2.6376e-03  4.0511e-01  3.5177e+00\nNGA-ADM2-72505758B85138406  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B85275479  3.8803e-02 -9.7408e-05  2.5064e-02  2.4572e-01\nNGA-ADM2-72505758B85519087  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B86064137  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B86185926  4.1187e-01 -5.4117e-04  5.1855e-02  1.8111e+00\nNGA-ADM2-72505758B8622199   3.5371e+00 -1.2675e-02  1.9272e+00  2.5570e+00\nNGA-ADM2-72505758B86358915 -7.5909e-02 -7.9439e-05  1.0181e-02 -7.5154e-01\nNGA-ADM2-72505758B8652160   3.8231e-01 -6.0372e-04  3.2795e-02  2.1145e+00\nNGA-ADM2-72505758B86583227  1.1175e+00 -1.5148e-03  1.6594e-01  2.7470e+00\nNGA-ADM2-72505758B86734523  4.5343e-01 -5.8659e-04  4.9895e-02  2.0326e+00\nNGA-ADM2-72505758B86763634  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B86773608  3.4935e-02 -4.1587e-04  1.0697e-01  1.0808e-01\nNGA-ADM2-72505758B86821483  1.3309e-01 -5.4031e-05  8.3202e-03  1.4596e+00\nNGA-ADM2-72505758B8687564   4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B86879364  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B8726241   1.6848e+00 -5.9579e-03  7.5905e-01  1.9407e+00\nNGA-ADM2-72505758B8775504   2.7822e+00 -1.9101e-03  2.9358e-01  5.1383e+00\nNGA-ADM2-72505758B87811615  1.0432e+01 -7.5745e-02  7.6807e+00  3.7914e+00\nNGA-ADM2-72505758B87995813  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B88150775  5.0802e+00 -2.9406e-03  2.2694e+00  3.3743e+00\nNGA-ADM2-72505758B88452088 -1.6248e-01 -4.9757e-04  6.3739e-02 -6.4162e-01\nNGA-ADM2-72505758B88587475  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B88727897  1.4275e+00 -3.7118e-03  5.6948e-01  1.8965e+00\nNGA-ADM2-72505758B88761962 -2.9279e-02 -3.7118e-03  4.7395e-01 -3.7138e-02\nNGA-ADM2-72505758B88921590  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B88925335  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B8918259  -1.9299e-01 -4.8993e-05  7.5445e-03 -2.2213e+00\nNGA-ADM2-72505758B89235976  6.5654e-02 -3.0705e-04  5.9166e-02  2.7118e-01\nNGA-ADM2-72505758B89515171  3.0176e+00 -3.1518e-03  3.4470e-01  5.1451e+00\nNGA-ADM2-72505758B8960534   8.0285e-02 -1.2418e-05  1.1905e-03  2.3272e+00\nNGA-ADM2-72505758B89722002  2.6416e-01 -4.1587e-04  6.4017e-02  1.0457e+00\nNGA-ADM2-72505758B89731144  8.3886e-01 -4.3031e-04  6.6239e-02  3.2611e+00\nNGA-ADM2-72505758B89894474  3.2785e-02 -2.5869e-05  3.9837e-03  5.1985e-01\nNGA-ADM2-72505758B90027140  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B90250628  6.8488e-01 -7.0140e-04  7.6898e-02  2.4723e+00\nNGA-ADM2-72505758B90811761  3.9433e-01 -4.7092e-04  4.0060e-02  1.9725e+00\nNGA-ADM2-72505758B91050715  1.9663e-02 -7.9439e-05  1.0181e-02  1.9566e-01\nNGA-ADM2-72505758B91135250  2.4327e+00 -2.0810e-03  2.2783e-01  5.1009e+00\nNGA-ADM2-72505758B913149   -5.4288e-02 -2.5869e-05  2.4801e-03 -1.0896e+00\nNGA-ADM2-72505758B91510140  2.9931e+00 -1.8273e-03  2.3377e-01  6.1943e+00\nNGA-ADM2-72505758B91579398 -1.5929e-01 -2.5869e-05  3.3154e-03 -2.7660e+00\nNGA-ADM2-72505758B91650930  7.9393e-01 -2.8619e-04  2.4351e-02  5.0896e+00\nNGA-ADM2-72505758B91687942  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B92105435  1.3488e-01 -1.6230e-04  2.4989e-02  8.5424e-01\nNGA-ADM2-72505758B92139849  3.8462e-01 -4.9757e-04  1.2798e-01  1.0765e+00\nNGA-ADM2-72505758B92277191 -2.7939e-02 -6.5905e-06  1.0149e-03 -8.7678e-01\nNGA-ADM2-72505758B92576019  2.2448e-01 -1.4723e-04  1.8867e-02  1.6353e+00\nNGA-ADM2-72505758B92786354 -3.7451e-02 -1.4723e-04  1.6151e-02 -2.9353e-01\nNGA-ADM2-72505758B92819273  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B92921679 -6.1460e-02 -2.7444e-04  3.5164e-02 -3.2629e-01\nNGA-ADM2-72505758B92954057  6.5097e-02 -4.1587e-04  6.4017e-02  2.5893e-01\nNGA-ADM2-72505758B93424331  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B93427284  3.0203e-01 -3.1948e-04  4.0933e-02  1.4944e+00\nNGA-ADM2-72505758B93593012 -5.1224e-01 -9.7408e-05  1.8773e-02 -3.7378e+00\nNGA-ADM2-72505758B93638472  3.1940e-01 -5.4117e-04  1.0425e-01  9.9090e-01\nNGA-ADM2-72505758B93649439  4.4985e-01 -5.8659e-04  9.0281e-02  1.4991e+00\nNGA-ADM2-72505758B93709657  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B93737389  1.0354e-02 -1.5863e-06  2.4429e-04  6.6255e-01\nNGA-ADM2-72505758B93761587  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B93767969  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B94189690  9.4534e-02 -2.7444e-04  4.2252e-02  4.6124e-01\nNGA-ADM2-72505758B94509825  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B94606913  2.0110e+00 -1.2997e-03  2.5018e-01  4.0232e+00\nNGA-ADM2-72505758B94629448  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B94685339  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B94886311  2.8505e+00 -1.9946e-03  1.9085e-01  6.5296e+00\nNGA-ADM2-72505758B94925970  3.2078e+00 -1.9946e-03  1.6942e-01  7.7984e+00\nNGA-ADM2-72505758B94954595  4.5343e-01 -5.8659e-04  5.6205e-02  1.9151e+00\nNGA-ADM2-72505758B95154533  1.2890e+00 -1.2997e-03  1.6635e-01  3.1636e+00\nNGA-ADM2-72505758B95191090  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B95323810  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B95411855  2.3769e-01 -5.4117e-04  5.1855e-02  1.0462e+00\nNGA-ADM2-72505758B95429572  6.4574e-02 -3.0705e-04  3.9341e-02  3.2711e-01\nNGA-ADM2-72505758B95534398  1.8044e-01 -6.5165e-04  6.2434e-02  7.2475e-01\nNGA-ADM2-72505758B95566521  6.8325e-03 -2.5869e-05  3.3154e-03  1.1911e-01\nNGA-ADM2-72505758B95606818  2.8015e-02 -4.9114e-06  4.1800e-04  1.3705e+00\nNGA-ADM2-72505758B95781523  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B9585780   1.0670e+00 -3.7118e-03  4.0571e-01  1.6810e+00\nNGA-ADM2-72505758B95859729  3.8315e-01 -4.9690e-03  1.2723e+00  3.4409e-01\nNGA-ADM2-72505758B95872281 -1.7815e-01 -2.4366e-04  4.6953e-02 -8.2105e-01\nNGA-ADM2-72505758B95999274  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B9609327   4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B9615674   2.0317e-01 -4.9757e-04  4.7680e-02  9.3273e-01\nNGA-ADM2-72505758B96206882  2.0661e+00 -2.5402e-03  4.8838e-01  2.9601e+00\nNGA-ADM2-72505758B96230569  1.6304e-02 -4.8993e-05  6.2789e-03  2.0638e-01\nNGA-ADM2-72505758B9625976   2.1125e+00 -3.1518e-03  4.8384e-01  3.0416e+00\nNGA-ADM2-72505758B96315687  6.1722e-02 -3.4150e-04  5.2572e-02  2.7068e-01\nNGA-ADM2-72505758B96375167  2.6565e-02 -5.8659e-04  7.5136e-02  9.9054e-02\nNGA-ADM2-72505758B96655345  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B9668183   1.8003e-02 -2.0075e-05  1.9246e-03  4.1083e-01\nNGA-ADM2-72505758B96685701  4.5343e-01 -5.8659e-04  6.4318e-02  1.7902e+00\nNGA-ADM2-72505758B96746323 -3.0735e-02 -5.3818e-03  1.0318e+00 -2.4960e-02\nNGA-ADM2-72505758B9692286   4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B96981662  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B97139317  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B97184317  2.6031e-02 -9.7408e-05  9.3379e-03  2.7039e-01\nNGA-ADM2-72505758B9725515   4.5343e-01 -5.8659e-04  1.5086e-01  1.1689e+00\nNGA-ADM2-72505758B97294598  1.6467e-01 -4.0882e-05  4.4850e-03  2.4595e+00\nNGA-ADM2-72505758B97405906  8.4213e-03 -3.0705e-04  3.9341e-02  4.4005e-02\nNGA-ADM2-72505758B97448934  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B9755199   3.3742e-02 -2.0075e-05  3.8694e-03  5.4276e-01\nNGA-ADM2-72505758B98057596 -9.5767e-02 -2.5869e-05  2.2016e-03 -2.0404e+00\nNGA-ADM2-72505758B98072407 -6.4016e-02 -1.0067e-05  1.5503e-03 -1.6256e+00\nNGA-ADM2-72505758B98086722  1.3948e-01 -2.1471e-04  1.8270e-02  1.0335e+00\nNGA-ADM2-72505758B98116860 -2.3258e-02 -2.5869e-05  2.4801e-03 -4.6650e-01\nNGA-ADM2-72505758B98120163  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B98218468  4.5343e-01 -5.8659e-04  7.5136e-02  1.6564e+00\nNGA-ADM2-72505758B98262124  1.9079e-01 -8.5820e-05  1.0998e-02  1.8201e+00\nNGA-ADM2-72505758B98593855  4.5140e-01 -2.2512e-04  2.1578e-02  3.0745e+00\nNGA-ADM2-72505758B98658548  2.2782e-02 -6.3301e-05  5.3871e-03  3.1126e-01\nNGA-ADM2-72505758B98737176  4.5343e-01 -5.8659e-04  1.1300e-01  1.3506e+00\nNGA-ADM2-72505758B98765613 -9.7229e-02 -2.5869e-05  3.3154e-03 -1.6882e+00\nNGA-ADM2-72505758B99221548  1.0190e-01 -2.2512e-04  2.8846e-02  6.0127e-01\nNGA-ADM2-72505758B99270352 -3.4152e-02 -1.7053e-05  1.6349e-03 -8.4423e-01\nNGA-ADM2-72505758B99641746  4.4985e-01 -5.8659e-04  9.0281e-02  1.4991e+00\nNGA-ADM2-72505758B99650649  3.0292e+00 -1.7465e-03  2.2344e-01  6.4119e+00\nNGA-ADM2-72505758B99764805  4.5343e-01 -5.8659e-04  9.0281e-02  1.5110e+00\nNGA-ADM2-72505758B9986554   6.7927e-02 -1.7136e-04  4.4090e-02  3.2431e-01\nNGA-ADM2-72505758B99970923 -3.0153e-02 -2.5869e-05  6.6568e-03 -3.6926e-01\n                           Pr.z....E.Ii..\nNGA-ADM2-72505758B10049836         0.3402\nNGA-ADM2-72505758B10063467         0.3199\nNGA-ADM2-72505758B10065661         0.7195\nNGA-ADM2-72505758B10302610         0.2480\nNGA-ADM2-72505758B10682130         0.1308\nNGA-ADM2-72505758B11317593         0.9770\nNGA-ADM2-72505758B1132196          0.4531\nNGA-ADM2-72505758B11373444         0.1811\nNGA-ADM2-72505758B11735424         0.0734\nNGA-ADM2-72505758B11870040         0.1308\nNGA-ADM2-72505758B11997780         0.0555\nNGA-ADM2-72505758B122892           0.1051\nNGA-ADM2-72505758B12413588         0.0977\nNGA-ADM2-72505758B1244901          0.4406\nNGA-ADM2-72505758B12596325         0.0734\nNGA-ADM2-72505758B12674914         0.0173\nNGA-ADM2-72505758B12680831         0.1308\nNGA-ADM2-72505758B12769973         0.0977\nNGA-ADM2-72505758B12816297         0.2314\nNGA-ADM2-72505758B13021078         0.0734\nNGA-ADM2-72505758B13075745         0.0320\nNGA-ADM2-72505758B13233811         0.5795\nNGA-ADM2-72505758B13380599         0.6711\nNGA-ADM2-72505758B13427126         0.2690\nNGA-ADM2-72505758B13487741         0.0977\nNGA-ADM2-72505758B13685756         0.2558\nNGA-ADM2-72505758B139854           0.1768\nNGA-ADM2-72505758B14016122         0.0734\nNGA-ADM2-72505758B14174427         0.3556\nNGA-ADM2-72505758B14213332         0.4447\nNGA-ADM2-72505758B14369579         0.8831\nNGA-ADM2-72505758B14654508         0.7129\nNGA-ADM2-72505758B14842261         0.1558\nNGA-ADM2-72505758B15135669         0.0555\nNGA-ADM2-72505758B15152925         0.0003\nNGA-ADM2-72505758B15168871         0.0762\nNGA-ADM2-72505758B15269567         0.0873\nNGA-ADM2-72505758B15283345         0.4341\nNGA-ADM2-72505758B15329511         0.5952\nNGA-ADM2-72505758B15626765         0.1370\nNGA-ADM2-72505758B15745475         0.2246\nNGA-ADM2-72505758B15928088         0.0000\nNGA-ADM2-72505758B1616690          0.0000\nNGA-ADM2-72505758B16281923         0.3755\nNGA-ADM2-72505758B16283774         0.1768\nNGA-ADM2-72505758B16331092         0.6638\nNGA-ADM2-72505758B16408752         0.1386\nNGA-ADM2-72505758B16424915         0.0046\nNGA-ADM2-72505758B16610760         0.0734\nNGA-ADM2-72505758B16696559         0.0979\nNGA-ADM2-72505758B16765159         0.2295\nNGA-ADM2-72505758B16773759         0.1308\nNGA-ADM2-72505758B17259178         0.0005\nNGA-ADM2-72505758B17453237         0.8444\nNGA-ADM2-72505758B17534332         0.1308\nNGA-ADM2-72505758B17563771         0.1768\nNGA-ADM2-72505758B17614134         0.0160\nNGA-ADM2-72505758B17633838         0.9903\nNGA-ADM2-72505758B17736122         0.2353\nNGA-ADM2-72505758B1782277          0.6005\nNGA-ADM2-72505758B18027142         0.1811\nNGA-ADM2-72505758B18156007         0.1308\nNGA-ADM2-72505758B18272004         0.4790\nNGA-ADM2-72505758B1827434          0.7987\nNGA-ADM2-72505758B18295427         0.0587\nNGA-ADM2-72505758B18326272         0.0003\nNGA-ADM2-72505758B18376242         0.0285\nNGA-ADM2-72505758B18447698         0.3077\nNGA-ADM2-72505758B18534598         0.2375\nNGA-ADM2-72505758B18548676         0.3872\nNGA-ADM2-72505758B18747813         0.0014\nNGA-ADM2-72505758B18888506         0.1308\nNGA-ADM2-72505758B18960886         0.5366\nNGA-ADM2-72505758B19119765         0.0835\nNGA-ADM2-72505758B19327087         0.1308\nNGA-ADM2-72505758B19376786         0.4591\nNGA-ADM2-72505758B19458752         0.0820\nNGA-ADM2-72505758B19462210         0.9581\nNGA-ADM2-72505758B19539344         0.6256\nNGA-ADM2-72505758B196939           0.0508\nNGA-ADM2-72505758B19914513         0.2424\nNGA-ADM2-72505758B20050296         0.0751\nNGA-ADM2-72505758B20351569         0.0977\nNGA-ADM2-72505758B20421162         0.6025\nNGA-ADM2-72505758B20535362         0.5639\nNGA-ADM2-72505758B20542872         0.4138\nNGA-ADM2-72505758B20606047         0.6156\nNGA-ADM2-72505758B20675427         0.2438\nNGA-ADM2-72505758B20849864         0.9374\nNGA-ADM2-72505758B21150125         0.0977\nNGA-ADM2-72505758B21444598         0.0555\nNGA-ADM2-72505758B21552075         0.0000\nNGA-ADM2-72505758B2169568          0.6384\nNGA-ADM2-72505758B2190517          0.8693\nNGA-ADM2-72505758B21920023         0.0421\nNGA-ADM2-72505758B2204672          0.0000\nNGA-ADM2-72505758B22226897         0.0977\nNGA-ADM2-72505758B22346210         0.2811\nNGA-ADM2-72505758B22432067         0.3861\nNGA-ADM2-72505758B22509400         0.9965\nNGA-ADM2-72505758B22625464         0.0554\nNGA-ADM2-72505758B22711214         0.1308\nNGA-ADM2-72505758B22775279         0.5727\nNGA-ADM2-72505758B22890603         0.0247\nNGA-ADM2-72505758B22914768         0.4765\nNGA-ADM2-72505758B22969834         0.9436\nNGA-ADM2-72505758B23063504         0.0977\nNGA-ADM2-72505758B23284206         0.4229\nNGA-ADM2-72505758B23339862         0.0555\nNGA-ADM2-72505758B23406569         0.6363\nNGA-ADM2-72505758B23525102         0.1308\nNGA-ADM2-72505758B23727233         0.0977\nNGA-ADM2-72505758B23758727         0.9753\nNGA-ADM2-72505758B23938972         0.6780\nNGA-ADM2-72505758B24068194         0.8470\nNGA-ADM2-72505758B24079849         0.4060\nNGA-ADM2-72505758B24173949         0.5062\nNGA-ADM2-72505758B24287701         0.1945\nNGA-ADM2-72505758B24946110         0.1828\nNGA-ADM2-72505758B24975398         0.0037\nNGA-ADM2-72505758B25108439         0.1135\nNGA-ADM2-72505758B25110832         0.5635\nNGA-ADM2-72505758B25204428         0.1354\nNGA-ADM2-72505758B25323941         0.4545\nNGA-ADM2-72505758B25363477         0.0037\nNGA-ADM2-72505758B25708171            NaN\nNGA-ADM2-72505758B26082732         0.9414\nNGA-ADM2-72505758B26198977         0.6322\nNGA-ADM2-72505758B26243068         0.2424\nNGA-ADM2-72505758B2628120          0.1768\nNGA-ADM2-72505758B26346364         0.0555\nNGA-ADM2-72505758B26429015         0.3433\nNGA-ADM2-72505758B26523677         0.1768\nNGA-ADM2-72505758B26556107         0.8975\nNGA-ADM2-72505758B2657339          0.0734\nNGA-ADM2-72505758B26581542         0.0000\nNGA-ADM2-72505758B27276798         0.0977\nNGA-ADM2-72505758B27408614         0.0000\nNGA-ADM2-72505758B2745087          0.9158\nNGA-ADM2-72505758B27539273         0.0977\nNGA-ADM2-72505758B27542400         0.2474\nNGA-ADM2-72505758B2760907          0.4358\nNGA-ADM2-72505758B27615672         0.4553\nNGA-ADM2-72505758B27700910         0.0455\nNGA-ADM2-72505758B27714394         0.7449\nNGA-ADM2-72505758B27717699         0.7074\nNGA-ADM2-72505758B27989153         0.0555\nNGA-ADM2-72505758B28102942         0.0362\nNGA-ADM2-72505758B28219123         0.0000\nNGA-ADM2-72505758B28322663         0.1308\nNGA-ADM2-72505758B28358277         0.1308\nNGA-ADM2-72505758B28448754         0.3612\nNGA-ADM2-72505758B28451778         0.3040\nNGA-ADM2-72505758B28517619         0.2171\nNGA-ADM2-72505758B28558302         0.6452\nNGA-ADM2-72505758B28564088         0.0977\nNGA-ADM2-72505758B28688505         0.1768\nNGA-ADM2-72505758B28779634         0.6724\nNGA-ADM2-72505758B28994882         0.2424\nNGA-ADM2-72505758B29272053         0.0113\nNGA-ADM2-72505758B29476596         0.3260\nNGA-ADM2-72505758B29578266         0.0127\nNGA-ADM2-72505758B29634978         0.1768\nNGA-ADM2-72505758B29748439         0.6309\nNGA-ADM2-72505758B29886865         0.5878\nNGA-ADM2-72505758B30062209         0.1768\nNGA-ADM2-72505758B30286847         0.1768\nNGA-ADM2-72505758B30316327         0.0084\nNGA-ADM2-72505758B30341250         0.2412\nNGA-ADM2-72505758B30347581         0.0555\nNGA-ADM2-72505758B30546335         0.0005\nNGA-ADM2-72505758B30682486         0.0421\nNGA-ADM2-72505758B3073896          0.0407\nNGA-ADM2-72505758B3096768          0.0421\nNGA-ADM2-72505758B31033090         0.9177\nNGA-ADM2-72505758B31054894         0.3799\nNGA-ADM2-72505758B31195973         0.0421\nNGA-ADM2-72505758B31206848         0.3516\nNGA-ADM2-72505758B31230586         0.0000\nNGA-ADM2-72505758B31246828         0.4517\nNGA-ADM2-72505758B31287755         0.1768\nNGA-ADM2-72505758B31299772         0.4790\nNGA-ADM2-72505758B31351375         0.7558\nNGA-ADM2-72505758B31542029         0.5454\nNGA-ADM2-72505758B31597260         0.0000\nNGA-ADM2-72505758B31818357         0.0977\nNGA-ADM2-72505758B31818553         0.0977\nNGA-ADM2-72505758B3188194          0.3831\nNGA-ADM2-72505758B31996608         0.6479\nNGA-ADM2-72505758B32139672         0.0676\nNGA-ADM2-72505758B32177909         0.4667\nNGA-ADM2-72505758B32188730         0.2963\nNGA-ADM2-72505758B32218397         0.1768\nNGA-ADM2-72505758B32330173         0.1811\nNGA-ADM2-72505758B32419485         0.0555\nNGA-ADM2-72505758B32554889         0.2901\nNGA-ADM2-72505758B32611817         0.1758\nNGA-ADM2-72505758B32630687         0.7032\nNGA-ADM2-72505758B32774266         0.0734\nNGA-ADM2-72505758B32794130         0.5283\nNGA-ADM2-72505758B32949816         0.0734\nNGA-ADM2-72505758B3304967          0.0734\nNGA-ADM2-72505758B33054765         0.0000\nNGA-ADM2-72505758B33108582         0.0555\nNGA-ADM2-72505758B3317503          0.0000\nNGA-ADM2-72505758B33219881         0.0734\nNGA-ADM2-72505758B33244779         0.8919\nNGA-ADM2-72505758B33343517         0.4590\nNGA-ADM2-72505758B33542533         0.6261\nNGA-ADM2-72505758B33577737         0.9489\nNGA-ADM2-72505758B3369984          0.4479\nNGA-ADM2-72505758B34009830         0.1768\nNGA-ADM2-72505758B34036858         0.0042\nNGA-ADM2-72505758B34194291         0.1768\nNGA-ADM2-72505758B34380318         0.0009\nNGA-ADM2-72505758B34441411         0.2424\nNGA-ADM2-72505758B34494634         0.2472\nNGA-ADM2-72505758B34508441         0.1768\nNGA-ADM2-72505758B34643703         0.1338\nNGA-ADM2-72505758B34822167         0.0974\nNGA-ADM2-72505758B34881213         0.1768\nNGA-ADM2-72505758B35176966         0.2948\nNGA-ADM2-72505758B35597270         0.0478\nNGA-ADM2-72505758B35626837         0.0977\nNGA-ADM2-72505758B35748968         0.2424\nNGA-ADM2-72505758B35936626         0.0421\nNGA-ADM2-72505758B36147146         0.6556\nNGA-ADM2-72505758B3618695          0.3166\nNGA-ADM2-72505758B36277624         0.6760\nNGA-ADM2-72505758B36341125         0.0734\nNGA-ADM2-72505758B36411974         0.1308\nNGA-ADM2-72505758B36631288         0.1308\nNGA-ADM2-72505758B36739173         0.0000\nNGA-ADM2-72505758B36818221         0.6641\nNGA-ADM2-72505758B36829366         0.0703\nNGA-ADM2-72505758B36860554         0.6028\nNGA-ADM2-72505758B36958634         0.0595\nNGA-ADM2-72505758B37006139         0.0000\nNGA-ADM2-72505758B37235287         0.0421\nNGA-ADM2-72505758B3729824          0.3693\nNGA-ADM2-72505758B37546318         0.0066\nNGA-ADM2-72505758B37687991         0.1308\nNGA-ADM2-72505758B3771557          0.6446\nNGA-ADM2-72505758B37718139         0.3646\nNGA-ADM2-72505758B38224950         0.8212\nNGA-ADM2-72505758B3838497          0.0000\nNGA-ADM2-72505758B38387184         0.0977\nNGA-ADM2-72505758B38470188         0.1308\nNGA-ADM2-72505758B38532832         0.0567\nNGA-ADM2-72505758B38565081         0.2622\nNGA-ADM2-72505758B38716464         0.6181\nNGA-ADM2-72505758B38827784         0.6296\nNGA-ADM2-72505758B38868411         0.0977\nNGA-ADM2-72505758B38957187         0.0998\nNGA-ADM2-72505758B38976800         0.0000\nNGA-ADM2-72505758B38989055         0.0868\nNGA-ADM2-72505758B39059766         0.3604\nNGA-ADM2-72505758B39110166         0.0051\nNGA-ADM2-72505758B39194027         0.2487\nNGA-ADM2-72505758B39432389         0.8246\nNGA-ADM2-72505758B39446185         0.1768\nNGA-ADM2-72505758B39689947         0.1308\nNGA-ADM2-72505758B40149693         0.0037\nNGA-ADM2-72505758B40157454         0.0000\nNGA-ADM2-72505758B40428434         0.1308\nNGA-ADM2-72505758B40532579         0.9770\nNGA-ADM2-72505758B40651914         0.9821\nNGA-ADM2-72505758B40667848         0.0430\nNGA-ADM2-72505758B40714647         0.6710\nNGA-ADM2-72505758B40744784         0.3812\nNGA-ADM2-72505758B40746170         0.1383\nNGA-ADM2-72505758B40877575         0.4700\nNGA-ADM2-72505758B40987774         0.5361\nNGA-ADM2-72505758B41151402         0.1768\nNGA-ADM2-72505758B41263993         0.4612\nNGA-ADM2-72505758B41363947         0.0555\nNGA-ADM2-72505758B41458967         0.2410\nNGA-ADM2-72505758B41522993         0.0014\nNGA-ADM2-72505758B41606003         0.3099\nNGA-ADM2-72505758B41747981         0.0977\nNGA-ADM2-72505758B41820351         0.0977\nNGA-ADM2-72505758B41923004         0.5000\nNGA-ADM2-72505758B41928930         0.3764\nNGA-ADM2-72505758B41934932         0.1705\nNGA-ADM2-72505758B41955915         0.9626\nNGA-ADM2-72505758B4198149          0.4336\nNGA-ADM2-72505758B42001588         0.3402\nNGA-ADM2-72505758B42014722         0.0555\nNGA-ADM2-72505758B42099323         0.1768\nNGA-ADM2-72505758B42200288         0.0734\nNGA-ADM2-72505758B42248280         0.0000\nNGA-ADM2-72505758B42260172         0.0139\nNGA-ADM2-72505758B42412373         0.0734\nNGA-ADM2-72505758B42533808         0.4550\nNGA-ADM2-72505758B42614095         0.1308\nNGA-ADM2-72505758B4268401          0.0091\nNGA-ADM2-72505758B42691841         0.4594\nNGA-ADM2-72505758B42781808         0.6796\nNGA-ADM2-72505758B42822246         0.8817\nNGA-ADM2-72505758B43208251         0.2883\nNGA-ADM2-72505758B43213978         0.7026\nNGA-ADM2-72505758B43516104         0.4052\nNGA-ADM2-72505758B43671176         0.1777\nNGA-ADM2-72505758B4371453          0.0271\nNGA-ADM2-72505758B43939903         0.0734\nNGA-ADM2-72505758B43980846         0.0977\nNGA-ADM2-72505758B44064464         0.1001\nNGA-ADM2-72505758B44073392         0.8251\nNGA-ADM2-72505758B4407900          0.9779\nNGA-ADM2-72505758B44145348         0.5071\nNGA-ADM2-72505758B44194354         0.1768\nNGA-ADM2-72505758B44226036         0.1623\nNGA-ADM2-72505758B44240493         0.6860\nNGA-ADM2-72505758B44273667         0.4772\nNGA-ADM2-72505758B44395382         0.8343\nNGA-ADM2-72505758B44548256         0.0282\nNGA-ADM2-72505758B44695959         0.0734\nNGA-ADM2-72505758B44831066         0.0000\nNGA-ADM2-72505758B44941782         0.0185\nNGA-ADM2-72505758B45015575         0.0895\nNGA-ADM2-72505758B45047614         0.0001\nNGA-ADM2-72505758B4505528          0.6887\nNGA-ADM2-72505758B45148365         0.1308\nNGA-ADM2-72505758B45209095         0.6647\nNGA-ADM2-72505758B45319201         0.1308\nNGA-ADM2-72505758B4532539          0.0977\nNGA-ADM2-72505758B45363429         0.3735\nNGA-ADM2-72505758B45556353         0.5374\nNGA-ADM2-72505758B45800050         0.4152\nNGA-ADM2-72505758B4580856          0.0020\nNGA-ADM2-72505758B45966975         0.1768\nNGA-ADM2-72505758B46314370         0.0000\nNGA-ADM2-72505758B46349170         0.5831\nNGA-ADM2-72505758B4635888          0.5403\nNGA-ADM2-72505758B46467475         0.3500\nNGA-ADM2-72505758B46624629         0.9499\nNGA-ADM2-72505758B46727460         0.1766\nNGA-ADM2-72505758B46745149         0.0433\nNGA-ADM2-72505758B46906771         0.7816\nNGA-ADM2-72505758B46945820         0.0025\nNGA-ADM2-72505758B47092163         0.4012\nNGA-ADM2-72505758B47276571         0.0118\nNGA-ADM2-72505758B47502716         0.5489\nNGA-ADM2-72505758B47558893         0.1338\nNGA-ADM2-72505758B47569121         0.0000\nNGA-ADM2-72505758B47597427         0.0977\nNGA-ADM2-72505758B47868503         0.1308\nNGA-ADM2-72505758B47972472         0.2349\nNGA-ADM2-72505758B48054636         0.9115\nNGA-ADM2-72505758B48100225         0.6118\nNGA-ADM2-72505758B48120393         0.4446\nNGA-ADM2-72505758B48161598         0.0421\nNGA-ADM2-72505758B48168473         0.3890\nNGA-ADM2-72505758B48317000         0.2424\nNGA-ADM2-72505758B485966           0.4267\nNGA-ADM2-72505758B48644703         0.1308\nNGA-ADM2-72505758B48817484         0.1768\nNGA-ADM2-72505758B48854878         0.5862\nNGA-ADM2-72505758B48978893         0.0734\nNGA-ADM2-72505758B48991596         0.6442\nNGA-ADM2-72505758B49088403         0.0977\nNGA-ADM2-72505758B49090421         0.6472\nNGA-ADM2-72505758B49591931         0.2206\nNGA-ADM2-72505758B49639858         0.1537\nNGA-ADM2-72505758B49756103         0.7216\nNGA-ADM2-72505758B49835051         0.0734\nNGA-ADM2-72505758B49932072         0.0075\nNGA-ADM2-72505758B50036017         0.6030\nNGA-ADM2-72505758B50480947         0.5461\nNGA-ADM2-72505758B50499057         0.1768\nNGA-ADM2-72505758B50500527         0.1308\nNGA-ADM2-72505758B50566658         0.1074\nNGA-ADM2-72505758B50825869         0.1768\nNGA-ADM2-72505758B5084877          0.5099\nNGA-ADM2-72505758B50871717         0.0074\nNGA-ADM2-72505758B5090387          0.0734\nNGA-ADM2-72505758B50946056         0.0006\nNGA-ADM2-72505758B51199259         0.5905\nNGA-ADM2-72505758B5121987          0.5791\nNGA-ADM2-72505758B51332829         0.8717\nNGA-ADM2-72505758B51610317         0.7010\nNGA-ADM2-72505758B5164375          0.1308\nNGA-ADM2-72505758B51901764         0.6140\nNGA-ADM2-72505758B51902603         0.5376\nNGA-ADM2-72505758B52057503         0.0622\nNGA-ADM2-72505758B52690633         0.4012\nNGA-ADM2-72505758B52856855         0.8832\nNGA-ADM2-72505758B528653           0.1768\nNGA-ADM2-72505758B52884892         0.3402\nNGA-ADM2-72505758B53166523         0.2191\nNGA-ADM2-72505758B53799809         0.4350\nNGA-ADM2-72505758B53984624         0.6446\nNGA-ADM2-72505758B54152816         0.0977\nNGA-ADM2-72505758B54320674         0.1768\nNGA-ADM2-72505758B54394765         0.0860\nNGA-ADM2-72505758B54495757         0.9475\nNGA-ADM2-72505758B54638889         0.0751\nNGA-ADM2-72505758B54686951         0.0555\nNGA-ADM2-72505758B54729887         0.7504\nNGA-ADM2-72505758B54838860         0.0977\nNGA-ADM2-72505758B54904664         0.4838\nNGA-ADM2-72505758B55254312         0.0567\nNGA-ADM2-72505758B55275980         0.4333\nNGA-ADM2-72505758B55501663         0.1908\nNGA-ADM2-72505758B5575139          0.3214\nNGA-ADM2-72505758B5578796          0.2424\nNGA-ADM2-72505758B5592240          0.0977\nNGA-ADM2-72505758B56024064         0.1308\nNGA-ADM2-72505758B56032953         0.1338\nNGA-ADM2-72505758B56149510         0.1994\nNGA-ADM2-72505758B5623512          0.7935\nNGA-ADM2-72505758B56331112         0.0734\nNGA-ADM2-72505758B5637778          0.1308\nNGA-ADM2-72505758B56394634         0.1308\nNGA-ADM2-72505758B56444221         0.1044\nNGA-ADM2-72505758B56744751         0.0047\nNGA-ADM2-72505758B56799054         0.6402\nNGA-ADM2-72505758B56816258         0.0555\nNGA-ADM2-72505758B56925175         0.7488\nNGA-ADM2-72505758B56934856         0.6428\nNGA-ADM2-72505758B56955836         0.3302\nNGA-ADM2-72505758B57073987         0.2424\nNGA-ADM2-72505758B5716143          0.2425\nNGA-ADM2-72505758B57235084         0.4986\nNGA-ADM2-72505758B57280378         0.1742\nNGA-ADM2-72505758B57306951         0.8372\nNGA-ADM2-72505758B57412385         0.0237\nNGA-ADM2-72505758B57514033         0.4133\nNGA-ADM2-72505758B57638513         0.1010\nNGA-ADM2-72505758B57815144         0.0977\nNGA-ADM2-72505758B57963290         0.0734\nNGA-ADM2-72505758B58223447         0.0000\nNGA-ADM2-72505758B5824220          0.0734\nNGA-ADM2-72505758B58295941         0.1768\nNGA-ADM2-72505758B5834354          0.8258\nNGA-ADM2-72505758B58432429         0.1471\nNGA-ADM2-72505758B58640661         0.8899\nNGA-ADM2-72505758B5875612          0.0999\nNGA-ADM2-72505758B59054861         0.3946\nNGA-ADM2-72505758B59091347         0.0001\nNGA-ADM2-72505758B59710243         0.1308\nNGA-ADM2-72505758B5987673          0.0977\nNGA-ADM2-72505758B59879704         0.0137\nNGA-ADM2-72505758B60171436         0.0025\nNGA-ADM2-72505758B60425686         0.1308\nNGA-ADM2-72505758B60502549         0.0977\nNGA-ADM2-72505758B60765301         0.2977\nNGA-ADM2-72505758B61058152         0.4185\nNGA-ADM2-72505758B61328021         0.8110\nNGA-ADM2-72505758B6140913          0.0000\nNGA-ADM2-72505758B614754           0.1308\nNGA-ADM2-72505758B61554030         0.0999\nNGA-ADM2-72505758B61584452         0.0977\nNGA-ADM2-72505758B61679125         0.0977\nNGA-ADM2-72505758B6178712          0.1308\nNGA-ADM2-72505758B61803394         0.0977\nNGA-ADM2-72505758B61833663         0.3498\nNGA-ADM2-72505758B61849091         0.4593\nNGA-ADM2-72505758B6187391          0.8611\nNGA-ADM2-72505758B61968000         0.1163\nNGA-ADM2-72505758B62110738         0.0000\nNGA-ADM2-72505758B62204667         0.2498\nNGA-ADM2-72505758B62431971         0.6039\nNGA-ADM2-72505758B62522831         0.0001\nNGA-ADM2-72505758B6253464          0.0977\nNGA-ADM2-72505758B62747799         0.0000\nNGA-ADM2-72505758B62799042         0.0430\nNGA-ADM2-72505758B62812657         0.0001\nNGA-ADM2-72505758B62943467         0.7939\nNGA-ADM2-72505758B62956588         0.0008\nNGA-ADM2-72505758B63001706         0.0617\nNGA-ADM2-72505758B63074678         0.9114\nNGA-ADM2-72505758B63382694         0.6197\nNGA-ADM2-72505758B63641874         0.0020\nNGA-ADM2-72505758B63662909         0.8175\nNGA-ADM2-72505758B636923           0.5418\nNGA-ADM2-72505758B63774666         0.2424\nNGA-ADM2-72505758B63992612         0.0734\nNGA-ADM2-72505758B64173383         0.3485\nNGA-ADM2-72505758B64244244         0.0977\nNGA-ADM2-72505758B64250128         0.0977\nNGA-ADM2-72505758B64450018         0.0000\nNGA-ADM2-72505758B64474046         0.7780\nNGA-ADM2-72505758B64572421         0.1768\nNGA-ADM2-72505758B64703850         0.3406\nNGA-ADM2-72505758B64792691         0.0000\nNGA-ADM2-72505758B6536467          0.6424\nNGA-ADM2-72505758B65494204         0.2424\nNGA-ADM2-72505758B65514383         0.7056\nNGA-ADM2-72505758B65565348         0.0071\nNGA-ADM2-72505758B65644548         0.0883\nNGA-ADM2-72505758B65886725         0.3793\nNGA-ADM2-72505758B65916530         0.0977\nNGA-ADM2-72505758B66076488         0.1308\nNGA-ADM2-72505758B66114245         0.3666\nNGA-ADM2-72505758B6619157          0.0734\nNGA-ADM2-72505758B66230476         0.2843\nNGA-ADM2-72505758B66286397         0.0567\nNGA-ADM2-72505758B66300646         0.0734\nNGA-ADM2-72505758B66308875         0.5808\nNGA-ADM2-72505758B66311687         0.5982\nNGA-ADM2-72505758B66384798         0.2512\nNGA-ADM2-72505758B6675111          0.6418\nNGA-ADM2-72505758B67103889         0.7827\nNGA-ADM2-72505758B67188591         0.2493\nNGA-ADM2-72505758B67228552         0.8703\nNGA-ADM2-72505758B67267634         0.0005\nNGA-ADM2-72505758B67283121         0.0000\nNGA-ADM2-72505758B6732783          0.5736\nNGA-ADM2-72505758B67592189         0.1768\nNGA-ADM2-72505758B67778003         0.7899\nNGA-ADM2-72505758B6786568          0.0977\nNGA-ADM2-72505758B67905963         0.4521\nNGA-ADM2-72505758B68001848         0.4234\nNGA-ADM2-72505758B68194313         0.1308\nNGA-ADM2-72505758B68200680         0.8456\nNGA-ADM2-72505758B68356378         0.0320\nNGA-ADM2-72505758B68486014         0.0000\nNGA-ADM2-72505758B68552788         0.3124\nNGA-ADM2-72505758B68678547         0.8326\nNGA-ADM2-72505758B6884405          0.1308\nNGA-ADM2-72505758B68875813         0.4317\nNGA-ADM2-72505758B68878432         0.0734\nNGA-ADM2-72505758B68896460         0.7672\nNGA-ADM2-72505758B69061814         0.3121\nNGA-ADM2-72505758B69218817         0.4786\nNGA-ADM2-72505758B69255840         0.4462\nNGA-ADM2-72505758B69267419         0.0555\nNGA-ADM2-72505758B69319692         0.0734\nNGA-ADM2-72505758B69353048         0.0977\nNGA-ADM2-72505758B69357183         0.0088\nNGA-ADM2-72505758B69384871         0.0085\nNGA-ADM2-72505758B69642516         0.1258\nNGA-ADM2-72505758B69788799         0.0734\nNGA-ADM2-72505758B70059085         0.1654\nNGA-ADM2-72505758B70119517         0.1690\nNGA-ADM2-72505758B70167647         0.6812\nNGA-ADM2-72505758B70182243         0.3377\nNGA-ADM2-72505758B70270736         0.2424\nNGA-ADM2-72505758B70271338         0.0006\nNGA-ADM2-72505758B70495723         0.9083\nNGA-ADM2-72505758B70869724         0.0734\nNGA-ADM2-72505758B70905299         0.0734\nNGA-ADM2-72505758B70998471         0.2424\nNGA-ADM2-72505758B71477681         0.7416\nNGA-ADM2-72505758B718280           0.0000\nNGA-ADM2-72505758B7184000          0.2424\nNGA-ADM2-72505758B71906601         0.2424\nNGA-ADM2-72505758B71918331         0.3350\nNGA-ADM2-72505758B71990951         0.0977\nNGA-ADM2-72505758B72019004         0.9224\nNGA-ADM2-72505758B72123387         0.0772\nNGA-ADM2-72505758B7217003          0.2424\nNGA-ADM2-72505758B72331537         0.1308\nNGA-ADM2-72505758B72340078         0.2525\nNGA-ADM2-72505758B72369186         0.0000\nNGA-ADM2-72505758B72408011         0.1811\nNGA-ADM2-72505758B72527598         0.2353\nNGA-ADM2-72505758B72583543         0.7689\nNGA-ADM2-72505758B72901624         0.3359\nNGA-ADM2-72505758B72996990         0.1308\nNGA-ADM2-72505758B73155659         0.4399\nNGA-ADM2-72505758B73169585         0.6739\nNGA-ADM2-72505758B7318634          0.0006\nNGA-ADM2-72505758B7324564          0.0206\nNGA-ADM2-72505758B73267274         0.2217\nNGA-ADM2-72505758B73302858         0.1308\nNGA-ADM2-72505758B73332929         0.0414\nNGA-ADM2-72505758B73850861         0.0021\nNGA-ADM2-72505758B74167895         0.0977\nNGA-ADM2-72505758B74224076         0.5697\nNGA-ADM2-72505758B74273353         0.2610\nNGA-ADM2-72505758B74442045         0.0000\nNGA-ADM2-72505758B74527534         0.5385\nNGA-ADM2-72505758B74576641         0.2186\nNGA-ADM2-72505758B74718112         0.0977\nNGA-ADM2-72505758B7490938          0.5492\nNGA-ADM2-72505758B75034141         0.0000\nNGA-ADM2-72505758B75040986         0.4340\nNGA-ADM2-72505758B75230852         0.1307\nNGA-ADM2-72505758B7553151          0.0003\nNGA-ADM2-72505758B75536077         0.0198\nNGA-ADM2-72505758B75784992         0.1308\nNGA-ADM2-72505758B75801679         0.1308\nNGA-ADM2-72505758B75908239         0.0734\nNGA-ADM2-72505758B75983929         0.8157\nNGA-ADM2-72505758B76052259         0.5306\nNGA-ADM2-72505758B76392163         0.1235\nNGA-ADM2-72505758B76566778         0.5871\nNGA-ADM2-72505758B7691229          0.9114\nNGA-ADM2-72505758B77062793         0.2487\nNGA-ADM2-72505758B7732292          0.2356\nNGA-ADM2-72505758B77767589         0.6413\nNGA-ADM2-72505758B77907079         0.1754\nNGA-ADM2-72505758B78258316         0.9474\nNGA-ADM2-72505758B783054           0.0092\nNGA-ADM2-72505758B78395267         0.5540\nNGA-ADM2-72505758B7845389          0.1900\nNGA-ADM2-72505758B78492046         0.1920\nNGA-ADM2-72505758B78527113         0.0751\nNGA-ADM2-72505758B78527729         0.0751\nNGA-ADM2-72505758B78555816         0.5703\nNGA-ADM2-72505758B7855953          0.0483\nNGA-ADM2-72505758B78597532         0.1784\nNGA-ADM2-72505758B78619683         0.5431\nNGA-ADM2-72505758B78698197         0.9435\nNGA-ADM2-72505758B78741094         0.1308\nNGA-ADM2-72505758B79155077         0.0977\nNGA-ADM2-72505758B79178637         0.0422\nNGA-ADM2-72505758B79193959         0.0734\nNGA-ADM2-72505758B79316383         0.3924\nNGA-ADM2-72505758B79444654         0.0000\nNGA-ADM2-72505758B79493017         0.2206\nNGA-ADM2-72505758B7968540          0.1471\nNGA-ADM2-72505758B79803896         0.2424\nNGA-ADM2-72505758B79815894         0.7658\nNGA-ADM2-72505758B79902123         0.1768\nNGA-ADM2-72505758B79945925         0.9860\nNGA-ADM2-72505758B79983056         0.6698\nNGA-ADM2-72505758B80057854         0.0317\nNGA-ADM2-72505758B80290097         0.3104\nNGA-ADM2-72505758B8045942          0.0977\nNGA-ADM2-72505758B80517430         0.0555\nNGA-ADM2-72505758B80733792         0.4193\nNGA-ADM2-72505758B80737371         0.6777\nNGA-ADM2-72505758B80966644         0.0977\nNGA-ADM2-72505758B81144344         0.4335\nNGA-ADM2-72505758B8143254          0.1270\nNGA-ADM2-72505758B8152058          0.5291\nNGA-ADM2-72505758B81562716         0.0015\nNGA-ADM2-72505758B81594808         0.4889\nNGA-ADM2-72505758B81600634         0.0734\nNGA-ADM2-72505758B81840583         0.5902\nNGA-ADM2-72505758B8232613          0.9139\nNGA-ADM2-72505758B82571199         0.0734\nNGA-ADM2-72505758B82611067         0.8759\nNGA-ADM2-72505758B82612540         0.6112\nNGA-ADM2-72505758B82650021         0.1768\nNGA-ADM2-72505758B82952463         0.5613\nNGA-ADM2-72505758B82980400         0.0458\nNGA-ADM2-72505758B83115922         0.0004\nNGA-ADM2-72505758B83213265         0.7029\nNGA-ADM2-72505758B83356374         0.0977\nNGA-ADM2-72505758B83595220         0.2424\nNGA-ADM2-72505758B83712041         0.0977\nNGA-ADM2-72505758B83816053         0.4136\nNGA-ADM2-72505758B83963728         0.0949\nNGA-ADM2-72505758B83971794         0.0000\nNGA-ADM2-72505758B84114048         0.8453\nNGA-ADM2-72505758B84194123         0.1768\nNGA-ADM2-72505758B84339715         0.3053\nNGA-ADM2-72505758B84457876         0.4150\nNGA-ADM2-72505758B84478450         0.2482\nNGA-ADM2-72505758B84831958         0.4138\nNGA-ADM2-72505758B84865629         0.0004\nNGA-ADM2-72505758B85138406         0.1768\nNGA-ADM2-72505758B85275479         0.8059\nNGA-ADM2-72505758B85519087         0.1308\nNGA-ADM2-72505758B86064137         0.0734\nNGA-ADM2-72505758B86185926         0.0701\nNGA-ADM2-72505758B8622199          0.0106\nNGA-ADM2-72505758B86358915         0.4523\nNGA-ADM2-72505758B8652160          0.0345\nNGA-ADM2-72505758B86583227         0.0060\nNGA-ADM2-72505758B86734523         0.0421\nNGA-ADM2-72505758B86763634         0.1308\nNGA-ADM2-72505758B86773608         0.9139\nNGA-ADM2-72505758B86821483         0.1444\nNGA-ADM2-72505758B8687564          0.0977\nNGA-ADM2-72505758B86879364         0.0555\nNGA-ADM2-72505758B8726241          0.0523\nNGA-ADM2-72505758B8775504          0.0000\nNGA-ADM2-72505758B87811615         0.0001\nNGA-ADM2-72505758B87995813         0.1768\nNGA-ADM2-72505758B88150775         0.0007\nNGA-ADM2-72505758B88452088         0.5211\nNGA-ADM2-72505758B88587475         0.1308\nNGA-ADM2-72505758B88727897         0.0579\nNGA-ADM2-72505758B88761962         0.9704\nNGA-ADM2-72505758B88921590         0.0977\nNGA-ADM2-72505758B88925335         0.1768\nNGA-ADM2-72505758B8918259          0.0263\nNGA-ADM2-72505758B89235976         0.7863\nNGA-ADM2-72505758B89515171         0.0000\nNGA-ADM2-72505758B8960534          0.0200\nNGA-ADM2-72505758B89722002         0.2957\nNGA-ADM2-72505758B89731144         0.0011\nNGA-ADM2-72505758B89894474         0.6032\nNGA-ADM2-72505758B90027140         0.0977\nNGA-ADM2-72505758B90250628         0.0134\nNGA-ADM2-72505758B90811761         0.0485\nNGA-ADM2-72505758B91050715         0.8449\nNGA-ADM2-72505758B91135250         0.0000\nNGA-ADM2-72505758B913149           0.2759\nNGA-ADM2-72505758B91510140         0.0000\nNGA-ADM2-72505758B91579398         0.0057\nNGA-ADM2-72505758B91650930         0.0000\nNGA-ADM2-72505758B91687942         0.0977\nNGA-ADM2-72505758B92105435         0.3930\nNGA-ADM2-72505758B92139849         0.2817\nNGA-ADM2-72505758B92277191         0.3806\nNGA-ADM2-72505758B92576019         0.1020\nNGA-ADM2-72505758B92786354         0.7691\nNGA-ADM2-72505758B92819273         0.0977\nNGA-ADM2-72505758B92921679         0.7442\nNGA-ADM2-72505758B92954057         0.7957\nNGA-ADM2-72505758B93424331         0.0977\nNGA-ADM2-72505758B93427284         0.1351\nNGA-ADM2-72505758B93593012         0.0002\nNGA-ADM2-72505758B93638472         0.3217\nNGA-ADM2-72505758B93649439         0.1338\nNGA-ADM2-72505758B93709657         0.0977\nNGA-ADM2-72505758B93737389         0.5076\nNGA-ADM2-72505758B93761587         0.0734\nNGA-ADM2-72505758B93767969         0.0555\nNGA-ADM2-72505758B94189690         0.6446\nNGA-ADM2-72505758B94509825         0.1308\nNGA-ADM2-72505758B94606913         0.0001\nNGA-ADM2-72505758B94629448         0.1308\nNGA-ADM2-72505758B94685339         0.1768\nNGA-ADM2-72505758B94886311         0.0000\nNGA-ADM2-72505758B94925970         0.0000\nNGA-ADM2-72505758B94954595         0.0555\nNGA-ADM2-72505758B95154533         0.0016\nNGA-ADM2-72505758B95191090         0.1768\nNGA-ADM2-72505758B95323810         0.1308\nNGA-ADM2-72505758B95411855         0.2955\nNGA-ADM2-72505758B95429572         0.7436\nNGA-ADM2-72505758B95534398         0.4686\nNGA-ADM2-72505758B95566521         0.9052\nNGA-ADM2-72505758B95606818         0.1705\nNGA-ADM2-72505758B95781523         0.0734\nNGA-ADM2-72505758B9585780          0.0928\nNGA-ADM2-72505758B95859729         0.7308\nNGA-ADM2-72505758B95872281         0.4116\nNGA-ADM2-72505758B95999274         0.1308\nNGA-ADM2-72505758B9609327          0.1308\nNGA-ADM2-72505758B9615674          0.3510\nNGA-ADM2-72505758B96206882         0.0031\nNGA-ADM2-72505758B96230569         0.8365\nNGA-ADM2-72505758B9625976          0.0024\nNGA-ADM2-72505758B96315687         0.7866\nNGA-ADM2-72505758B96375167         0.9211\nNGA-ADM2-72505758B96655345         0.1308\nNGA-ADM2-72505758B9668183          0.6812\nNGA-ADM2-72505758B96685701         0.0734\nNGA-ADM2-72505758B96746323         0.9801\nNGA-ADM2-72505758B9692286          0.1768\nNGA-ADM2-72505758B96981662         0.1768\nNGA-ADM2-72505758B97139317         0.1768\nNGA-ADM2-72505758B97184317         0.7869\nNGA-ADM2-72505758B9725515          0.2424\nNGA-ADM2-72505758B97294598         0.0139\nNGA-ADM2-72505758B97405906         0.9649\nNGA-ADM2-72505758B97448934         0.1768\nNGA-ADM2-72505758B9755199          0.5873\nNGA-ADM2-72505758B98057596         0.0413\nNGA-ADM2-72505758B98072407         0.1040\nNGA-ADM2-72505758B98086722         0.3014\nNGA-ADM2-72505758B98116860         0.6409\nNGA-ADM2-72505758B98120163         0.1768\nNGA-ADM2-72505758B98218468         0.0977\nNGA-ADM2-72505758B98262124         0.0687\nNGA-ADM2-72505758B98593855         0.0021\nNGA-ADM2-72505758B98658548         0.7556\nNGA-ADM2-72505758B98737176         0.1768\nNGA-ADM2-72505758B98765613         0.0914\nNGA-ADM2-72505758B99221548         0.5477\nNGA-ADM2-72505758B99270352         0.3985\nNGA-ADM2-72505758B99641746         0.1338\nNGA-ADM2-72505758B99650649         0.0000\nNGA-ADM2-72505758B99764805         0.1308\nNGA-ADM2-72505758B9986554          0.7457\nNGA-ADM2-72505758B99970923         0.7119\n\n\n\nMapping the local Moran’s I: I append the local Moran’s I dataframe onto Nigeria spatial polygon dataframe\n\n\nnga_wp.localMI <- cbind(nga_wp,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\nMapping local Moran’s I values: Using choropleth mapping functions of tmap package,I plot the local Moran’s I values by using the code chinks below\n\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nMapping local Moran’s I p-values\n\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nMapping both local Moran’s I values and p-values\n\n\nlocalMI.map <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n2.3.1.2 Creating a LISA Cluster Map\n\n(1) Plotting Moran scatterplot\n\nnci <- moran.plot(nga_wp$`wpt functional`, rswm_q,\n                  labels=as.character(nga_wp$shapeName), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\nthe plot is split in 4 quadrants.\n\n\n(2) Plotting Moran scatterplot with standardised variable\n\nnga_wp$Z.wpt_functional <- scale(nga_wp$`wpt functional`) %>% \n  as.vector \n\n\nnci2 <- moran.plot(nga_wp$Z.wpt_functional, rswm_q,\n                   labels=as.character(nga_wp$shapeName),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n(3) Preparing LISA map classes\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nnga_wp$lag_wpt_functional <- lag.listw(rswm_q, nga_wp$`wpt functional`)\nDV <- nga_wp$lag_wpt_functional - mean(nga_wp$lag_wpt_functional)     \n\n\nLM_I <- localMI[,1] - mean(localMI[,1])    \n\n\nsignif <- 0.05       \n\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n\n\nquadrant[localMI[,5]>signif] <- 0\n\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nnga_wp$lag_wpt_functional <- lag.listw(rswm_q, nga_wp$`wpt functional`)\nDV <- nga_wp$lag_wpt_functional - mean(nga_wp$lag_wpt_functional)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4    \nquadrant[localMI[,5]>signif] <- 0\n\n\n\n(4) Plotting LISA map\n\nnga_wp.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\ngdppc <- qtm(nga_wp, \"wpt functional\")\n\nnga_wp.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\n\n\n\n\n2.3.2 Not Functional water points\n\n2.3.1.1 Computing local Moran’s I\nI use shapeID column because there are duplication “Bassa, Ifelodun, Irepodun, Nasarawa, Obi, Surulere” in shapename column\n\nfips <- order(nga_wp$shapeID)\nlocalMI <- localmoran(nga_wp$`wpt non-functional`, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii     Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.743259879 -0.0001170554 0.02255956 -4.94774157   7.507950e-07\n2  1.164028068 -0.0002485396 0.06394121  4.60432271   4.138104e-06\n3  0.090483811 -0.0001170554 0.03011852  0.52205410   6.016327e-01\n4 -0.004801182 -0.0001170554 0.01284088 -0.04133626   9.670278e-01\n5  3.475006771 -0.0017934796 0.27569679  6.62161433   3.552971e-11\n6  0.058722147 -0.0001170554 0.01284088  0.51924139   6.035924e-01\n\n\nlocalmoran() function returns a matrix of values whose columns are:\nIi: the local Moran’s I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(): the p-value of local moran statistic\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=nga_wp$shapeID[fips]),\n  check.names=FALSE)\n\n                                    Ii        E.Ii      Var.Ii        Z.Ii\nNGA-ADM2-72505758B10049836 -0.46534532 -0.00011706  0.04523646 -2.18736768\nNGA-ADM2-72505758B10063467 -0.02068201 -0.00011706  0.02255956 -0.13691863\nNGA-ADM2-72505758B10065661  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B10302610 -0.02068201 -0.00011706  0.01500059 -0.16790888\nNGA-ADM2-72505758B10682130  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B11317593  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B1132196   0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B11373444  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B11735424  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B11870040  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B11997780  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B122892    0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B12413588  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B1244901   0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B12596325  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B12674914  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B12680831  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B12769973  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B12816297  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B13021078  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B13075745  0.09048381 -0.00011706  0.00895342  0.95749822\nNGA-ADM2-72505758B13233811  0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B13380599 -0.46534532 -0.00011706  0.01500059 -3.79849820\nNGA-ADM2-72505758B13427126  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B13487741  9.31089499 -0.17183549 18.23884152  2.22041822\nNGA-ADM2-72505758B13685756  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B139854    0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B14016122 -0.13184784 -0.00024854  0.02726102 -0.79704443\nNGA-ADM2-72505758B14174427  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B14213332  0.19212114 -0.00024854  0.04789363  0.87901798\nNGA-ADM2-72505758B14369579  1.03825188 -0.00179348  0.27569679  1.98078082\nNGA-ADM2-72505758B14654508  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B14842261  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B15135669 -0.13184784 -0.00024854  0.02382225 -0.85263307\nNGA-ADM2-72505758B15152925  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B15168871  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B15269567  0.06578029 -0.00011706  0.00996128  0.66025305\nNGA-ADM2-72505758B15283345  9.22196233 -0.06503740  7.79336848  3.32669379\nNGA-ADM2-72505758B15329511  0.37887972 -0.00912373  1.39221583  0.32883823\nNGA-ADM2-72505758B15626765  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B15745475  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B15928088 -0.03656285 -0.00011706  0.01284088 -0.32162508\nNGA-ADM2-72505758B1616690   0.38650252 -0.00024854  0.03826508  1.97710724\nNGA-ADM2-72505758B16281923  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B16283774  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B16331092  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B16408752 -0.13184784 -0.00011706  0.01500059 -1.07555621\nNGA-ADM2-72505758B16424915 -0.24301366 -0.00011706  0.01500059 -1.98320354\nNGA-ADM2-72505758B16610760  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B16696559 -0.03928527 -0.00024854  0.02726102 -0.23642992\nNGA-ADM2-72505758B16765159  0.00710944 -0.00011706  0.01122111  0.06821974\nNGA-ADM2-72505758B16773759  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B17259178  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B17453237  0.25691493 -0.00024854  0.03826508  1.31464348\nNGA-ADM2-72505758B17534332  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B17563771  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B17614134  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B17633838 -0.13184784 -0.00011706  0.04523646 -0.61935975\nNGA-ADM2-72505758B17736122 -0.09479256 -0.00011706  0.01500059 -0.77300710\nNGA-ADM2-72505758B1782277   0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B18027142  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B18156007  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B18272004  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B1827434   0.23840242 -0.00024854  0.02726102  1.44541361\nNGA-ADM2-72505758B18295427  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B18326272 -0.20595839 -0.00011706  0.03011852 -1.18608482\nNGA-ADM2-72505758B18376242  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B18447698 -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B18534598  0.08413148 -0.00024854  0.03184604  0.47283746\nNGA-ADM2-72505758B18548676  0.12732734 -0.00024854  0.03826508  0.65217972\nNGA-ADM2-72505758B18747813  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B18888506  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B18960886  0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B19119765  0.06578029 -0.00011706  0.00996128  0.66025305\nNGA-ADM2-72505758B19327087  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B19376786 -0.02068201 -0.00011706  0.01500059 -0.16790888\nNGA-ADM2-72505758B19458752  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B19462210  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B19539344 -0.03656285 -0.00011706  0.01284088 -0.32162508\nNGA-ADM2-72505758B196939   -0.02512865 -0.03072001  4.58548780  0.00261111\nNGA-ADM2-72505758B19914513  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B20050296  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B20351569  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B20421162 10.97838237 -0.00912373  3.49413543  5.87799567\nNGA-ADM2-72505758B20535362  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B20542872  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B20606047  0.19212114 -0.00024854  0.04789363  0.87901798\nNGA-ADM2-72505758B20675427  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B20849864 -1.11010710 -0.00011706  0.01802418 -8.26782681\nNGA-ADM2-72505758B21150125  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B21444598  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B21552075  0.05327729 -0.00024854  0.02726102  0.32418459\nNGA-ADM2-72505758B2169568   0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B2190517  -0.63209405 -0.00011706  0.02255956 -4.20761497\nNGA-ADM2-72505758B21920023  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B2204672  -0.03656285 -0.00011706  0.01284088 -0.32162508\nNGA-ADM2-72505758B22226897  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B22346210  0.16798227 -0.00179348  0.27569679  0.32334028\nNGA-ADM2-72505758B22432067  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B22509400  0.86070417 -0.01490903  2.83084336  0.52042049\nNGA-ADM2-72505758B22625464 -0.05085560 -0.00024854  0.02382225 -0.32788358\nNGA-ADM2-72505758B22711214  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B22775279  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B22890603  0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B22914768  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B22969834  0.73365752 -0.00179348  0.34506972  1.25198843\nNGA-ADM2-72505758B23063504  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B23284206  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B23339862  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B23406569  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B23525102 -0.13184784 -0.00011706  0.01802418 -0.98120457\nNGA-ADM2-72505758B23727233  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B23758727 -0.13184784 -0.00024854  0.03184604 -0.73743856\nNGA-ADM2-72505758B23938972  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B24068194 -0.02068201 -0.00011706  0.01122111 -0.19413776\nNGA-ADM2-72505758B24079849  4.66053358 -0.09498294  9.43097893  1.54852887\nNGA-ADM2-72505758B24173949  0.05327729 -0.00024854  0.02726102  0.32418459\nNGA-ADM2-72505758B24287701 -0.25889450 -0.00011706  0.01284088 -2.28364685\nNGA-ADM2-72505758B24946110  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B24975398  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B25108439  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B25110832 -0.29859658 -0.00011706  0.02255956 -1.98723515\nNGA-ADM2-72505758B25204428  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B25323941  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B25363477 -0.01035947 -0.00024854  0.02382225 -0.06550883\nNGA-ADM2-72505758B25708171  0.00000000  0.00000000  0.00000000         NaN\nNGA-ADM2-72505758B26082732  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B26198977  0.09048381 -0.00011706  0.04523646  0.42597887\nNGA-ADM2-72505758B26243068  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B2628120   0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B26346364  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B26429015 -0.10961467 -0.00011706  0.00895342 -1.15720500\nNGA-ADM2-72505758B26523677  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B26556107 -0.07626493 -0.00011706  0.02255956 -0.50698194\nNGA-ADM2-72505758B2657339   0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B26581542 -0.17227178 -0.00011706  0.00812880 -1.90943855\nNGA-ADM2-72505758B27276798  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B27408614 -0.10432106 -0.00475188  0.60612776 -0.12789185\nNGA-ADM2-72505758B2745087  -0.36264927 -0.00912373  0.76942484 -0.40303030\nNGA-ADM2-72505758B27539273  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B27542400  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B2760907  -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B27615672 -0.35417949 -0.00179348  0.22944818 -0.73565866\nNGA-ADM2-72505758B27700910  0.09048381 -0.00011706  0.00895342  0.95749822\nNGA-ADM2-72505758B27714394  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B27717699  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B27989153 -0.38197095 -0.00011706  0.01122111 -3.60478519\nNGA-ADM2-72505758B28102942 -0.02068201 -0.00011706  0.04523646 -0.09669044\nNGA-ADM2-72505758B28219123 -0.21522221 -0.00011706  0.01122111 -2.03064022\nNGA-ADM2-72505758B28322663  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B28358277  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B28448754  0.06578029 -0.00011706  0.00996128  0.66025305\nNGA-ADM2-72505758B28451778  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B28517619  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B28558302 -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B28564088  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B28688505  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B28779634  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B28994882  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B29272053  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B29476596  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B29578266  1.67644959 -0.00179348  0.46069126  2.47257729\nNGA-ADM2-72505758B29634978  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B29748439  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B29886865  0.00699601 -0.00024854  0.02726102  0.04387733\nNGA-ADM2-72505758B30062209  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B30286847  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B30316327  0.04107678 -0.00011706  0.00996128  0.41273821\nNGA-ADM2-72505758B30341250  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B30347581  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B30546335 -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B30682486  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B3073896  -0.02068201 -0.00011706  0.02255956 -0.13691863\nNGA-ADM2-72505758B3096768   0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B31033090  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B31054894 -0.13184784 -0.00024854  0.03826508 -0.67274780\nNGA-ADM2-72505758B31195973  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B31206848  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B31230586 -0.13184784 -0.00011706  0.01802418 -0.98120457\nNGA-ADM2-72505758B31246828 -0.13184784 -0.00024854  0.03184604 -0.73743856\nNGA-ADM2-72505758B31287755  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B31299772  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B31351375  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B31542029  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B31597260 -0.05099997 -0.00011706  0.00812880 -0.56436322\nNGA-ADM2-72505758B31818357  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B31818553  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B3188194   1.62704255 -0.00475188  0.40250465  2.57205347\nNGA-ADM2-72505758B31996608 -0.57651114 -0.00011706  0.02255956 -3.83755166\nNGA-ADM2-72505758B32139672  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B32177909  0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B32188730  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B32218397  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B32330173  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B32419485  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B32554889 -0.08738151 -0.00011706  0.01802418 -0.64999447\nNGA-ADM2-72505758B32611817  0.03490090 -0.00011706  0.01122111  0.33057723\nNGA-ADM2-72505758B32630687  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B32774266  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B32794130  0.84005909 -0.00475188  0.91156241  0.88484325\nNGA-ADM2-72505758B32949816  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B3304967   0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B33054765 -0.09135172 -0.00024854  0.02382225 -0.59025832\nNGA-ADM2-72505758B33108582  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B3317503  -0.26171776 -0.00475188  0.40250465 -0.40503263\nNGA-ADM2-72505758B33219881 -0.41770282 -0.00011706  0.01284088 -3.68509097\nNGA-ADM2-72505758B33244779  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B33343517  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B33542533  0.28468370 -0.00024854  0.02726102  1.72572086\nNGA-ADM2-72505758B33577737 -0.64003447 -0.00011706  0.01284088 -5.64711274\nNGA-ADM2-72505758B3369984  -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B34009830  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B34036858 -0.07626493 -0.00011706  0.02255956 -0.50698194\nNGA-ADM2-72505758B34194291  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B34380318 -0.02068201 -0.00011706  0.01500059 -0.16790888\nNGA-ADM2-72505758B34441411  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B34494634  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B34508441  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B34643703  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B34822167  0.04107678 -0.00011706  0.00996128  0.41273821\nNGA-ADM2-72505758B34881213  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B35176966  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B35597270  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B35626837  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B35748968  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B35936626  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B36147146  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B3618695   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B36277624 -0.02068201 -0.00011706  0.02255956 -0.13691863\nNGA-ADM2-72505758B36341125  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B36411974  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B36631288  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B36739173  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B36818221  0.23295756 -0.00475188  0.51886071  0.33000539\nNGA-ADM2-72505758B36829366  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B36860554  0.06253355 -0.00024854  0.03826508  0.32094784\nNGA-ADM2-72505758B36958634  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B37006139 -0.00988305 -0.00475188  0.72830162 -0.00601258\nNGA-ADM2-72505758B37235287  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B3729824   2.35332595 -0.00179348  0.15236715  6.03347142\nNGA-ADM2-72505758B37546318  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B37687991  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B3771557   0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B37718139  0.04601748 -0.00011706  0.00895342  0.48756418\nNGA-ADM2-72505758B38224950  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B3838497  -0.13184784 -0.00011706  0.02255956 -0.87704524\nNGA-ADM2-72505758B38387184  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B38470188  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B38532832  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B38565081  0.03490090 -0.00011706  0.01122111  0.33057723\nNGA-ADM2-72505758B38716464  0.04107678 -0.00011706  0.00996128  0.41273821\nNGA-ADM2-72505758B38827784 11.98903853 -0.09498294  6.57583009  4.71233544\nNGA-ADM2-72505758B38868411 -0.18478395 -0.01490903  1.88232064 -0.12381762\nNGA-ADM2-72505758B38957187  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B38976800  0.15162502 -0.00024854  0.02382225  0.98399016\nNGA-ADM2-72505758B38989055  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B39059766  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B39110166  0.01637326 -0.00011706  0.00996128  0.16522336\nNGA-ADM2-72505758B39194027  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B39432389  3.47500677 -0.00179348  0.27569679  6.62161433\nNGA-ADM2-72505758B39446185 -0.79884279 -0.00011706  0.02255956 -5.31780488\nNGA-ADM2-72505758B39689947  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B40149693  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B40157454  0.05327729 -0.00024854  0.02726102  0.32418459\nNGA-ADM2-72505758B40428434  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B40532579  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B40651914  0.88906280 -0.00179348  0.19641345  2.01012022\nNGA-ADM2-72505758B40667848  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B40714647 -0.08738151 -0.00011706  0.01802418 -0.64999447\nNGA-ADM2-72505758B40744784 -0.13184784 -0.00024854  0.03826508 -0.67274780\nNGA-ADM2-72505758B40746170  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B40877575  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B40987774 -0.22985526 -0.00179348  0.19641345 -0.51459658\nNGA-ADM2-72505758B41151402  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B41263993  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B41363947  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B41458967  0.36786901 -0.00475188  0.60612776  0.47861368\nNGA-ADM2-72505758B41522993 -0.41770282 -0.00011706  0.01284088 -3.68509097\nNGA-ADM2-72505758B41606003 -0.13184784 -0.00011706  0.00895342 -1.39217202\nNGA-ADM2-72505758B41747981  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B41820351  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B41923004  2.02053429 -0.00475188  0.60612776  2.60138307\nNGA-ADM2-72505758B41928930  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B41934932 -0.05773729 -0.00011706  0.01500059 -0.47045799\nNGA-ADM2-72505758B41955915 -0.00833026 -0.00011706  0.00996128 -0.08229148\nNGA-ADM2-72505758B4198149   0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B42001588  0.09048381 -0.00011706  0.04523646  0.42597887\nNGA-ADM2-72505758B42014722  0.03490090 -0.00011706  0.01122111  0.33057723\nNGA-ADM2-72505758B42099323  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B42200288  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B42248280 -0.13184784 -0.00011706  0.01802418 -0.98120457\nNGA-ADM2-72505758B42260172  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B42412373  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B42533808  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B42614095  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B4268401   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B42691841  0.04107678 -0.00011706  0.00996128  0.41273821\nNGA-ADM2-72505758B42781808 -0.35417949 -0.00179348  0.27569679 -0.67112405\nNGA-ADM2-72505758B42822246  0.19212114 -0.00024854  0.03826508  0.98341160\nNGA-ADM2-72505758B43208251  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B43213978 -1.07675736 -0.00011706  0.02255956 -7.16812139\nNGA-ADM2-72505758B43516104  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B43671176  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B4371453   0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B43939903  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B43980846  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B44064464  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B44073392 -0.38197095 -0.00011706  0.01122111 -3.60478519\nNGA-ADM2-72505758B4407900   0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B44145348  0.00710944 -0.00011706  0.01122111  0.06821974\nNGA-ADM2-72505758B44194354  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B44226036  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B44240493  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B44273667 -0.66544380 -0.00011706  0.01802418 -4.95572579\nNGA-ADM2-72505758B44395382  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B44548256  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B44695959  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B44831066  0.01637326 -0.00011706  0.00996128  0.16522336\nNGA-ADM2-72505758B44941782  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B45015575  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B45047614 -0.02068201 -0.00011706  0.02255956 -0.13691863\nNGA-ADM2-72505758B4505528  -0.13184784 -0.00011706  0.01802418 -0.98120457\nNGA-ADM2-72505758B45148365  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B45209095  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B45319201  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B4532539   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B45363429 -0.08738151 -0.00011706  0.01802418 -0.64999447\nNGA-ADM2-72505758B45556353 -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B45800050  0.08413148 -0.00024854  0.06394121  0.33369461\nNGA-ADM2-72505758B4580856  -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B45966975  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B46314370 -0.03656285 -0.00011706  0.01284088 -0.32162508\nNGA-ADM2-72505758B46349170  0.05327729 -0.00024854  0.02726102  0.32418459\nNGA-ADM2-72505758B4635888   0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B46467475  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B46624629 17.51969716 -0.06503740 11.72053526  5.13643852\nNGA-ADM2-72505758B46727460  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B46745149  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B46906771  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B46945820  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B47092163  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B47276571 -0.07626493 -0.00011706  0.02255956 -0.50698194\nNGA-ADM2-72505758B47502716  1.67644959 -0.00179348  0.46069126  2.47257729\nNGA-ADM2-72505758B47558893  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B47569121  0.40810046 -0.00024854  0.06394121  1.61488304\nNGA-ADM2-72505758B47597427  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B47868503  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B47972472  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B48054636  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B48100225  6.25224671 -0.03072001  3.26681887  3.47617980\nNGA-ADM2-72505758B48120393 -0.05085560 -0.00024854  0.04789363 -0.23124493\nNGA-ADM2-72505758B48161598  0.06578029 -0.00011706  0.00996128  0.66025305\nNGA-ADM2-72505758B48168473  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B48317000  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B485966    0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B48644703  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B48817484  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B48854878 -0.28006894 -0.00011706  0.01500059 -2.28575265\nNGA-ADM2-72505758B48978893 -0.67179613 -0.00011706  0.01284088 -5.92740156\nNGA-ADM2-72505758B48991596  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B49088403  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B49090421  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B49591931  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B49639858 -0.09479256 -0.00011706  0.01500059 -0.77300710\nNGA-ADM2-72505758B49756103  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B49835051  0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B49932072  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B50036017  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B50480947  1.21230580 -0.00179348  0.27569679  2.31226893\nNGA-ADM2-72505758B50499057  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B50500527  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B50566658  0.12051302 -0.00179348  0.12433769  0.34685515\nNGA-ADM2-72505758B50825869  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B5084877   0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B50871717  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B5090387   0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B50946056  1.90619229 -0.01490903  1.88232064  1.40024319\nNGA-ADM2-72505758B51199259  0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B5121987  -0.05773729 -0.00011706  0.01500059 -0.47045799\nNGA-ADM2-72505758B51332829  0.09048381 -0.00011706  0.04523646  0.42597887\nNGA-ADM2-72505758B51610317  0.09048381 -0.00011706  0.04523646  0.42597887\nNGA-ADM2-72505758B5164375   0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B51901764 -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B51902603 -0.13184784 -0.00011706  0.01802418 -0.98120457\nNGA-ADM2-72505758B52057503  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B52690633  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B52856855  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B528653    0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B52884892  0.09048381 -0.00011706  0.04523646  0.42597887\nNGA-ADM2-72505758B53166523  0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B53799809  0.00699601 -0.00024854  0.02726102  0.04387733\nNGA-ADM2-72505758B53984624  0.12732734 -0.00024854  0.03826508  0.65217972\nNGA-ADM2-72505758B54152816  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B54320674 -0.02068201 -0.00011706  0.02255956 -0.13691863\nNGA-ADM2-72505758B54394765 -0.02068201 -0.00011706  0.00895342 -0.21733690\nNGA-ADM2-72505758B54495757  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B54638889 -0.06832451 -0.00011706  0.01284088 -0.60191390\nNGA-ADM2-72505758B54686951  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B54729887  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B54838860  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B54904664  0.06253355 -0.00024854  0.03826508  0.32094784\nNGA-ADM2-72505758B55254312 -0.21522221 -0.00011706  0.01122111 -2.03064022\nNGA-ADM2-72505758B55275980  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B55501663  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B5575139   0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B5578796   0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B5592240   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B56024064  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B56032953  0.12732734 -0.00024854  0.03826508  0.65217972\nNGA-ADM2-72505758B56149510  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B5623512   2.14784562 -0.00179348  0.17163741  5.18871216\nNGA-ADM2-72505758B56331112  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B5637778   0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B56394634  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B56444221  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B56744751  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B56799054 -0.35417949 -0.00179348  0.22944818 -0.73565866\nNGA-ADM2-72505758B56816258  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B56925175 -0.13184784 -0.00024854  0.04789363 -0.60133256\nNGA-ADM2-72505758B56934856 -0.07626493 -0.00011706  0.02255956 -0.50698194\nNGA-ADM2-72505758B56955836  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B57073987  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B5716143   0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B57235084  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B57280378  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B57306951  0.22600025 -0.00179348  0.15236715  0.58357420\nNGA-ADM2-72505758B57412385 -0.02068201 -0.00011706  0.02255956 -0.13691863\nNGA-ADM2-72505758B57514033 -0.13184784 -0.00024854  0.03826508 -0.67274780\nNGA-ADM2-72505758B57638513 -0.13184784 -0.00024854  0.04789363 -0.60133256\nNGA-ADM2-72505758B57815144  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B57963290  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B58223447  0.05327729 -0.00024854  0.02726102  0.32418459\nNGA-ADM2-72505758B5824220   0.26744166 -0.00179348  0.19641345  0.60749977\nNGA-ADM2-72505758B58295941  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B5834354  -0.06832451 -0.00011706  0.01284088 -0.60191390\nNGA-ADM2-72505758B58432429  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B58640661 -0.13184784 -0.00024854  0.02726102 -0.79704443\nNGA-ADM2-72505758B5875612   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B59054861  0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B59091347  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B59710243  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B5987673  -0.20595839 -0.00011706  0.01500059 -1.68065443\nNGA-ADM2-72505758B59879704 -0.05773729 -0.00011706  0.03011852 -0.33201536\nNGA-ADM2-72505758B60171436  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B60425686  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B60502549  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B60765301 -0.13184784 -0.00024854  0.02726102 -0.79704443\nNGA-ADM2-72505758B61058152  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B61328021  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B6140913   0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B614754   -0.22078050 -0.00011706  0.01802418 -1.64362477\nNGA-ADM2-72505758B61554030  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B61584452  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B61679125  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B6178712   0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B61803394 -0.20595839 -0.00011706  0.01500059 -1.68065443\nNGA-ADM2-72505758B61833663  0.09048381 -0.00011706  0.04523646  0.42597887\nNGA-ADM2-72505758B61849091  0.06825065 -0.00011706  0.00895342  0.72253120\nNGA-ADM2-72505758B6187391   0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B61968000 -0.00480118 -0.00011706  0.01284088 -0.04133626\nNGA-ADM2-72505758B62110738  0.11112889 -0.00024854  0.04789363  0.50893035\nNGA-ADM2-72505758B62204667  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B62431971  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B62522831  0.42352755 -0.00024854  0.02726102  2.56664263\nNGA-ADM2-72505758B6253464   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B62747799 -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B62799042  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B62812657 -0.07626493 -0.00011706  0.01122111 -0.71885275\nNGA-ADM2-72505758B62943467 11.84229964 -0.06503740  7.79336848  4.26532415\nNGA-ADM2-72505758B62956588 -0.09479256 -0.00011706  0.01500059 -0.77300710\nNGA-ADM2-72505758B63001706 -0.03656285 -0.00011706  0.01284088 -0.32162508\nNGA-ADM2-72505758B63074678  0.95122492 -0.00179348  0.34506972  1.62236235\nNGA-ADM2-72505758B63382694  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B63641874  0.00710944 -0.00011706  0.01122111  0.06821974\nNGA-ADM2-72505758B63662909  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B636923    1.38635972 -0.00179348  0.22944818  2.89797805\nNGA-ADM2-72505758B63774666  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B63992612  8.38572308 -0.04074569  4.28814849  4.06921567\nNGA-ADM2-72505758B64173383 -0.13184784 -0.00024854  0.03826508 -0.67274780\nNGA-ADM2-72505758B64244244  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B64250128  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B64450018 -0.00833026 -0.00011706  0.00996128 -0.08229148\nNGA-ADM2-72505758B64474046 -0.13184784 -0.00011706  0.01802418 -0.98120457\nNGA-ADM2-72505758B64572421  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B64703850  0.01637326 -0.00011706  0.00996128  0.16522336\nNGA-ADM2-72505758B64792691 -0.00833026 -0.00011706  0.00996128 -0.08229148\nNGA-ADM2-72505758B6536467   0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B65494204  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B65514383 -0.13184784 -0.00011706  0.01802418 -0.98120457\nNGA-ADM2-72505758B65565348  0.22600025 -0.00179348  0.46069126  0.33561145\nNGA-ADM2-72505758B65644548  0.13812631 -0.00024854  0.03184604  0.77540646\nNGA-ADM2-72505758B65886725  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B65916530  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B66076488  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B66114245  0.03490090 -0.00011706  0.01122111  0.33057723\nNGA-ADM2-72505758B6619157   0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B66230476 -0.11332020 -0.00011706  0.00744162 -1.31227449\nNGA-ADM2-72505758B66286397  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B66300646  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B66308875 -0.13184784 -0.00011706  0.04523646 -0.61935975\nNGA-ADM2-72505758B66311687  1.07146550 -0.00024854  0.02726102  6.49094419\nNGA-ADM2-72505758B66384798 -0.01035947 -0.00024854  0.02382225 -0.06550883\nNGA-ADM2-72505758B6675111   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B67103889  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B67188591  0.00710944 -0.00011706  0.01122111  0.06821974\nNGA-ADM2-72505758B67228552  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B67267634  0.02378432 -0.00011706  0.00895342  0.25259715\nNGA-ADM2-72505758B67283121 -0.09135172 -0.00024854  0.02382225 -0.59025832\nNGA-ADM2-72505758B6732783  -0.07626493 -0.00011706  0.02255956 -0.50698194\nNGA-ADM2-72505758B67592189  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B67778003  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B6786568  -0.24301366 -0.00011706  0.01500059 -1.98320354\nNGA-ADM2-72505758B67905963  1.16402807 -0.00024854  0.06394121  4.60432271\nNGA-ADM2-72505758B68001848  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B68194313  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B68200680 -0.09479256 -0.00011706  0.01500059 -0.77300710\nNGA-ADM2-72505758B68356378  0.64567771 -0.00024854  0.01900798  4.68505809\nNGA-ADM2-72505758B68486014  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B68552788  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B68678547  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B6884405   0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B68875813 -0.05085560 -0.00024854  0.04789363 -0.23124493\nNGA-ADM2-72505758B68878432  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B68896460 -0.13184784 -0.00011706  0.02255956 -0.87704524\nNGA-ADM2-72505758B69061814 -0.13184784 -0.00024854  0.02726102 -0.79704443\nNGA-ADM2-72505758B69218817  0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B69255840  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B69267419  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B69319692  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B69353048  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B69357183  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B69384871 -0.00480118 -0.00011706  0.01284088 -0.04133626\nNGA-ADM2-72505758B69642516  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B69788799  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B70059085 -0.05773729 -0.00011706  0.03011852 -0.33201536\nNGA-ADM2-72505758B70119517  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B70167647  0.28047631 -0.00024854  0.01725733  2.13694841\nNGA-ADM2-72505758B70182243 -0.05773729 -0.00011706  0.01500059 -0.47045799\nNGA-ADM2-72505758B70270736  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B70271338  0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B70495723  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B70869724  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B70905299 -0.06832451 -0.00011706  0.01284088 -0.60191390\nNGA-ADM2-72505758B70998471  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B71477681  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B718280    0.09955857 -0.00024854  0.02726102  0.60449184\nNGA-ADM2-72505758B7184000   0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B71906601  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B71918331  1.08303582 -0.00024854  0.04789363  4.94998199\nNGA-ADM2-72505758B71990951  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B72019004 -0.08244081 -0.00011706  0.00996128 -0.82483602\nNGA-ADM2-72505758B72123387  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B7217003   0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B72331537  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B72340078  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B72369186  0.19212114 -0.00024854  0.02726102  1.16510635\nNGA-ADM2-72505758B72408011 -0.30812508 -0.00912373  1.74253576 -0.22650735\nNGA-ADM2-72505758B72527598  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B72583543  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B72901624 -0.13184784 -0.00024854  0.02726102 -0.79704443\nNGA-ADM2-72505758B72996990  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B73155659  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B73169585  5.65639788 -0.00475188  0.72830162  6.63359582\nNGA-ADM2-72505758B7318634   0.29852271 -0.00179348  0.34506972  0.51124059\nNGA-ADM2-72505758B7324564   0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B73267274  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B73302858  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B73332929  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B73850861  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B74167895  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B74224076 -0.00480118 -0.00011706  0.01284088 -0.04133626\nNGA-ADM2-72505758B74273353  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B74442045  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B74527534  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B74576641  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B74718112  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B7490938  -1.02117444 -0.00011706  0.03011852 -5.88346684\nNGA-ADM2-72505758B75034141  0.37104518 -0.00179348  0.22944818  0.77835663\nNGA-ADM2-72505758B75040986 -0.13184784 -0.00024854  0.09603637 -0.42465448\nNGA-ADM2-72505758B75230852 -0.03928527 -0.00024854  0.02726102 -0.23642992\nNGA-ADM2-72505758B7553151   1.38635972 -0.00179348  0.27569679  2.64375703\nNGA-ADM2-72505758B75536077 -0.00226025 -0.00024854  0.03826508 -0.01028404\nNGA-ADM2-72505758B75784992  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B75801679  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B75908239  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B75983929  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B76052259 -0.48757848 -0.00011706  0.01802418 -3.63088539\nNGA-ADM2-72505758B76392163  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B76566778  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B7691229   0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B77062793  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B7732292  -0.07785301 -0.00024854  0.03184604 -0.43486955\nNGA-ADM2-72505758B77767589 -0.68767697 -0.00011706  0.01500059 -5.61379286\nNGA-ADM2-72505758B77907079  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B78258316  5.25175428 -0.01490903  1.88232064  3.83874049\nNGA-ADM2-72505758B783054    0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B78395267 -0.08738151 -0.00011706  0.01802418 -0.64999447\nNGA-ADM2-72505758B7845389   0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B78492046  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B78527113  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B78527729  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B78555816 -0.00480118 -0.00011706  0.01284088 -0.04133626\nNGA-ADM2-72505758B7855953   0.09048381 -0.00011706  0.00895342  0.95749822\nNGA-ADM2-72505758B78597532  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B78619683  0.11112889 -0.00024854  0.02382225  0.72161541\nNGA-ADM2-72505758B78698197  0.09048381 -0.00011706  0.09059026  0.30101740\nNGA-ADM2-72505758B78741094  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B79155077  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B79178637  0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B79193959  0.02696048 -0.00011706  0.01284088  0.23895257\nNGA-ADM2-72505758B79316383 -0.13184784 -0.00024854  0.09603637 -0.42465448\nNGA-ADM2-72505758B79444654 -0.13184784 -0.00011706  0.02255956 -0.87704524\nNGA-ADM2-72505758B79493017  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B7968540   0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B79803896  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B79815894 -0.74325988 -0.00011706  0.02255956 -4.94774157\nNGA-ADM2-72505758B79902123  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B79945925  0.03013665 -0.00024854  0.04789363  0.13884271\nNGA-ADM2-72505758B79983056  7.28132463 -0.03072001  3.26681887  4.04553820\nNGA-ADM2-72505758B80057854  0.05327729 -0.00024854  0.02726102  0.32418459\nNGA-ADM2-72505758B80290097 -0.10432106 -0.00475188  1.21699706 -0.09025686\nNGA-ADM2-72505758B8045942   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B80517430  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B80733792 -0.06705404 -0.00024854  0.03826508 -0.34151592\nNGA-ADM2-72505758B80737371 -1.11645944 -0.00011706  0.01284088 -9.85144510\nNGA-ADM2-72505758B80966644  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B81144344  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B8143254  -0.07785301 -0.00024854  0.03184604 -0.43486955\nNGA-ADM2-72505758B8152058  -0.02385818 -0.00024854  0.06394121 -0.09336820\nNGA-ADM2-72505758B81562716 -0.00480118 -0.00011706  0.01284088 -0.04133626\nNGA-ADM2-72505758B81594808  0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B81600634  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B81840583 -0.13184784 -0.00024854  0.06394121 -0.52043100\nNGA-ADM2-72505758B8232613   0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B82571199  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B82611067  0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B82612540 -0.04291518 -0.00011706  0.01802418 -0.31878437\nNGA-ADM2-72505758B82650021  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B82952463  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B82980400  0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B83115922 -0.35417949 -0.00179348  0.34506972 -0.59988118\nNGA-ADM2-72505758B83213265 -0.06408962 -0.00179348  0.22944818 -0.13005254\nNGA-ADM2-72505758B83356374  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B83595220  0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B83712041  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B83816053  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B83963728  0.02378432 -0.00011706  0.00895342  0.25259715\nNGA-ADM2-72505758B83971794  0.00699601 -0.00024854  0.02726102  0.04387733\nNGA-ADM2-72505758B84114048 -0.06832451 -0.00011706  0.01284088 -0.60191390\nNGA-ADM2-72505758B84194123  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B84339715 -0.13184784 -0.00024854  0.09603637 -0.42465448\nNGA-ADM2-72505758B84457876  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B84478450  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B84831958  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B84865629  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B85138406  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B85275479  6.03414994 -0.00475188  1.21699706  5.47410603\nNGA-ADM2-72505758B85519087  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B86064137  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B86185926 -0.04847347 -0.00011706  0.01122111 -0.45649525\nNGA-ADM2-72505758B8622199   1.56041364 -0.00179348  0.27569679  2.97524514\nNGA-ADM2-72505758B86358915  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B8652160   0.02696048 -0.00011706  0.00636177  0.33948469\nNGA-ADM2-72505758B86583227  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B86734523  0.06578029 -0.00011706  0.00996128  0.66025305\nNGA-ADM2-72505758B86763634  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B86773608  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B86821483  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B8687564   0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B86879364  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B8726241   0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B8775504   0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B87811615 -0.17177679 -0.00475188  0.51886071 -0.23187603\nNGA-ADM2-72505758B87995813  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B88150775  0.19212114 -0.00024854  0.19232187  0.43865419\nNGA-ADM2-72505758B88452088  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B88587475 -0.26524683 -0.00011706  0.01802418 -1.97483488\nNGA-ADM2-72505758B88727897  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B88761962  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B88921590  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B88925335  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B8918259   0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B89235976 -0.13184784 -0.00011706  0.02255956 -0.87704524\nNGA-ADM2-72505758B89515171  0.84005909 -0.00475188  0.51886071  1.17282752\nNGA-ADM2-72505758B8960534  -0.15963930 -0.00011706  0.01122111 -1.50592523\nNGA-ADM2-72505758B89722002  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B89731144 -0.06705404 -0.00024854  0.03826508 -0.34151592\nNGA-ADM2-72505758B89894474  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B90027140  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B90250628  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B90811761 -0.05773729 -0.00011706  0.00996128 -0.57732117\nNGA-ADM2-72505758B91050715 -0.09479256 -0.00011706  0.01500059 -0.77300710\nNGA-ADM2-72505758B91135250 -0.10008618 -0.00011706  0.01284088 -0.88220273\nNGA-ADM2-72505758B913149    0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B91510140  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B91579398  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B91650930 -0.02385818 -0.00024854  0.02114765 -0.16235224\nNGA-ADM2-72505758B91687942  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B92105435  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B92139849  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B92277191  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B92576019  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B92786354  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B92819273  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B92921679  3.43710452 -0.00475188  0.60612776  4.42089969\nNGA-ADM2-72505758B92954057  0.34203619 -0.00179348  0.27569679  0.65482838\nNGA-ADM2-72505758B93424331  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B93427284 -0.09479256 -0.00011706  0.01500059 -0.77300710\nNGA-ADM2-72505758B93593012  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B93638472  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B93649439  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B93709657  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B93737389  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B93761587  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B93767969  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B94189690  0.19212114 -0.00024854  0.03826508  0.98341160\nNGA-ADM2-72505758B94509825  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B94606913 -0.13184784 -0.00011706  0.02255956 -0.87704524\nNGA-ADM2-72505758B94629448  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B94685339  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B94886311  0.03013665 -0.00024854  0.02382225  0.19686592\nNGA-ADM2-72505758B94925970 -0.05773729 -0.00011706  0.00996128 -0.57732117\nNGA-ADM2-72505758B94954595  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B95154533  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B95191090  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B95323810  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B95411855 -0.02068201 -0.00011706  0.01122111 -0.19413776\nNGA-ADM2-72505758B95429572  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B95534398 -0.02782839 -0.00179348  0.17163741 -0.06284201\nNGA-ADM2-72505758B95566521 -0.16890311 -0.00011706  0.01500059 -1.37810532\nNGA-ADM2-72505758B95606818  0.04813493 -0.00024854  0.02114765  0.33271001\nNGA-ADM2-72505758B95781523  0.09048381 -0.00011706  0.01284088  0.79953022\nNGA-ADM2-72505758B9585780  -0.08556656 -0.00024854  0.02726102 -0.51673718\nNGA-ADM2-72505758B95859729  0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B95872281 -0.07626493 -0.00011706  0.02255956 -0.50698194\nNGA-ADM2-72505758B95999274  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B9609327   0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B9615674   0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B96206882 -0.13184784 -0.00024854  0.04789363 -0.60133256\nNGA-ADM2-72505758B96230569 -0.16890311 -0.00011706  0.01500059 -1.37810532\nNGA-ADM2-72505758B9625976   0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B96315687  0.00155115 -0.00011706  0.01802418  0.01242573\nNGA-ADM2-72505758B96375167  0.09048381 -0.00011706  0.01500059  0.73973844\nNGA-ADM2-72505758B96655345  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B9668183   0.06269236 -0.00011706  0.01122111  0.59293473\nNGA-ADM2-72505758B96685701  0.05872215 -0.00011706  0.01284088  0.51924139\nNGA-ADM2-72505758B96746323  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B9692286   0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B96981662  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B97139317  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B97184317 -0.29859658 -0.00011706  0.01122111 -2.81771271\nNGA-ADM2-72505758B9725515   0.09048381 -0.00011706  0.03011852  0.52205410\nNGA-ADM2-72505758B97294598 -0.03656285 -0.00011706  0.01284088 -0.32162508\nNGA-ADM2-72505758B97405906 -0.20595839 -0.00011706  0.01500059 -1.68065443\nNGA-ADM2-72505758B97448934  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B9755199  -0.18743075 -0.00011706  0.02255956 -1.24710854\nNGA-ADM2-72505758B98057596 -0.03303377 -0.00011706  0.00996128 -0.32980633\nNGA-ADM2-72505758B98072407  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B98086722 -0.09585129 -0.00024854  0.02114765 -0.65741448\nNGA-ADM2-72505758B98116860  0.11112889 -0.00024854  0.02382225  0.72161541\nNGA-ADM2-72505758B98120163  0.03490090 -0.00011706  0.02255956  0.23314467\nNGA-ADM2-72505758B98218468  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B98262124  0.01637326 -0.00011706  0.01500059  0.13464022\nNGA-ADM2-72505758B98593855  0.09048381 -0.00011706  0.01122111  0.85529222\nNGA-ADM2-72505758B98658548  0.09048381 -0.00011706  0.00996128  0.90776790\nNGA-ADM2-72505758B98737176  0.09048381 -0.00011706  0.02255956  0.60320797\nNGA-ADM2-72505758B98765613  0.05342854 -0.00011706  0.01500059  0.43718933\nNGA-ADM2-72505758B99221548  0.36786901 -0.00475188  0.60612776  0.47861368\nNGA-ADM2-72505758B99270352  0.03490090 -0.00011706  0.01122111  0.33057723\nNGA-ADM2-72505758B99641746  0.09048381 -0.00011706  0.01802418  0.67484594\nNGA-ADM2-72505758B99650649 -0.28006894 -0.00011706  0.01500059 -2.28575265\nNGA-ADM2-72505758B99764805  0.04601748 -0.00011706  0.01802418  0.34363584\nNGA-ADM2-72505758B9986554   0.01637326 -0.00011706  0.03011852  0.09501937\nNGA-ADM2-72505758B99970923  0.09048381 -0.00011706  0.03011852  0.52205410\n                           Pr.z....E.Ii..\nNGA-ADM2-72505758B10049836         0.0287\nNGA-ADM2-72505758B10063467         0.8911\nNGA-ADM2-72505758B10065661         0.4240\nNGA-ADM2-72505758B10302610         0.8667\nNGA-ADM2-72505758B10682130         0.4998\nNGA-ADM2-72505758B11317593         0.9901\nNGA-ADM2-72505758B1132196          0.8111\nNGA-ADM2-72505758B11373444         0.5464\nNGA-ADM2-72505758B11735424         0.4240\nNGA-ADM2-72505758B11870040         0.4998\nNGA-ADM2-72505758B11997780         0.3924\nNGA-ADM2-72505758B122892           0.5464\nNGA-ADM2-72505758B12413588         0.4595\nNGA-ADM2-72505758B1244901          0.6036\nNGA-ADM2-72505758B12596325         0.4240\nNGA-ADM2-72505758B12674914         0.7311\nNGA-ADM2-72505758B12680831         0.4998\nNGA-ADM2-72505758B12769973         0.4595\nNGA-ADM2-72505758B12816297         0.9901\nNGA-ADM2-72505758B13021078         0.4240\nNGA-ADM2-72505758B13075745         0.3383\nNGA-ADM2-72505758B13233811         0.9243\nNGA-ADM2-72505758B13380599         0.0001\nNGA-ADM2-72505758B13427126         0.4998\nNGA-ADM2-72505758B13487741         0.0264\nNGA-ADM2-72505758B13685756         0.8156\nNGA-ADM2-72505758B139854           0.5464\nNGA-ADM2-72505758B14016122         0.4254\nNGA-ADM2-72505758B14174427         0.8156\nNGA-ADM2-72505758B14213332         0.3794\nNGA-ADM2-72505758B14369579         0.0476\nNGA-ADM2-72505758B14654508         0.5464\nNGA-ADM2-72505758B14842261         0.5532\nNGA-ADM2-72505758B15135669         0.3939\nNGA-ADM2-72505758B15152925         0.7311\nNGA-ADM2-72505758B15168871         0.3924\nNGA-ADM2-72505758B15269567         0.5091\nNGA-ADM2-72505758B15283345         0.0009\nNGA-ADM2-72505758B15329511         0.7423\nNGA-ADM2-72505758B15626765         0.4998\nNGA-ADM2-72505758B15745475         0.5532\nNGA-ADM2-72505758B15928088         0.7477\nNGA-ADM2-72505758B1616690          0.0480\nNGA-ADM2-72505758B16281923         0.7311\nNGA-ADM2-72505758B16283774         0.5464\nNGA-ADM2-72505758B16331092         0.8929\nNGA-ADM2-72505758B16408752         0.2821\nNGA-ADM2-72505758B16424915         0.0473\nNGA-ADM2-72505758B16610760         0.4240\nNGA-ADM2-72505758B16696559         0.8131\nNGA-ADM2-72505758B16765159         0.9456\nNGA-ADM2-72505758B16773759         0.4998\nNGA-ADM2-72505758B17259178         0.5464\nNGA-ADM2-72505758B17453237         0.1886\nNGA-ADM2-72505758B17534332         0.4998\nNGA-ADM2-72505758B17563771         0.5464\nNGA-ADM2-72505758B17614134         0.7311\nNGA-ADM2-72505758B17633838         0.5357\nNGA-ADM2-72505758B17736122         0.4395\nNGA-ADM2-72505758B1782277          0.8929\nNGA-ADM2-72505758B18027142         0.5464\nNGA-ADM2-72505758B18156007         0.4998\nNGA-ADM2-72505758B18272004         0.6620\nNGA-ADM2-72505758B1827434          0.1483\nNGA-ADM2-72505758B18295427         0.7311\nNGA-ADM2-72505758B18326272         0.2356\nNGA-ADM2-72505758B18376242         0.4595\nNGA-ADM2-72505758B18447698         0.7499\nNGA-ADM2-72505758B18534598         0.6363\nNGA-ADM2-72505758B18548676         0.5143\nNGA-ADM2-72505758B18747813         0.8156\nNGA-ADM2-72505758B18888506         0.4998\nNGA-ADM2-72505758B18960886         0.8111\nNGA-ADM2-72505758B19119765         0.5091\nNGA-ADM2-72505758B19327087         0.4998\nNGA-ADM2-72505758B19376786         0.8667\nNGA-ADM2-72505758B19458752         0.6036\nNGA-ADM2-72505758B19462210         0.4998\nNGA-ADM2-72505758B19539344         0.7477\nNGA-ADM2-72505758B196939           0.9979\nNGA-ADM2-72505758B19914513         0.6016\nNGA-ADM2-72505758B20050296         0.6036\nNGA-ADM2-72505758B20351569         0.4595\nNGA-ADM2-72505758B20421162         0.0000\nNGA-ADM2-72505758B20535362         0.4998\nNGA-ADM2-72505758B20542872         0.8156\nNGA-ADM2-72505758B20606047         0.3794\nNGA-ADM2-72505758B20675427         0.3640\nNGA-ADM2-72505758B20849864         0.0000\nNGA-ADM2-72505758B21150125         0.4595\nNGA-ADM2-72505758B21444598         0.3924\nNGA-ADM2-72505758B21552075         0.7458\nNGA-ADM2-72505758B2169568          0.9901\nNGA-ADM2-72505758B2190517          0.0000\nNGA-ADM2-72505758B21920023         0.3640\nNGA-ADM2-72505758B2204672          0.7477\nNGA-ADM2-72505758B22226897         0.4595\nNGA-ADM2-72505758B22346210         0.7464\nNGA-ADM2-72505758B22432067         0.3924\nNGA-ADM2-72505758B22509400         0.6028\nNGA-ADM2-72505758B22625464         0.7430\nNGA-ADM2-72505758B22711214         0.4998\nNGA-ADM2-72505758B22775279         0.5464\nNGA-ADM2-72505758B22890603         0.9243\nNGA-ADM2-72505758B22914768         0.4998\nNGA-ADM2-72505758B22969834         0.2106\nNGA-ADM2-72505758B23063504         0.4595\nNGA-ADM2-72505758B23284206         0.4240\nNGA-ADM2-72505758B23339862         0.3924\nNGA-ADM2-72505758B23406569         0.4998\nNGA-ADM2-72505758B23525102         0.3265\nNGA-ADM2-72505758B23727233         0.4595\nNGA-ADM2-72505758B23758727         0.4609\nNGA-ADM2-72505758B23938972         0.6016\nNGA-ADM2-72505758B24068194         0.8461\nNGA-ADM2-72505758B24079849         0.1215\nNGA-ADM2-72505758B24173949         0.7458\nNGA-ADM2-72505758B24287701         0.0224\nNGA-ADM2-72505758B24946110         0.4998\nNGA-ADM2-72505758B24975398         0.3924\nNGA-ADM2-72505758B25108439         0.8156\nNGA-ADM2-72505758B25110832         0.0469\nNGA-ADM2-72505758B25204428         0.4595\nNGA-ADM2-72505758B25323941         0.9901\nNGA-ADM2-72505758B25363477         0.9478\nNGA-ADM2-72505758B25708171            NaN\nNGA-ADM2-72505758B26082732         0.4240\nNGA-ADM2-72505758B26198977         0.6701\nNGA-ADM2-72505758B26243068         0.6016\nNGA-ADM2-72505758B2628120          0.5464\nNGA-ADM2-72505758B26346364         0.3924\nNGA-ADM2-72505758B26429015         0.2472\nNGA-ADM2-72505758B26523677         0.5464\nNGA-ADM2-72505758B26556107         0.6122\nNGA-ADM2-72505758B2657339          0.4240\nNGA-ADM2-72505758B26581542         0.0562\nNGA-ADM2-72505758B27276798         0.4595\nNGA-ADM2-72505758B27408614         0.8982\nNGA-ADM2-72505758B2745087          0.6869\nNGA-ADM2-72505758B27539273         0.4595\nNGA-ADM2-72505758B27542400         0.3924\nNGA-ADM2-72505758B2760907          0.7499\nNGA-ADM2-72505758B27615672         0.4619\nNGA-ADM2-72505758B27700910         0.3383\nNGA-ADM2-72505758B27714394         0.4240\nNGA-ADM2-72505758B27717699         0.6036\nNGA-ADM2-72505758B27989153         0.0003\nNGA-ADM2-72505758B28102942         0.9230\nNGA-ADM2-72505758B28219123         0.0423\nNGA-ADM2-72505758B28322663         0.4998\nNGA-ADM2-72505758B28358277         0.4998\nNGA-ADM2-72505758B28448754         0.5091\nNGA-ADM2-72505758B28451778         0.4595\nNGA-ADM2-72505758B28517619         0.4240\nNGA-ADM2-72505758B28558302         0.7499\nNGA-ADM2-72505758B28564088         0.4595\nNGA-ADM2-72505758B28688505         0.5464\nNGA-ADM2-72505758B28779634         0.8156\nNGA-ADM2-72505758B28994882         0.6016\nNGA-ADM2-72505758B29272053         0.3924\nNGA-ADM2-72505758B29476596         0.4240\nNGA-ADM2-72505758B29578266         0.0134\nNGA-ADM2-72505758B29634978         0.5464\nNGA-ADM2-72505758B29748439         0.8929\nNGA-ADM2-72505758B29886865         0.9650\nNGA-ADM2-72505758B30062209         0.5464\nNGA-ADM2-72505758B30286847         0.5464\nNGA-ADM2-72505758B30316327         0.6798\nNGA-ADM2-72505758B30341250         0.6036\nNGA-ADM2-72505758B30347581         0.3924\nNGA-ADM2-72505758B30546335         0.7499\nNGA-ADM2-72505758B30682486         0.3640\nNGA-ADM2-72505758B3073896          0.8911\nNGA-ADM2-72505758B3096768          0.3640\nNGA-ADM2-72505758B31033090         0.4998\nNGA-ADM2-72505758B31054894         0.5011\nNGA-ADM2-72505758B31195973         0.3640\nNGA-ADM2-72505758B31206848         0.5532\nNGA-ADM2-72505758B31230586         0.3265\nNGA-ADM2-72505758B31246828         0.4609\nNGA-ADM2-72505758B31287755         0.5464\nNGA-ADM2-72505758B31299772         0.6620\nNGA-ADM2-72505758B31351375         0.8156\nNGA-ADM2-72505758B31542029         0.4998\nNGA-ADM2-72505758B31597260         0.5725\nNGA-ADM2-72505758B31818357         0.4595\nNGA-ADM2-72505758B31818553         0.4595\nNGA-ADM2-72505758B3188194          0.0101\nNGA-ADM2-72505758B31996608         0.0001\nNGA-ADM2-72505758B32139672         0.8156\nNGA-ADM2-72505758B32177909         0.8111\nNGA-ADM2-72505758B32188730         0.5532\nNGA-ADM2-72505758B32218397         0.5464\nNGA-ADM2-72505758B32330173         0.5464\nNGA-ADM2-72505758B32419485         0.5532\nNGA-ADM2-72505758B32554889         0.5157\nNGA-ADM2-72505758B32611817         0.7410\nNGA-ADM2-72505758B32630687         0.3924\nNGA-ADM2-72505758B32774266         0.6036\nNGA-ADM2-72505758B32794130         0.3762\nNGA-ADM2-72505758B32949816         0.4240\nNGA-ADM2-72505758B3304967          0.4240\nNGA-ADM2-72505758B33054765         0.5550\nNGA-ADM2-72505758B33108582         0.3924\nNGA-ADM2-72505758B3317503          0.6855\nNGA-ADM2-72505758B33219881         0.0002\nNGA-ADM2-72505758B33244779         0.5464\nNGA-ADM2-72505758B33343517         0.6036\nNGA-ADM2-72505758B33542533         0.0844\nNGA-ADM2-72505758B33577737         0.0000\nNGA-ADM2-72505758B3369984          0.7499\nNGA-ADM2-72505758B34009830         0.5464\nNGA-ADM2-72505758B34036858         0.6122\nNGA-ADM2-72505758B34194291         0.5464\nNGA-ADM2-72505758B34380318         0.8667\nNGA-ADM2-72505758B34441411         0.6016\nNGA-ADM2-72505758B34494634         0.6016\nNGA-ADM2-72505758B34508441         0.5464\nNGA-ADM2-72505758B34643703         0.9901\nNGA-ADM2-72505758B34822167         0.6798\nNGA-ADM2-72505758B34881213         0.5464\nNGA-ADM2-72505758B35176966         0.4595\nNGA-ADM2-72505758B35597270         0.3640\nNGA-ADM2-72505758B35626837         0.4595\nNGA-ADM2-72505758B35748968         0.6016\nNGA-ADM2-72505758B35936626         0.3640\nNGA-ADM2-72505758B36147146         0.4998\nNGA-ADM2-72505758B3618695          0.4595\nNGA-ADM2-72505758B36277624         0.8911\nNGA-ADM2-72505758B36341125         0.4240\nNGA-ADM2-72505758B36411974         0.4998\nNGA-ADM2-72505758B36631288         0.7311\nNGA-ADM2-72505758B36739173         0.6036\nNGA-ADM2-72505758B36818221         0.7414\nNGA-ADM2-72505758B36829366         0.3640\nNGA-ADM2-72505758B36860554         0.7482\nNGA-ADM2-72505758B36958634         0.6620\nNGA-ADM2-72505758B37006139         0.9952\nNGA-ADM2-72505758B37235287         0.3640\nNGA-ADM2-72505758B3729824          0.0000\nNGA-ADM2-72505758B37546318         0.8156\nNGA-ADM2-72505758B37687991         0.4998\nNGA-ADM2-72505758B3771557          0.9243\nNGA-ADM2-72505758B37718139         0.6259\nNGA-ADM2-72505758B38224950         0.8929\nNGA-ADM2-72505758B3838497          0.3805\nNGA-ADM2-72505758B38387184         0.4595\nNGA-ADM2-72505758B38470188         0.4998\nNGA-ADM2-72505758B38532832         0.3924\nNGA-ADM2-72505758B38565081         0.7410\nNGA-ADM2-72505758B38716464         0.6798\nNGA-ADM2-72505758B38827784         0.0000\nNGA-ADM2-72505758B38868411         0.9015\nNGA-ADM2-72505758B38957187         0.5532\nNGA-ADM2-72505758B38976800         0.3251\nNGA-ADM2-72505758B38989055         0.6016\nNGA-ADM2-72505758B39059766         0.7311\nNGA-ADM2-72505758B39110166         0.8688\nNGA-ADM2-72505758B39194027         0.6016\nNGA-ADM2-72505758B39432389         0.0000\nNGA-ADM2-72505758B39446185         0.0000\nNGA-ADM2-72505758B39689947         0.4998\nNGA-ADM2-72505758B40149693         0.3924\nNGA-ADM2-72505758B40157454         0.7458\nNGA-ADM2-72505758B40428434         0.4998\nNGA-ADM2-72505758B40532579         0.4998\nNGA-ADM2-72505758B40651914         0.0444\nNGA-ADM2-72505758B40667848         0.3640\nNGA-ADM2-72505758B40714647         0.5157\nNGA-ADM2-72505758B40744784         0.5011\nNGA-ADM2-72505758B40746170         0.4595\nNGA-ADM2-72505758B40877575         0.9901\nNGA-ADM2-72505758B40987774         0.6068\nNGA-ADM2-72505758B41151402         0.5464\nNGA-ADM2-72505758B41263993         0.8156\nNGA-ADM2-72505758B41363947         0.3924\nNGA-ADM2-72505758B41458967         0.6322\nNGA-ADM2-72505758B41522993         0.0002\nNGA-ADM2-72505758B41606003         0.1639\nNGA-ADM2-72505758B41747981         0.4595\nNGA-ADM2-72505758B41820351         0.4595\nNGA-ADM2-72505758B41923004         0.0093\nNGA-ADM2-72505758B41928930         0.4595\nNGA-ADM2-72505758B41934932         0.6380\nNGA-ADM2-72505758B41955915         0.9344\nNGA-ADM2-72505758B4198149          0.7311\nNGA-ADM2-72505758B42001588         0.6701\nNGA-ADM2-72505758B42014722         0.7410\nNGA-ADM2-72505758B42099323         0.5464\nNGA-ADM2-72505758B42200288         0.4240\nNGA-ADM2-72505758B42248280         0.3265\nNGA-ADM2-72505758B42260172         0.4998\nNGA-ADM2-72505758B42412373         0.4240\nNGA-ADM2-72505758B42533808         0.3640\nNGA-ADM2-72505758B42614095         0.4998\nNGA-ADM2-72505758B4268401          0.4595\nNGA-ADM2-72505758B42691841         0.6798\nNGA-ADM2-72505758B42781808         0.5021\nNGA-ADM2-72505758B42822246         0.3254\nNGA-ADM2-72505758B43208251         0.5464\nNGA-ADM2-72505758B43213978         0.0000\nNGA-ADM2-72505758B43516104         0.6016\nNGA-ADM2-72505758B43671176         0.5532\nNGA-ADM2-72505758B4371453          0.6036\nNGA-ADM2-72505758B43939903         0.4240\nNGA-ADM2-72505758B43980846         0.6620\nNGA-ADM2-72505758B44064464         0.6620\nNGA-ADM2-72505758B44073392         0.0003\nNGA-ADM2-72505758B4407900          0.6036\nNGA-ADM2-72505758B44145348         0.9456\nNGA-ADM2-72505758B44194354         0.5464\nNGA-ADM2-72505758B44226036         0.4595\nNGA-ADM2-72505758B44240493         0.5464\nNGA-ADM2-72505758B44273667         0.0000\nNGA-ADM2-72505758B44395382         0.5464\nNGA-ADM2-72505758B44548256         0.5464\nNGA-ADM2-72505758B44695959         0.4240\nNGA-ADM2-72505758B44831066         0.8688\nNGA-ADM2-72505758B44941782         0.9901\nNGA-ADM2-72505758B45015575         0.3924\nNGA-ADM2-72505758B45047614         0.8911\nNGA-ADM2-72505758B4505528          0.3265\nNGA-ADM2-72505758B45148365         0.4998\nNGA-ADM2-72505758B45209095         0.4998\nNGA-ADM2-72505758B45319201         0.7311\nNGA-ADM2-72505758B4532539          0.4595\nNGA-ADM2-72505758B45363429         0.5157\nNGA-ADM2-72505758B45556353         0.7499\nNGA-ADM2-72505758B45800050         0.7386\nNGA-ADM2-72505758B4580856          0.7499\nNGA-ADM2-72505758B45966975         0.5464\nNGA-ADM2-72505758B46314370         0.7477\nNGA-ADM2-72505758B46349170         0.7458\nNGA-ADM2-72505758B4635888          0.4998\nNGA-ADM2-72505758B46467475         0.4595\nNGA-ADM2-72505758B46624629         0.0000\nNGA-ADM2-72505758B46727460         0.4998\nNGA-ADM2-72505758B46745149         0.7311\nNGA-ADM2-72505758B46906771         0.4998\nNGA-ADM2-72505758B46945820         0.8156\nNGA-ADM2-72505758B47092163         0.5464\nNGA-ADM2-72505758B47276571         0.6122\nNGA-ADM2-72505758B47502716         0.0134\nNGA-ADM2-72505758B47558893         0.4998\nNGA-ADM2-72505758B47569121         0.1063\nNGA-ADM2-72505758B47597427         0.4595\nNGA-ADM2-72505758B47868503         0.4998\nNGA-ADM2-72505758B47972472         0.3924\nNGA-ADM2-72505758B48054636         0.5464\nNGA-ADM2-72505758B48100225         0.0005\nNGA-ADM2-72505758B48120393         0.8171\nNGA-ADM2-72505758B48161598         0.5091\nNGA-ADM2-72505758B48168473         0.4595\nNGA-ADM2-72505758B48317000         0.6016\nNGA-ADM2-72505758B485966           0.7311\nNGA-ADM2-72505758B48644703         0.4998\nNGA-ADM2-72505758B48817484         0.5464\nNGA-ADM2-72505758B48854878         0.0223\nNGA-ADM2-72505758B48978893         0.0000\nNGA-ADM2-72505758B48991596         0.5464\nNGA-ADM2-72505758B49088403         0.6620\nNGA-ADM2-72505758B49090421         0.9901\nNGA-ADM2-72505758B49591931         0.4998\nNGA-ADM2-72505758B49639858         0.4395\nNGA-ADM2-72505758B49756103         0.4240\nNGA-ADM2-72505758B49835051         0.8111\nNGA-ADM2-72505758B49932072         0.8156\nNGA-ADM2-72505758B50036017         0.4998\nNGA-ADM2-72505758B50480947         0.0208\nNGA-ADM2-72505758B50499057         0.8156\nNGA-ADM2-72505758B50500527         0.4998\nNGA-ADM2-72505758B50566658         0.7287\nNGA-ADM2-72505758B50825869         0.5464\nNGA-ADM2-72505758B5084877          0.6620\nNGA-ADM2-72505758B50871717         0.6016\nNGA-ADM2-72505758B5090387          0.4240\nNGA-ADM2-72505758B50946056         0.1614\nNGA-ADM2-72505758B51199259         0.8111\nNGA-ADM2-72505758B5121987          0.6380\nNGA-ADM2-72505758B51332829         0.6701\nNGA-ADM2-72505758B51610317         0.6701\nNGA-ADM2-72505758B5164375          0.4998\nNGA-ADM2-72505758B51901764         0.7499\nNGA-ADM2-72505758B51902603         0.3265\nNGA-ADM2-72505758B52057503         0.7311\nNGA-ADM2-72505758B52690633         0.6620\nNGA-ADM2-72505758B52856855         0.4998\nNGA-ADM2-72505758B528653           0.5464\nNGA-ADM2-72505758B52884892         0.6701\nNGA-ADM2-72505758B53166523         0.8111\nNGA-ADM2-72505758B53799809         0.9650\nNGA-ADM2-72505758B53984624         0.5143\nNGA-ADM2-72505758B54152816         0.4595\nNGA-ADM2-72505758B54320674         0.8911\nNGA-ADM2-72505758B54394765         0.8279\nNGA-ADM2-72505758B54495757         0.6620\nNGA-ADM2-72505758B54638889         0.5472\nNGA-ADM2-72505758B54686951         0.3924\nNGA-ADM2-72505758B54729887         0.9901\nNGA-ADM2-72505758B54838860         0.4595\nNGA-ADM2-72505758B54904664         0.7482\nNGA-ADM2-72505758B55254312         0.0423\nNGA-ADM2-72505758B55275980         0.8156\nNGA-ADM2-72505758B55501663         0.4998\nNGA-ADM2-72505758B5575139          0.4240\nNGA-ADM2-72505758B5578796          0.6016\nNGA-ADM2-72505758B5592240          0.4595\nNGA-ADM2-72505758B56024064         0.7311\nNGA-ADM2-72505758B56032953         0.5143\nNGA-ADM2-72505758B56149510         0.6036\nNGA-ADM2-72505758B5623512          0.0000\nNGA-ADM2-72505758B56331112         0.4240\nNGA-ADM2-72505758B5637778          0.7311\nNGA-ADM2-72505758B56394634         0.4998\nNGA-ADM2-72505758B56444221         0.4595\nNGA-ADM2-72505758B56744751         0.7311\nNGA-ADM2-72505758B56799054         0.4619\nNGA-ADM2-72505758B56816258         0.3924\nNGA-ADM2-72505758B56925175         0.5476\nNGA-ADM2-72505758B56934856         0.6122\nNGA-ADM2-72505758B56955836         0.4998\nNGA-ADM2-72505758B57073987         0.6016\nNGA-ADM2-72505758B5716143          0.6016\nNGA-ADM2-72505758B57235084         0.6016\nNGA-ADM2-72505758B57280378         0.4240\nNGA-ADM2-72505758B57306951         0.5595\nNGA-ADM2-72505758B57412385         0.8911\nNGA-ADM2-72505758B57514033         0.5011\nNGA-ADM2-72505758B57638513         0.5476\nNGA-ADM2-72505758B57815144         0.4595\nNGA-ADM2-72505758B57963290         0.4240\nNGA-ADM2-72505758B58223447         0.7458\nNGA-ADM2-72505758B5824220          0.5435\nNGA-ADM2-72505758B58295941         0.5464\nNGA-ADM2-72505758B5834354          0.5472\nNGA-ADM2-72505758B58432429         0.9901\nNGA-ADM2-72505758B58640661         0.4254\nNGA-ADM2-72505758B5875612          0.4595\nNGA-ADM2-72505758B59054861         0.8111\nNGA-ADM2-72505758B59091347         0.5464\nNGA-ADM2-72505758B59710243         0.4998\nNGA-ADM2-72505758B5987673          0.0928\nNGA-ADM2-72505758B59879704         0.7399\nNGA-ADM2-72505758B60171436         0.5532\nNGA-ADM2-72505758B60425686         0.4998\nNGA-ADM2-72505758B60502549         0.4595\nNGA-ADM2-72505758B60765301         0.4254\nNGA-ADM2-72505758B61058152         0.5464\nNGA-ADM2-72505758B61328021         0.6620\nNGA-ADM2-72505758B6140913          0.7311\nNGA-ADM2-72505758B614754           0.1003\nNGA-ADM2-72505758B61554030         0.4595\nNGA-ADM2-72505758B61584452         0.4595\nNGA-ADM2-72505758B61679125         0.4595\nNGA-ADM2-72505758B6178712          0.4998\nNGA-ADM2-72505758B61803394         0.0928\nNGA-ADM2-72505758B61833663         0.6701\nNGA-ADM2-72505758B61849091         0.4700\nNGA-ADM2-72505758B6187391          0.4998\nNGA-ADM2-72505758B61968000         0.9670\nNGA-ADM2-72505758B62110738         0.6108\nNGA-ADM2-72505758B62204667         0.5464\nNGA-ADM2-72505758B62431971         0.7311\nNGA-ADM2-72505758B62522831         0.0103\nNGA-ADM2-72505758B6253464          0.4595\nNGA-ADM2-72505758B62747799         0.7499\nNGA-ADM2-72505758B62799042         0.3640\nNGA-ADM2-72505758B62812657         0.4722\nNGA-ADM2-72505758B62943467         0.0000\nNGA-ADM2-72505758B62956588         0.4395\nNGA-ADM2-72505758B63001706         0.7477\nNGA-ADM2-72505758B63074678         0.1047\nNGA-ADM2-72505758B63382694         0.5464\nNGA-ADM2-72505758B63641874         0.9456\nNGA-ADM2-72505758B63662909         0.6016\nNGA-ADM2-72505758B636923           0.0038\nNGA-ADM2-72505758B63774666         0.6016\nNGA-ADM2-72505758B63992612         0.0000\nNGA-ADM2-72505758B64173383         0.5011\nNGA-ADM2-72505758B64244244         0.6620\nNGA-ADM2-72505758B64250128         0.4595\nNGA-ADM2-72505758B64450018         0.9344\nNGA-ADM2-72505758B64474046         0.3265\nNGA-ADM2-72505758B64572421         0.5464\nNGA-ADM2-72505758B64703850         0.8688\nNGA-ADM2-72505758B64792691         0.9344\nNGA-ADM2-72505758B6536467          0.4998\nNGA-ADM2-72505758B65494204         0.6016\nNGA-ADM2-72505758B65514383         0.3265\nNGA-ADM2-72505758B65565348         0.7372\nNGA-ADM2-72505758B65644548         0.4381\nNGA-ADM2-72505758B65886725         0.9901\nNGA-ADM2-72505758B65916530         0.4595\nNGA-ADM2-72505758B66076488         0.4998\nNGA-ADM2-72505758B66114245         0.7410\nNGA-ADM2-72505758B6619157          0.4240\nNGA-ADM2-72505758B66230476         0.1894\nNGA-ADM2-72505758B66286397         0.3924\nNGA-ADM2-72505758B66300646         0.4240\nNGA-ADM2-72505758B66308875         0.5357\nNGA-ADM2-72505758B66311687         0.0000\nNGA-ADM2-72505758B66384798         0.9478\nNGA-ADM2-72505758B6675111          0.4595\nNGA-ADM2-72505758B67103889         0.5464\nNGA-ADM2-72505758B67188591         0.9456\nNGA-ADM2-72505758B67228552         0.5464\nNGA-ADM2-72505758B67267634         0.8006\nNGA-ADM2-72505758B67283121         0.5550\nNGA-ADM2-72505758B6732783          0.6122\nNGA-ADM2-72505758B67592189         0.5464\nNGA-ADM2-72505758B67778003         0.7311\nNGA-ADM2-72505758B6786568          0.0473\nNGA-ADM2-72505758B67905963         0.0000\nNGA-ADM2-72505758B68001848         0.6016\nNGA-ADM2-72505758B68194313         0.4998\nNGA-ADM2-72505758B68200680         0.4395\nNGA-ADM2-72505758B68356378         0.0000\nNGA-ADM2-72505758B68486014         0.6620\nNGA-ADM2-72505758B68552788         0.7311\nNGA-ADM2-72505758B68678547         0.8156\nNGA-ADM2-72505758B6884405          0.4998\nNGA-ADM2-72505758B68875813         0.8171\nNGA-ADM2-72505758B68878432         0.4240\nNGA-ADM2-72505758B68896460         0.3805\nNGA-ADM2-72505758B69061814         0.4254\nNGA-ADM2-72505758B69218817         0.9243\nNGA-ADM2-72505758B69255840         0.6620\nNGA-ADM2-72505758B69267419         0.5532\nNGA-ADM2-72505758B69319692         0.6036\nNGA-ADM2-72505758B69353048         0.4595\nNGA-ADM2-72505758B69357183         0.8929\nNGA-ADM2-72505758B69384871         0.9670\nNGA-ADM2-72505758B69642516         0.7311\nNGA-ADM2-72505758B69788799         0.4240\nNGA-ADM2-72505758B70059085         0.7399\nNGA-ADM2-72505758B70119517         0.4240\nNGA-ADM2-72505758B70167647         0.0326\nNGA-ADM2-72505758B70182243         0.6380\nNGA-ADM2-72505758B70270736         0.6016\nNGA-ADM2-72505758B70271338         0.8111\nNGA-ADM2-72505758B70495723         0.5464\nNGA-ADM2-72505758B70869724         0.4240\nNGA-ADM2-72505758B70905299         0.5472\nNGA-ADM2-72505758B70998471         0.6016\nNGA-ADM2-72505758B71477681         0.4998\nNGA-ADM2-72505758B718280           0.5455\nNGA-ADM2-72505758B7184000          0.6016\nNGA-ADM2-72505758B71906601         0.6016\nNGA-ADM2-72505758B71918331         0.0000\nNGA-ADM2-72505758B71990951         0.4595\nNGA-ADM2-72505758B72019004         0.4095\nNGA-ADM2-72505758B72123387         0.6036\nNGA-ADM2-72505758B7217003          0.6016\nNGA-ADM2-72505758B72331537         0.4998\nNGA-ADM2-72505758B72340078         0.6620\nNGA-ADM2-72505758B72369186         0.2440\nNGA-ADM2-72505758B72408011         0.8208\nNGA-ADM2-72505758B72527598         0.3924\nNGA-ADM2-72505758B72583543         0.7311\nNGA-ADM2-72505758B72901624         0.4254\nNGA-ADM2-72505758B72996990         0.4998\nNGA-ADM2-72505758B73155659         0.3924\nNGA-ADM2-72505758B73169585         0.0000\nNGA-ADM2-72505758B7318634          0.6092\nNGA-ADM2-72505758B7324564          0.9901\nNGA-ADM2-72505758B73267274         0.8156\nNGA-ADM2-72505758B73302858         0.4998\nNGA-ADM2-72505758B73332929         0.4240\nNGA-ADM2-72505758B73850861         0.7311\nNGA-ADM2-72505758B74167895         0.4595\nNGA-ADM2-72505758B74224076         0.9670\nNGA-ADM2-72505758B74273353         0.8156\nNGA-ADM2-72505758B74442045         0.7311\nNGA-ADM2-72505758B74527534         0.4998\nNGA-ADM2-72505758B74576641         0.8929\nNGA-ADM2-72505758B74718112         0.4595\nNGA-ADM2-72505758B7490938          0.0000\nNGA-ADM2-72505758B75034141         0.4364\nNGA-ADM2-72505758B75040986         0.6711\nNGA-ADM2-72505758B75230852         0.8131\nNGA-ADM2-72505758B7553151          0.0082\nNGA-ADM2-72505758B75536077         0.9918\nNGA-ADM2-72505758B75784992         0.4998\nNGA-ADM2-72505758B75801679         0.4998\nNGA-ADM2-72505758B75908239         0.4240\nNGA-ADM2-72505758B75983929         0.4998\nNGA-ADM2-72505758B76052259         0.0003\nNGA-ADM2-72505758B76392163         0.6036\nNGA-ADM2-72505758B76566778         0.4595\nNGA-ADM2-72505758B7691229          0.5464\nNGA-ADM2-72505758B77062793         0.6016\nNGA-ADM2-72505758B7732292          0.6637\nNGA-ADM2-72505758B77767589         0.0000\nNGA-ADM2-72505758B77907079         0.4998\nNGA-ADM2-72505758B78258316         0.0001\nNGA-ADM2-72505758B783054           0.9243\nNGA-ADM2-72505758B78395267         0.5157\nNGA-ADM2-72505758B7845389          0.3924\nNGA-ADM2-72505758B78492046         0.4240\nNGA-ADM2-72505758B78527113         0.4240\nNGA-ADM2-72505758B78527729         0.4240\nNGA-ADM2-72505758B78555816         0.9670\nNGA-ADM2-72505758B7855953          0.3383\nNGA-ADM2-72505758B78597532         0.4998\nNGA-ADM2-72505758B78619683         0.4705\nNGA-ADM2-72505758B78698197         0.7634\nNGA-ADM2-72505758B78741094         0.4998\nNGA-ADM2-72505758B79155077         0.4595\nNGA-ADM2-72505758B79178637         0.9243\nNGA-ADM2-72505758B79193959         0.8111\nNGA-ADM2-72505758B79316383         0.6711\nNGA-ADM2-72505758B79444654         0.3805\nNGA-ADM2-72505758B79493017         0.4998\nNGA-ADM2-72505758B7968540          0.7311\nNGA-ADM2-72505758B79803896         0.6016\nNGA-ADM2-72505758B79815894         0.0000\nNGA-ADM2-72505758B79902123         0.5464\nNGA-ADM2-72505758B79945925         0.8896\nNGA-ADM2-72505758B79983056         0.0001\nNGA-ADM2-72505758B80057854         0.7458\nNGA-ADM2-72505758B80290097         0.9281\nNGA-ADM2-72505758B8045942          0.4595\nNGA-ADM2-72505758B80517430         0.3924\nNGA-ADM2-72505758B80733792         0.7327\nNGA-ADM2-72505758B80737371         0.0000\nNGA-ADM2-72505758B80966644         0.4595\nNGA-ADM2-72505758B81144344         0.4998\nNGA-ADM2-72505758B8143254          0.6637\nNGA-ADM2-72505758B8152058          0.9256\nNGA-ADM2-72505758B81562716         0.9670\nNGA-ADM2-72505758B81594808         0.9243\nNGA-ADM2-72505758B81600634         0.4240\nNGA-ADM2-72505758B81840583         0.6028\nNGA-ADM2-72505758B8232613          0.3640\nNGA-ADM2-72505758B82571199         0.4240\nNGA-ADM2-72505758B82611067         0.5532\nNGA-ADM2-72505758B82612540         0.7499\nNGA-ADM2-72505758B82650021         0.5464\nNGA-ADM2-72505758B82952463         0.7311\nNGA-ADM2-72505758B82980400         0.9243\nNGA-ADM2-72505758B83115922         0.5486\nNGA-ADM2-72505758B83213265         0.8965\nNGA-ADM2-72505758B83356374         0.4595\nNGA-ADM2-72505758B83595220         0.9243\nNGA-ADM2-72505758B83712041         0.4595\nNGA-ADM2-72505758B83816053         0.7311\nNGA-ADM2-72505758B83963728         0.8006\nNGA-ADM2-72505758B83971794         0.9650\nNGA-ADM2-72505758B84114048         0.5472\nNGA-ADM2-72505758B84194123         0.5464\nNGA-ADM2-72505758B84339715         0.6711\nNGA-ADM2-72505758B84457876         0.6016\nNGA-ADM2-72505758B84478450         0.8929\nNGA-ADM2-72505758B84831958         0.5464\nNGA-ADM2-72505758B84865629         0.9901\nNGA-ADM2-72505758B85138406         0.5464\nNGA-ADM2-72505758B85275479         0.0000\nNGA-ADM2-72505758B85519087         0.4998\nNGA-ADM2-72505758B86064137         0.4240\nNGA-ADM2-72505758B86185926         0.6480\nNGA-ADM2-72505758B8622199          0.0029\nNGA-ADM2-72505758B86358915         0.6620\nNGA-ADM2-72505758B8652160          0.7342\nNGA-ADM2-72505758B86583227         0.4240\nNGA-ADM2-72505758B86734523         0.5091\nNGA-ADM2-72505758B86763634         0.4998\nNGA-ADM2-72505758B86773608         0.6016\nNGA-ADM2-72505758B86821483         0.4998\nNGA-ADM2-72505758B8687564          0.4595\nNGA-ADM2-72505758B86879364         0.3924\nNGA-ADM2-72505758B8726241          0.6620\nNGA-ADM2-72505758B8775504          0.7311\nNGA-ADM2-72505758B87811615         0.8166\nNGA-ADM2-72505758B87995813         0.5464\nNGA-ADM2-72505758B88150775         0.6609\nNGA-ADM2-72505758B88452088         0.6620\nNGA-ADM2-72505758B88587475         0.0483\nNGA-ADM2-72505758B88727897         0.4998\nNGA-ADM2-72505758B88761962         0.4595\nNGA-ADM2-72505758B88921590         0.4595\nNGA-ADM2-72505758B88925335         0.5464\nNGA-ADM2-72505758B8918259          0.4998\nNGA-ADM2-72505758B89235976         0.3805\nNGA-ADM2-72505758B89515171         0.2409\nNGA-ADM2-72505758B8960534          0.1321\nNGA-ADM2-72505758B89722002         0.4998\nNGA-ADM2-72505758B89731144         0.7327\nNGA-ADM2-72505758B89894474         0.4998\nNGA-ADM2-72505758B90027140         0.4595\nNGA-ADM2-72505758B90250628         0.6036\nNGA-ADM2-72505758B90811761         0.5637\nNGA-ADM2-72505758B91050715         0.4395\nNGA-ADM2-72505758B91135250         0.3777\nNGA-ADM2-72505758B913149           0.5532\nNGA-ADM2-72505758B91510140         0.6620\nNGA-ADM2-72505758B91579398         0.8929\nNGA-ADM2-72505758B91650930         0.8710\nNGA-ADM2-72505758B91687942         0.4595\nNGA-ADM2-72505758B92105435         0.7311\nNGA-ADM2-72505758B92139849         0.6016\nNGA-ADM2-72505758B92277191         0.9901\nNGA-ADM2-72505758B92576019         0.4595\nNGA-ADM2-72505758B92786354         0.4240\nNGA-ADM2-72505758B92819273         0.4595\nNGA-ADM2-72505758B92921679         0.0000\nNGA-ADM2-72505758B92954057         0.5126\nNGA-ADM2-72505758B93424331         0.4595\nNGA-ADM2-72505758B93427284         0.4395\nNGA-ADM2-72505758B93593012         0.8156\nNGA-ADM2-72505758B93638472         0.8156\nNGA-ADM2-72505758B93649439         0.4998\nNGA-ADM2-72505758B93709657         0.4595\nNGA-ADM2-72505758B93737389         0.7311\nNGA-ADM2-72505758B93761587         0.4240\nNGA-ADM2-72505758B93767969         0.3924\nNGA-ADM2-72505758B94189690         0.3254\nNGA-ADM2-72505758B94509825         0.4998\nNGA-ADM2-72505758B94606913         0.3805\nNGA-ADM2-72505758B94629448         0.4998\nNGA-ADM2-72505758B94685339         0.5464\nNGA-ADM2-72505758B94886311         0.8439\nNGA-ADM2-72505758B94925970         0.5637\nNGA-ADM2-72505758B94954595         0.3924\nNGA-ADM2-72505758B95154533         0.4595\nNGA-ADM2-72505758B95191090         0.5464\nNGA-ADM2-72505758B95323810         0.4998\nNGA-ADM2-72505758B95411855         0.8461\nNGA-ADM2-72505758B95429572         0.8929\nNGA-ADM2-72505758B95534398         0.9499\nNGA-ADM2-72505758B95566521         0.1682\nNGA-ADM2-72505758B95606818         0.7394\nNGA-ADM2-72505758B95781523         0.4240\nNGA-ADM2-72505758B9585780          0.6053\nNGA-ADM2-72505758B95859729         0.6016\nNGA-ADM2-72505758B95872281         0.6122\nNGA-ADM2-72505758B95999274         0.4998\nNGA-ADM2-72505758B9609327          0.4998\nNGA-ADM2-72505758B9615674          0.5532\nNGA-ADM2-72505758B96206882         0.5476\nNGA-ADM2-72505758B96230569         0.1682\nNGA-ADM2-72505758B9625976          0.9901\nNGA-ADM2-72505758B96315687         0.9901\nNGA-ADM2-72505758B96375167         0.4595\nNGA-ADM2-72505758B96655345         0.4998\nNGA-ADM2-72505758B9668183          0.5532\nNGA-ADM2-72505758B96685701         0.6036\nNGA-ADM2-72505758B96746323         0.8156\nNGA-ADM2-72505758B9692286          0.5464\nNGA-ADM2-72505758B96981662         0.5464\nNGA-ADM2-72505758B97139317         0.5464\nNGA-ADM2-72505758B97184317         0.0048\nNGA-ADM2-72505758B9725515          0.6016\nNGA-ADM2-72505758B97294598         0.7477\nNGA-ADM2-72505758B97405906         0.0928\nNGA-ADM2-72505758B97448934         0.5464\nNGA-ADM2-72505758B9755199          0.2124\nNGA-ADM2-72505758B98057596         0.7415\nNGA-ADM2-72505758B98072407         0.7311\nNGA-ADM2-72505758B98086722         0.5109\nNGA-ADM2-72505758B98116860         0.4705\nNGA-ADM2-72505758B98120163         0.8156\nNGA-ADM2-72505758B98218468         0.6620\nNGA-ADM2-72505758B98262124         0.8929\nNGA-ADM2-72505758B98593855         0.3924\nNGA-ADM2-72505758B98658548         0.3640\nNGA-ADM2-72505758B98737176         0.5464\nNGA-ADM2-72505758B98765613         0.6620\nNGA-ADM2-72505758B99221548         0.6322\nNGA-ADM2-72505758B99270352         0.7410\nNGA-ADM2-72505758B99641746         0.4998\nNGA-ADM2-72505758B99650649         0.0223\nNGA-ADM2-72505758B99764805         0.7311\nNGA-ADM2-72505758B9986554          0.9243\nNGA-ADM2-72505758B99970923         0.6016\n\n\n\nMapping the local Moran’s I: I append the local Moran’s I dataframe onto Nigeria spatial polygon dataframe\n\n\nnga_wp.localMI <- cbind(nga_wp,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\nMapping local Moran’s I values: Using choropleth mapping functions of tmap package,I plot the local Moran’s I values by using the code chinks below\n\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nMapping local Moran’s I p-values\n\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nMapping both local Moran’s I values and p-values\n\n\nlocalMI.map <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n2.3.1.2 Creating a LISA Cluster Map\n\n(1) Plotting Moran scatterplot\n\nnci <- moran.plot(nga_wp$`wpt non-functional`, rswm_q,\n                  labels=as.character(nga_wp$shapeName), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\nthe plot is split in 4 quadrants.\n\n\n(2) Plotting Moran scatterplot with standardised variable\n\nnga_wp$Z.wpt_nonfunctional <- scale(nga_wp$`wpt non-functional`) %>% \n  as.vector \n\n\nnci2 <- moran.plot(nga_wp$Z.wpt_nonfunctional, rswm_q,\n                   labels=as.character(nga_wp$shapeName),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n(3) Preparing LISA map classes\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nnga_wp$lag_wpt_nonfunctional <- lag.listw(rswm_q, nga_wp$`wpt non-functional`)\nDV <- nga_wp$lag_wpt_nonfunctional - mean(nga_wp$lag_wpt_nonfunctional)     \n\n\nLM_I <- localMI[,1] - mean(localMI[,1])    \n\n\nsignif <- 0.05       \n\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n\n\nquadrant[localMI[,5]>signif] <- 0\n\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nnga_wp$lag_wpt_nonfunctional <- lag.listw(rswm_q, nga_wp$`wpt non-functional`)\nDV <- nga_wp$lag_wpt_nonfunctional - mean(nga_wp$lag_wpt_nonfunctional)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4    \nquadrant[localMI[,5]>signif] <- 0\n\n\n\n(4) Plotting LISA map\n\nnga_wp.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\ngdppc <- qtm(nga_wp, \"wpt non-functional\")\n\nnga_wp.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#getis-and-ords-g-statistics",
    "href": "Take-home Exercise/Take-home Ex1.html#getis-and-ords-g-statistics",
    "title": "Take home ex1",
    "section": "3.1 Getis and Ord’s G-Statistics",
    "text": "3.1 Getis and Ord’s G-Statistics\nHere, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#deriving-distance-based-weight-matrix",
    "href": "Take-home Exercise/Take-home Ex1.html#deriving-distance-based-weight-matrix",
    "title": "Take home ex1",
    "section": "3.2 Deriving distance-based weight matrix",
    "text": "3.2 Deriving distance-based weight matrix\nFirst, I define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance.\nThere are two type of distance-based proximity matrix, they are:\n\nfixed distance weight matrix; and\nadaptive distance weight matrix.\n\n\n3.2.1 Deriving the centroid\nTo get our longitude values we map the st_centroid() function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[1]])\n\n\nlatitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[2]])\n\n\ncoords <- cbind(longitude, latitude)\n\n\n\n3.2.2 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.662  12.815  20.242  22.031  27.706  71.661 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 71.66 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour.\n\n\n3.2.3 Computing fixed distance weight matrix\n\nwm_d72 <- dnearneigh(coords, 0, 72, longlat = TRUE)\nwm_d72\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 18112 \nPercentage nonzero weights: 3.023323 \nAverage number of links: 23.40052 \n\n\n\nwm72_lw <- nb2listw(wm_d72, style = 'B')\nsummary(wm72_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 18112 \nPercentage nonzero weights: 3.023323 \nAverage number of links: 23.40052 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \n 5  8 12 21 32 35 33 35 28 36 25 21 19 23 16 14 10 13 15 17 16 11 13 10  6 12 \n27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 \n12  5 16 13 12  7  9  9 12  7 12 15 13  9 10  4  5  4  7  8  8  8  6  5  3  2 \n53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 70 \n 3  4  5  3  6  5  2  6  4  8  8  4  4  3  1  1 \n5 least connected regions:\n90 112 123 237 670 with 1 link\n1 most connected region:\n585 with 70 links\n\nWeights style: B \nWeights constants summary:\n    n     nn    S0    S1      S2\nB 774 599076 18112 36224 2614072"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#computing-adaptive-distance-weight-matrix",
    "href": "Take-home Exercise/Take-home Ex1.html#computing-adaptive-distance-weight-matrix",
    "title": "Take home ex1",
    "section": "3.3 Computing adaptive distance weight matrix",
    "text": "3.3 Computing adaptive distance weight matrix\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 6192 \nPercentage nonzero weights: 1.033592 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 6192 \nPercentage nonzero weights: 1.033592 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n  8 \n774 \n774 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 with 8 links\n774 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 with 8 links\n\nWeights style: B \nWeights constants summary:\n    n     nn   S0    S1     S2\nB 774 599076 6192 11152 201942"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html#computing-gi-statistics-and-visualize-hot-spot-area",
    "href": "Take-home Exercise/Take-home Ex1.html#computing-gi-statistics-and-visualize-hot-spot-area",
    "title": "Take home ex1",
    "section": "3.4 Computing Gi statistics and Visualize Hot Spot Area",
    "text": "3.4 Computing Gi statistics and Visualize Hot Spot Area\n\n3.4.1 Functional water points\n\n(1) Gi statistics using fixed distance\n\nfips <- order(nga_wp$shapeName)\ngi.fixed <- localG(nga_wp$`wpt functional`\n, wm72_lw)\ngi.fixed\n\n  [1] -1.0632673035 -1.0670096865 -0.9538105219  0.6908253119 -1.4739182231\n  [6]  8.4571951096  1.4115942694  2.8124345967  4.9221743543 -1.7723969977\n [11]  0.0001560952  0.8207039699  1.5598357554  3.3082321808  1.4495775297\n [16]  6.2907428360  6.7130205396  3.3774154110  2.6439754805  0.9856048585\n [21]  0.0992864076  1.7695155282 -2.2749800220 -1.3322220573 -2.1722927254\n [26]  0.0933609976  0.4024302684  7.7088908966  8.9342921266  4.7865872442\n [31]  0.2147079291  2.3699399139 -3.6973182236  1.6991586730  5.8720382946\n [36] -1.9056438031  2.6062293079  3.0701904493  3.2292064569  3.1746521879\n [41]  3.3755894496 -0.4446495103 -0.6013327048  5.3823065919  4.9004828685\n [46]  1.8718083746 -3.3522701675 -2.3516495094  1.2618878904 -1.2173447139\n [51]  1.9945170537 -2.8963151965 -2.3795294466 -2.7217034589 -0.5921487653\n [56]  1.8638332462 -1.8774170252 -2.0124418252 -1.5110495030 -0.8862870333\n [61] -0.2071057962  2.3898614683 -0.2428407217 -1.7902304320 -2.2500551193\n [66]  1.2996488317  9.9946841605 -1.0484644454 -1.9150872995  8.7974713163\n [71] 10.0874741382  5.5560861962  2.5823513363 -2.5434161821 -2.6344218933\n [76]  2.8709446373  0.0169928152 -2.8149729571 -2.8345198930 -2.3284259862\n [81] -2.9727981889  1.1682703870 -1.6563505010 -1.1689328537 -4.2581644413\n [86] -0.1820610289 -2.9727981889 -1.5110495030 -2.3439186891  0.9827453453\n [91] -1.1689328537 -0.8605786455  0.3114933949  0.2020462150 -0.4100138578\n [96] -2.8082635505 -2.4492841959 -1.3373243809 -2.8915924154 -2.3439186891\n[101] -4.0783091288  6.4028633481  0.2304692202  2.8921603918 -4.3747406190\n[106]  1.3387322056 -1.9056438031 -3.5627616473 -2.3516495094 -2.1439370584\n[111] -2.6344218933 -0.6739592159 -2.1439370584 -2.1439370584 -1.6454603170\n[116] -2.7226157453 -1.0165548390  3.1418882478  1.3178640772 10.1116645865\n[121] -1.5986155968 -0.8200419409 -0.6733282075 10.7960395837 -0.7180373730\n[126] -0.5925332794 -2.6344218933 -1.6563505010 -1.7902304320 -4.0783091288\n[131] -1.9150872995 -1.3506447225  3.7499348968 -1.5897420230  0.2770421599\n[136] -0.3577783669 -0.3150203699 -0.7571591551 -3.3522701675 -1.1689328537\n[141] -1.3840959001 -4.3747406190 -1.3506447225 -1.9150872995 -4.0783091288\n[146] -1.3506447225 -2.6344218933 -1.5110495030 -2.6344218933 -2.5434161821\n[151] -2.9727981889 -1.9150872995 -1.4875625231 -3.0520511651 -4.2581644413\n[156] -4.2581644413 -0.7893138881 -0.5612925929 -1.9960317784 -1.5110495030\n[161] -1.7801415017  0.8711692692  3.2193921963 -1.6563505010 -2.8360994887\n[166] -2.9727981889 -3.2794996320 -3.1295005143 -1.4984048673  6.7477496429\n[171]  2.4508127103 10.1665688475 10.0714638316  5.7843899693  8.3458844490\n[176]  2.6945019663  1.9756135480  6.5684218569 10.6308499194 -0.1569289100\n[181] -2.0720537157  9.3099508980 -1.4084038355 -1.0032573605  5.4619126681\n[186]  3.7048885942  6.9194236586  7.8949716964 -2.2297469487 -1.0198972137\n[191] -0.3827080897  4.3037903081  1.8677597667  1.4084688677  1.1667232394\n[196]  0.4252974336 -0.8294671812 -1.0991345181 -1.4830668445 -0.5753777952\n[201]  0.2985420427 -0.7361554330 -1.5371523487 -1.1467628533 -1.5139746076\n[206] -0.9764232608  2.2548347939 -1.1875217576 -1.2793183652 -0.8278089178\n[211] -0.2525846649 -0.2551189552  4.4891635919  1.9670557894 -2.4339821036\n[216] -2.0044792131  4.6645897747  4.4886828471 -4.3747406190 -1.6563505010\n[221] -2.3516495094 -1.9150872995 -1.6345701330 -2.0325857459 -1.5110495030\n[226] -2.6344218933 -4.0783091288 -1.5110495030 -2.5434161821 -2.1439370584\n[231] -1.3506447225 -0.6708925773 -3.0520511651 -3.6973182236 -4.0783091288\n[236] -0.6308035252  2.5993935954 -3.7630546080  0.2685122946  3.8050213822\n[241] -1.1689328537 -4.1989069936 -2.1439370584 -1.6563505010 -2.7159029934\n[246] -1.0088442604 -2.1439370584 -1.6454603170 -2.2500551193 -1.5110495030\n[251] -1.3506447225 -1.3506447225 -1.7902304320  1.8510379215 -2.4492841959\n[256] -1.7902304320 -0.0133692508 -2.3516495094 -2.0325857459 -2.1354794757\n[261] -1.6563505010 -2.4492841959  0.5127045193 -4.3167666596 -2.5434161821\n[266] -2.1439370584 -4.0169048035  4.5162590822  1.5668734268 -3.3522701675\n[271] -1.1689328537 -2.6344218933 -1.6454603170 -1.9150872995  5.8594650963\n[276]  5.6953449622  5.2660558639  4.7281326811  4.6143993534 -1.4553837194\n[281]  2.2813649171  3.1491714091  2.1462656822  1.4833490452 -0.6687443617\n[286] -1.1291208531  1.7679593468 -1.1283070357 -0.7701456812  3.1618557369\n[291] -2.2945754241 -2.1683023813 -2.6385720883 -2.2244054096  3.7867931680\n[296]  7.5439666417  1.8624642789 10.2335722131  9.2322081224  8.0371449309\n[301]  6.9681943350  9.4987689863  5.6814362239  5.9333683624 10.0880375648\n[306]  1.7459767472 -2.0236765072 -1.0457911061 -0.6319667101 -1.0252062498\n[311] -1.3234299832 -1.0211509778 -2.1563851407 -1.7627295698  2.5911165138\n[316]  3.9629547723  2.9244040096  1.3150582597  7.9287201079  3.1415040765\n[321] -1.0582913698 -1.5116031280 -1.3213325672 -3.1295005143 -2.0162075597\n[326]  2.3184552303  2.1881395727  6.2888692398  4.8861907505  6.1349551833\n[331] -1.1794814101  1.6026625621 -1.3027385048 -1.1172022474 -0.7716666771\n[336] -0.9259245188  6.3656211921 -1.2826642753 10.7093954744  0.4405987720\n[341]  6.7869686328  7.8488702920  9.9425429345 10.1938572365 -2.0325857459\n[346]  8.7462943801  8.4117773837  8.6504758633  2.7902710631 -3.8278348710\n[351] -0.0316408439  1.4296841366  0.8599975618  1.2320280653  9.0906675375\n[356] 10.9388129247  7.1267016086  7.4628307351 -1.6563505010  5.0870129700\n[361]  4.0124347905  3.2958037502  2.4218470810 -1.3175432333 -1.9618741734\n[366] -2.4607402920  7.9483367559 -0.8871555410  6.6978038451 -0.7487385134\n[371] -0.8863704779 -2.1393812426 -2.5434161821  2.7731030767 -0.9014386689\n[376]  0.9340595951  2.0044591212  8.4899062279  7.7959272575  1.3632407377\n[381] -1.1007330352 -3.1295005143 -1.7902304320 -0.0646749063 -2.5434161821\n[386] -2.1439370584  1.0988522711 -1.5110495030 -2.3516495094 -1.5008751002\n[391] -1.3811485108 -0.3494288804  1.2933470021 -4.3167666596 -0.0087186839\n[396] -1.6562283328 -1.6454603170 -2.7226157453 -3.3522701675 -1.5110495030\n[401]  0.1519013671 -0.0109993558 -2.6344218933  2.5439408115 -0.4242659287\n[406] -1.1689328537 -2.1439370584 -2.2419858410 -1.2087827890 -2.8082635505\n[411] -0.9410346434 -3.4236826784 -4.3167666596 -1.5110495030 -4.0169048035\n[416] -0.2983377402  0.6782758292 -2.4492841959  0.3995646133 -2.8082635505\n[421]  2.2905227590 -2.5434161821  0.3431833423 -1.7902304320 -0.2668019574\n[426] -3.6305730497  2.8526099674 -2.0325857459  1.9182309506 -0.9645376878\n[431] -3.7630546080 -1.7801415017 -2.3516495094 -3.9547169953 -2.6344218933\n[436]  2.0438812059 -1.6563505010  2.0875336455 -1.1586579214 -1.5110495030\n[441]  5.9246461434 -1.1535618391  2.2547023906 -1.8187640183 -2.8082635505\n[446]  1.3382943358 -1.1689328537 -4.2581644413 -4.3167666596 -4.2581644413\n[451] -2.8915924154  2.1760903433 -3.6973182236  0.4089337254 -1.9150872995\n[456]  3.3942631425 -2.6344218933 -2.1354794757  1.3374113134  6.9931549916\n[461]  2.1445971690  2.1303454343 -2.1354794757 -0.1848224157  1.3502066712\n[466]  0.8654852388 -0.7399783166  0.4687944808 -0.2949862633  2.8289063227\n[471]  0.6649046179 -1.9150872995 -1.3506447225 -4.1989069936 -1.7902304320\n[476] -1.4991276733 -1.5110495030 -2.7226157453 -1.5110495030 -2.4492841959\n[481] -1.3506447225 -2.2500551193 -4.2581644413  1.3124888815 -2.7226157453\n[486] -3.2794996320 -0.5826566417 -3.3522701675 -1.7902304320 -0.9538105219\n[491] -3.0520511651 -1.3506447225 -1.1689328537 -0.8614333295 -2.7226157453\n[496] -3.2794996320 -1.3380814261 -2.1091607582 -0.4758398089 -1.6563505010\n[501] -2.9727981889  0.0206843077 -4.1389655025 -1.9150872995 -1.4732052913\n[506]  8.4166576354 -0.9538105219  1.4495095008 -1.6563505010  4.0381438008\n[511]  6.1207930405 -1.6563505010 -1.5110495030 -3.2052777742  2.3618746785\n[516] -0.8092899885 -1.7902304320 -1.7902304320 -4.4889033722  1.1729497802\n[521]  2.1723239517 -1.7215586522 -1.5585271578 -1.0571541438 -1.3506447225\n[526] -1.7902304320 -1.5110495030 -1.2656864229 -2.0325857459 -1.9150872995\n[531] -2.1676086219 -2.7176310405  2.9809544955  1.1450446966 -2.1944913261\n[536] -2.2326145665 -2.2011410222 -0.9346421737 -1.2338219766 -1.0395789334\n[541] -1.0724879697 -1.6790681487 -2.2749800220  2.7025410943  3.2510615622\n[546]  4.3883340713  2.3454032851 -1.3129683782 -0.9159581714 10.2388189666\n[551] -1.3849119185 -1.6476981229  6.7042031311  4.4870476718  1.8900958142\n[556]  1.7470130836 10.2836194351  2.0812712794 -0.4685014316 10.9854467360\n[561] -0.7501455289 -1.1232443955  0.2085210397 -2.1518025919 -1.3060565786\n[566]  8.9130474945  9.1898147295  8.9698348181  6.8126047839  2.6220195285\n[571] -0.9619571538  1.1194708981 -2.0346595471  2.2943467622 -1.8365549811\n[576]  2.9891291323  5.5508140243  1.2144535835 -1.6230813934  1.9705503041\n[581]  4.6362865328  6.5910050128  2.2172948436  1.6887960939 -1.4725666829\n[586]  0.9198497075 -0.7961651515 -1.4356397026  2.1773120070 -1.1155004965\n[591]  9.5277257691 -1.0017638226 10.9738098691  3.4334540972  3.2012232519\n[596]  0.7011765976 -1.2009960898  5.5929839759  5.6618403963  4.6613119000\n[601]  3.3919463402 -2.6786478465 -2.6588307198 -1.1799813004 -0.7557185182\n[606] -0.1231260932  1.9279845606 -1.1401502289  7.1510513224  7.7469359467\n[611] -2.2025423334 10.8506206963 -0.5263700492 -2.1436413468 -2.0519621520\n[616] -2.0336306891 -1.3426015247 -2.4365278427 -1.8015613815  2.8479954422\n[621] -2.3973989379 -2.7118475181  2.0367411481 -1.1750303747 10.1260907067\n[626]  2.0566833970  0.3357640162  0.5058522092  2.0559015524  1.8371077698\n[631] -1.6333045334 -1.5725203818 -1.5280510788  3.6678033304  5.7520113207\n[636] -2.8720995274 -1.0485449620  7.3882521836  6.1678150146 10.5149836580\n[641] -0.7327969709  0.0572066684 -1.4864750763  0.6875506895 -1.4772817963\n[646] -1.6563505010  1.5211676324 -2.4492841959 -0.3246749821 -3.9547169953\n[651]  2.8579269001 -1.7902304320 -3.2052777742 -4.3167666596 -3.6305730497\n[656]  0.1032543571 -3.2794996320 -3.9547169953 -2.6344218933 -1.3506447225\n[661] -2.1354794757 -2.7226157453 -1.4949308110 -1.3506447225  1.8932382855\n[666]  1.4917063261 -3.1295005143  1.1526039539 -1.0937227768  1.4000757262\n[671]  2.1715782775 -2.4492841959 -1.6563505010 -2.1437789270 -4.1989069936\n[676] -2.3439186891  0.5685312893 -1.5110495030 -2.1439370584 -0.8896548347\n[681] -1.9150872995  2.4229518786 -2.6344218933 -2.2500551193 -2.7226157453\n[686] -2.7226157453 -1.9150872995 -1.1585922308 -2.3516495094  0.5638531049\n[691] -2.8915924154 -2.0325857459  2.0454593444  9.4708994953  0.5410025850\n[696] -1.3955655534 -1.1056043786 -2.8082635505  1.8474850765 -1.7902304320\n[701] -2.4492841959 -2.1439370584 -4.3167666596  2.7375307820 -1.3506447225\n[706] -2.8915924154 -4.2581644413 -1.3322220573  1.7150919527  0.6078045237\n[711] -2.1439370584 -4.1389655025 -2.8915924154 -2.1439370584 -0.1295463387\n[716] -1.3316122414 -1.5698228802 -0.5176850227 -1.4964293761 -1.7857827138\n[721] -1.2994836650 -0.3876727976 -1.0245708554  2.9424997357 -1.2643102407\n[726] -1.1087310344 -1.6338206948 -0.4210525847 -1.1538301305 -1.4723676498\n[731] -4.4321116070 -2.1578903294 -0.8395204074 -0.6437273597  4.2867547887\n[736]  2.2781822259 -1.5533967318 -1.1742762754 -1.6599276463  5.0522210888\n[741] -2.6344218933  1.7953476495 -4.1989069936 -1.9150872995 -0.3494263283\n[746] -1.2755262672 -1.4011565950 -1.5110495030 -0.2181946307 -3.8917074465\n[751]  0.9547193253 -2.3516495094 -0.2446358077 -2.5434161821  4.2947671841\n[756]  5.2300334810  4.4330276859  7.3405457235 -2.2419858410 -3.1295005143\n[761] -1.5110495030 -0.4975991205 -1.8867568105 -2.0058580299 -0.2915590759\n[766] -0.9538105219 -1.1689328537 -2.1439370584 -2.7226157453 -0.5461415291\n[771] -2.5362494095 -0.8874323615 -1.9150872995 -1.6563505010\nattr(,\"cluster\")\n  [1] Low  High Low  Low  Low  High Low  High High Low  Low  High High High High\n [16] High High High Low  Low  Low  High Low  Low  Low  Low  Low  High High High\n [31] High Low  Low  High High Low  High High High High High High Low  Low  High\n [46] High Low  Low  High Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low \n [61] Low  Low  High Low  Low  Low  High High Low  High High High High Low  Low \n [76] High Low  Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  High\n [91] Low  Low  High High Low  Low  Low  Low  Low  Low  Low  High Low  High Low \n[106] High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  High\n[121] Low  Low  Low  High High Low  Low  Low  Low  Low  Low  Low  High Low  Low \n[136] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[151] Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low  High High Low  Low \n[166] Low  Low  Low  Low  High High High High High Low  Low  High High High Low \n[181] Low  High Low  High High High High High Low  Low  Low  High Low  Low  Low \n[196] High Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low \n[211] Low  High High Low  Low  Low  High High Low  Low  Low  Low  Low  Low  Low \n[226] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High High Low  Low  High\n[241] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low \n[256] Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low  High Low  Low \n[271] Low  Low  Low  Low  Low  High High Low  High Low  High High High High Low \n[286] Low  High Low  Low  High Low  Low  Low  Low  High Low  High High High High\n[301] High High High High High Low  Low  Low  Low  Low  Low  Low  High Low  Low \n[316] Low  High High High High Low  Low  Low  Low  Low  Low  Low  High High High\n[331] High High Low  Low  High High High Low  High Low  High Low  High High Low \n[346] High High High Low  Low  Low  Low  High Low  High High High High Low  Low \n[361] High High Low  Low  Low  High High Low  High Low  Low  Low  Low  High Low \n[376] Low  High High High Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low \n[391] Low  Low  High Low  High Low  Low  Low  Low  Low  Low  High Low  High Low \n[406] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low \n[421] High Low  High Low  Low  Low  High Low  High Low  Low  Low  Low  Low  Low \n[436] High Low  High Low  Low  High Low  High Low  Low  High Low  Low  Low  Low \n[451] Low  High Low  High Low  Low  Low  Low  High High High High Low  Low  Low \n[466] High Low  Low  Low  High High Low  Low  Low  Low  Low  Low  Low  Low  Low \n[481] Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[496] Low  Low  Low  Low  Low  Low  High Low  Low  High Low  Low  High Low  High\n[511] High Low  Low  Low  Low  Low  Low  Low  Low  High High High Low  Low  Low \n[526] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High\n[541] Low  Low  Low  Low  High High Low  High High High Low  Low  High High Low \n[556] High High High High High Low  High High Low  Low  High High High High Low \n[571] Low  High Low  Low  High High High High Low  Low  High High Low  High Low \n[586] Low  Low  Low  Low  Low  High Low  High High High Low  Low  High High High\n[601] High Low  Low  High Low  High Low  High High High Low  High Low  Low  Low \n[616] Low  Low  Low  Low  High High Low  High Low  High Low  High High High Low \n[631] Low  Low  High High High Low  Low  High Low  High Low  Low  Low  High High\n[646] Low  High Low  Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[661] Low  Low  Low  Low  High High Low  Low  Low  Low  Low  Low  Low  Low  Low \n[676] Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[691] Low  Low  High High Low  Low  Low  Low  High Low  Low  Low  Low  High Low \n[706] Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low \n[721] Low  High Low  High Low  High Low  Low  High Low  Low  Low  Low  Low  High\n[736] High Low  High Low  High Low  High Low  Low  Low  Low  Low  Low  Low  Low \n[751] High Low  Low  Low  Low  High High High Low  Low  Low  Low  Low  Low  High\n[766] Low  Low  Low  Low  High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = nga_wp$`wpt functional`, listw = wm72_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\n\nnga_wp.gi <- cbind(nga_wp, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n\n(2) Mapping Gi values with fixed distance weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc <- qtm(nga_wp, \"wpt functional\")\n\nGimap <-tm_shape(nga_wp.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n(3) Gi statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\nfips <- order(nga_wp$shapeName)\ngi.adaptive <- localG(nga_wp$`wpt functional`\n, knn_lw)\nnga_wp.gi <- cbind(nga_wp, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n(4) Mapping Gi values with adaptive distance weights\nNow I visualize the location of hot spot and cold spot area. The code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc<- qtm(nga_wp, \"wpt functional\")\n\nGimap <- tm_shape(nga_wp.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n3.4.2 Not Functional water points\n\n(1) Gi statistics using fixed distance\n\nfips <- order(nga_wp$shapeName)\ngi.fixed <- localG(nga_wp$`wpt non-functional`\n, wm72_lw)\ngi.fixed\n\n  [1]  6.5337259052  6.5319238447 -0.4259788679 -0.9574982243  8.5418861626\n  [6]  1.5421779468 -1.1561964353 -1.4660718555  0.9482850743  3.1371777082\n [11]  0.0101223889 -0.7807121168  0.3515338167 -0.2677616718 -1.1573062867\n [16] -0.2584017581 -1.0170909209  0.4446715383  1.3378478253 -0.7995302161\n [21] -0.1652233639 -1.1682290936 -1.0675886676 -0.6748459383  2.8393327487\n [26]  1.0688312184 -0.2724969192 -0.2922325892 -0.5987050168 -0.4433604372\n [31]  0.7645059144 -1.1951232807  1.8419524289  2.5819762168 -0.9383484409\n [36]  1.7682827270 -0.0822593181 -0.6285091267 -0.2896071988  0.0722598791\n [41] -0.4734487746  5.4940324367 -0.1273324547 -1.0126897720 -0.4342237134\n [46] -0.4026277306  2.1768067849 -1.0502641487 -1.2629400262  0.8770452407\n [51] -1.1573062867 -0.9058386602 -0.5071496523 -0.7695234874  5.0634636910\n [56] -0.7254639953  0.0244573516 -0.0037008912 -0.6748459383 -0.7310976572\n [61] -0.1081744501 -1.1951232807 -0.6748459383 -0.7995302161 -1.0048913390\n [66]  5.9829622963  1.0273896998  2.0366041740 -0.8552922211 -0.3357900293\n [71] -0.1054445086 -0.5871686734 -0.7397384440 -1.1359085699 -0.9840709148\n [76] -0.1623522360 -0.9721623909 -1.0463396400 -1.2422799228 -0.7148217202\n [81] -1.3276737654 -1.2343339588 -0.7397384440 -0.5220541001  1.1685220223\n [86]  2.1856421836 -1.3276737654 -0.6748459383  0.0236170510 -0.3010173971\n [91] -0.5220541001  0.1160047722 -0.5191748831  0.0464515956 -0.7225311997\n [96] -1.2541913730 -1.0938685253 -0.6032079712 -1.2914066634  0.0236170510\n[101]  1.3712150830  0.4624961174  2.4766728230  5.6054061853  1.0427975403\n[106] -0.5929347263 -0.5847132984 -1.5911558306 -1.0502641487 -0.9574982243\n[111] -1.1765523969 -0.3010173971 -0.9574982243 -0.9574982243 -0.7397384440\n[116] -1.2159404267 -0.1652233639  2.8255127830  0.7885424389  0.6496970397\n[121]  2.2297832866  3.2392333195 -0.3010173971 -0.2359945688 -0.7995302161\n[126]  3.6559580389 -1.1765523969 -0.7397384440 -0.7995302161  1.3712150830\n[131] -0.8552922211 -0.6032079712 -0.9077679005  0.4569391844 -0.7225311997\n[136]  5.8086033301  5.8086033301 -0.9077679005 -1.4971487713 -0.5220541001\n[141] -0.7397384440  1.0427975403 -0.2331446682 -0.8552922211  1.3712150830\n[146] -0.6032079712 -1.1765523969 -0.6748459383 -1.1765523969 -1.1359085699\n[151] -1.3276737654 -0.3305772315 -0.7995302161 -1.3630687336 -0.7689824162\n[156]  1.1685220223  2.1214506764  0.4564952529 -1.0502641487 -0.6748459383\n[161] -0.7995302161 -0.9574982243 -0.3415159238  0.7783566342 -1.0801429459\n[166]  2.7877821570 -1.4646489093 -1.3976581886  8.0933467102  0.3249279766\n[171] -0.5192413921 -0.1054445086 -0.3643423211  0.4704579945  0.1584146108\n[176] -0.7915894327 -1.1185484438 -0.9192479158 -0.3164953046  0.5615293857\n[181]  0.3360363194 -0.5535268727  2.8080212184  7.2040350668 -0.4122764763\n[186] -0.0003741695 -0.7556085716  0.2052582683 -0.4220506910  3.9703124427\n[191]  2.1836339455 -0.9526093523 -0.5384899266 -0.7964379195 -0.8334298447\n[196] -1.1121501755  0.6438877065  0.3137427980 -0.0876396328  0.3870995356\n[201]  0.7216154088  7.2962403214  7.2566694439  3.4311214203  0.8137253622\n[206]  1.0567117486 -1.2320655304  7.6369662945  9.4696028861  0.3093949665\n[211]  0.2931288141 -0.0467996625  4.4119933424 -1.3035566958 -0.7570326281\n[216]  3.6536087596  0.7959964909  0.5843996273  1.0427975403 -0.7397384440\n[221] -1.0502641487 -0.5929347263 -0.7397384440  0.8248360183 -0.6727478048\n[226] -1.1765523969  1.3712150830 -0.6748459383 -1.1359085699 -0.7225311997\n[231] -0.6032079712 -0.6032079712 -0.0250977735  1.8419524289  1.3712150830\n[236] -0.4246544759 -0.3010173971  1.7561910619 -0.9077679005 -0.6602530550\n[241] -0.5220541001  1.2340856069 -0.9574982243 -0.7397384440 -1.2159404267\n[246]  5.5896818913  1.8621060705 -0.7397384440 -1.0048913390 -0.6748459383\n[251] -0.6032079712 -0.6032079712 -0.7995302161 -0.4875641752 -1.0938685253\n[256] -0.7995302161 -1.0048913390 -0.8354879087 -0.9077679005 -0.9574982243\n[261] -0.7397384440 -1.0938685253 -1.0048913390  1.1047958090 -1.1359085699\n[266] -0.9574982243 -1.6644981030 -0.3291851856  0.3401839944 -1.4971487713\n[271] -0.5220541001 -0.9840709148 -0.7397384440 -0.8552922211 -0.9664650390\n[276] -0.9274700573 -1.0170909209 -0.9781671913 -1.0170909209 -0.2724969192\n[281] -0.9840709148 -1.2658211310 -0.8354879087 -1.2969567904  6.1552940600\n[286]  8.5583598510  0.1369186347  7.4050351682 -0.1367816582 -0.0250977735\n[291] -1.0369866160 -0.9708223130 -0.7961347537 -0.9379938720 -1.3035566958\n[296]  0.3236161289 -1.1682290936 -0.2144132320 -0.1960384792 -0.2211914895\n[301] -0.1612416772  0.4028313845 -0.6720605973  1.8235544408  0.2372026697\n[306] -1.3035566958 -0.9077679005 -0.9352494592 -0.5334250851  0.2156222055\n[311]  0.0055772761  0.0441448754 -0.1247274277  1.9625016132 -0.7443612696\n[316] -0.9932483120 -1.1185484438 -0.9958399624  0.2530701708 -0.8090801364\n[321]  7.6953701018  0.7227084037  1.0224680449 -1.3976581886  2.1806554737\n[326] -1.2049207837 -1.3870458035 -0.8404610797 -0.1142408180  2.3915031649\n[331]  8.3232385900 -1.2982149465  8.3034986120  7.6464261358  1.0219689776\n[336]  1.5492545793  1.1456268165  6.4258988306  0.6955968289  1.1624915524\n[341] -0.5330073048  0.4195785142 -0.2682345828 -0.0616294039 -0.9077679005\n[346]  1.7969361586  0.5715437867  0.7231261765 -0.7995302161 -1.7095395023\n[351]  6.9955319102 -1.2343339588  0.8827220107 -0.0124257347  0.5670220430\n[356] -0.0616294039  0.0130252915 -0.3648907393 -0.7397384440 -1.2320655304\n[361] -1.3630687336 -0.4915910827 -0.7626240766  5.9514605000  4.7951541484\n[366]  0.0658019412  0.7294177399  0.3228949164 -0.6736279231  0.6507876137\n[371]  0.8793958255 -0.8079638602 -0.9368026006 -0.9077679005  6.8788604991\n[376]  0.2672244065 -0.8552922211 -0.4918710922  1.7016047941 -0.6602530550\n[381] -0.7397384440 -1.3976581886 -0.5192413921 -0.7397384440 -1.1359085699\n[386] -0.9574982243 -0.4127382095 -0.6748459383 -1.0502641487 -0.2525971506\n[391] -0.2525971506 -0.4845563588 -0.2525971506  1.1047958090 -0.7397384440\n[396] -0.7397384440 -0.7397384440 -1.0294479763 -1.4971487713 -0.6748459383\n[401] -0.9077679005 -0.4259788679 -1.1765523969 -1.0938685253 -0.6748459383\n[406] -0.5220541001 -0.9574982243  0.1160047722 -0.7397384440 -1.2541913730\n[411] -0.0682197367 -1.5290421294  1.1047958090 -0.6748459383 -1.6644981030\n[416] -0.2331446682 -0.4875641752 -0.8873824764 -0.8552922211 -1.2541913730\n[421] -0.7995302161 -1.1359085699 -0.5565328945 -0.7995302161 -0.7995302161\n[426] -1.6214409069 -0.2389525680 -0.9077679005 -0.5167371774  7.4529312093\n[431]  1.7561910619  1.1624915524 -0.8354879087  0.4665706284 -1.1765523969\n[436] -0.0628420131 -0.7397384440 -0.2389525680  1.8146122966 -0.6748459383\n[441]  0.6679457707 -0.5220541001 -1.1682290936 -0.9077679005 -1.2541913730\n[446] -0.2525971506 -0.5220541001  1.0518184165 -1.8065922377  1.1685220223\n[451] -1.2914066634  0.0966904414 -1.6512497976 -0.3323536723 -0.3193723174\n[456]  0.3298063272 -1.1765523969 -0.9574982243  0.1968659159 -0.9948831255\n[461] -1.2681922493 -1.2681922493  0.2173368985 -0.5929347263 -0.4371893343\n[466] -0.3305772315 -0.7225311997 -0.7397384440 -0.7397384440 -0.5929347263\n[471]  0.0413362561 -0.8552922211 -0.6032079712  1.2340856069 -0.7995302161\n[476] -0.6748459383 -0.6748459383 -1.2159404267 -0.6748459383 -1.0938685253\n[481] -0.6032079712 -1.0048913390  1.1685220223 -0.4875641752 -1.0294479763\n[486] -1.4646489093 -0.2611981899 -1.4971487713 -0.7995302161 -0.4259788679\n[491] -1.3630687336 -0.6032079712 -0.5220541001 -0.5220541001 -1.2159404267\n[496] -1.4646489093 -1.0048913390 -0.5505031914  5.6840449105 -0.7397384440\n[501] -1.3276737654  0.0822914816  1.3016062299 -0.8552922211  9.3439953613\n[506]  0.4316620441 -0.4259788679 -0.6748459383 -0.7397384440  0.6560451536\n[511] -0.2318760335 -0.7397384440 -0.6748459383 -1.4315008760 -1.1307202807\n[516] -0.8552922211  1.1624915524 -0.5192413921  0.9235918006 -0.2389525680\n[521]  0.1941377581  0.4093024002  0.4722086802  3.2423385006 -0.6032079712\n[526] -0.7995302161 -0.6748459383  3.1999870901 -0.9077679005 -0.8552922211\n[531] -0.8308762929 -1.0801429459 -0.6720605973 -1.0316248954 -0.7738549514\n[536] -0.8832154198 -0.8079638602  7.9418067757  8.7520860737  7.8750209492\n[541] -0.3707613664 -1.0502641487 -0.8748867318 -1.4506725453  1.1685479513\n[546]  0.4645408950  0.1941377581  6.6426608315  2.3241472968 -0.1054445086\n[551]  6.9433005476  3.3879178027  2.0087119489  1.3198657094 -1.3019228013\n[556]  0.0623374036  0.3720071210 -1.2533933348  7.7833588383  0.3963686530\n[561]  0.0587272458  0.1531114649  0.4033718712 -0.1678620285  2.5477299264\n[566]  0.2439994063  0.1279409304 -0.3508982143  1.8594525393  0.0441448754\n[571]  4.2754248803 -0.1081744501 -0.1047006520  2.9964787298  0.7285925680\n[576]  0.0130252915 -0.0281537916  1.0219689776 -1.2662733555 -1.1521096114\n[581]  0.8551511229 -0.0729482666 -0.5385906621  0.3632994597 -0.2336376467\n[586]  0.4523039231  7.3135879554  0.7300418099  0.5585768657  3.3852779170\n[591] -0.3502901959  0.4691883116  0.0483926035  0.1160047722 -1.3035566958\n[596]  0.4564952529  4.0406955085 -1.1771746866 -0.6266997791 -0.6786956109\n[601]  0.0244573516 -0.2563942129 -0.2816734186  8.2346116549  6.9405918512\n[606]  1.0542570922 -0.1346402247  1.1919351234  0.0055772761 -0.4203316951\n[611] -0.9956985058  0.0751082610  6.4688887040 -0.7392926370 -0.7042594728\n[616] -0.1648047591  8.7490398102 -1.4845051520 -1.0990801163 -0.0207719370\n[621]  0.1343331268 -0.1958644065 -1.0923374414  6.4579160149 -0.1891980010\n[626]  0.3550297591  0.7645059144  0.2489735181  0.2198514985  0.6452478091\n[631]  2.2376471532  2.1127391914  1.6098934371 -0.6898014070 -0.1107208661\n[636] -1.1130698515  7.0898010737 -1.0046454406 -0.8680732574  0.4497117801\n[641] -0.8552922211 -0.2495738837  2.1491050366 -0.3415159238  3.0313765732\n[646] -0.4371893343  0.5802411276 -1.0938685253 -0.6032079712  1.5172890427\n[651] -1.4191037264 -0.7995302161 -1.4315008760  1.1047958090  1.9312059781\n[656] -0.0614382810 -1.4646489093 -1.7662060021 -1.1765523969 -0.6032079712\n[661] -0.9574982243 -1.2159404267  1.4596757626 -0.6032079712 -0.4127382095\n[666] -0.6032079712 -1.3976581886 -0.4059354289  0.9223772918  0.4376697392\n[671] -1.3105842474 -1.0938685253 -0.7397384440 -0.9574982243 -1.7508891231\n[676] -1.0502641487  0.0413362561 -0.6748459383 -0.9574982243 -0.6748459383\n[681]  0.1968659159 -1.1682290936 -1.1765523969 -1.0048913390 -1.2159404267\n[686] -1.2159404267 -0.8552922211  1.1635025404 -1.0502641487 -1.0502641487\n[691]  2.9340212766 -0.9077679005 -1.2320655304  0.4195785142 -1.0502641487\n[696] -0.0682197367  5.3659514506  3.0908615406 -0.3436358365 -0.7995302161\n[701] -1.0938685253 -0.9574982243  1.1047958090 -0.7225311997 -0.2331446682\n[706] -1.2914066634  1.1685220223 -0.6748459383  0.4728374605  0.0966904414\n[711] -0.9574982243 -1.7224887953  1.5255452966 -0.9574982243  0.0055772761\n[716] -0.3955652826  1.3128731865  5.9654506308  1.0356654745  1.3128731865\n[721]  6.4740652149  0.7343173160  7.9179789515 -0.1346402247  7.6038144640\n[726]  4.8989514737  0.0250683904 -1.1528916318  2.7864500485  3.7194431134\n[731]  0.9824269172 -1.0034056873  7.5348120376  7.2390075406  0.1160047722\n[736] -0.3436358365  1.5421779468  7.7695889303 -0.3936969961  1.0127216611\n[741] -1.1765523969  0.1192027412  0.2927287130 -0.8552922211  0.4645408950\n[746]  0.2759991762  0.3515338167 -0.6748459383 -0.6032079712  1.5940888158\n[751] -0.0102840429 -1.0502641487 -0.7995302161 -1.1359085699  0.6560451536\n[756]  0.8393918473  0.7684673204  1.8506809693  1.0127216611 -1.3976581886\n[761] -0.6748459383  1.6473659266 -0.8552922211 -0.9077679005 -0.7397384440\n[766] -0.4259788679 -0.5220541001 -0.9545213091 -1.2159404267 -0.7807121168\n[771] -1.1359085699 -0.9077679005 -0.8552922211 -0.7397384440\nattr(,\"cluster\")\n  [1] Low  High Low  Low  High Low  Low  High High Low  High Low  Low  High Low \n [16] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low \n [31] Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low \n [46] High Low  Low  High Low  Low  Low  Low  Low  Low  Low  High High Low  High\n [61] Low  Low  Low  Low  Low  Low  High High Low  Low  Low  Low  Low  Low  Low \n [76] High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n [91] Low  Low  High High Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low \n[106] Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  Low \n[121] Low  Low  Low  High Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low \n[136] High High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[151] Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  High High Low \n[166] Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  High High\n[181] Low  High High Low  High Low  Low  Low  High Low  Low  Low  Low  Low  Low \n[196] Low  Low  High Low  Low  High Low  High Low  High High Low  High High Low \n[211] Low  High High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High\n[226] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[241] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[256] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  Low \n[271] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low \n[286] Low  Low  High High Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low \n[301] Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low \n[316] Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  High\n[331] Low  High High High Low  Low  Low  Low  Low  Low  High Low  High Low  Low \n[346] Low  High Low  Low  Low  High Low  Low  Low  High Low  Low  Low  Low  Low \n[361] Low  Low  High Low  High Low  High Low  Low  High Low  Low  Low  Low  Low \n[376] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[391] Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[406] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[421] Low  Low  Low  Low  Low  Low  Low  Low  High High Low  Low  Low  Low  Low \n[436] High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  Low \n[451] Low  Low  Low  Low  High Low  Low  Low  High Low  Low  Low  Low  Low  Low \n[466] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[481] Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low \n[496] Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[511] High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High High Low  Low \n[526] Low  Low  Low  Low  Low  High Low  Low  Low  Low  High Low  High High Low \n[541] Low  Low  Low  Low  High High Low  High High Low  High High High Low  Low \n[556] High High Low  High High Low  Low  High Low  Low  Low  Low  Low  High Low \n[571] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  Low  Low \n[586] Low  High High Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  High\n[601] High Low  Low  Low  Low  Low  Low  Low  Low  Low  High Low  High Low  Low \n[616] Low  Low  High Low  High Low  Low  Low  High High High Low  High High Low \n[631] Low  High Low  High Low  High Low  Low  Low  High Low  High Low  High Low \n[646] Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[661] Low  Low  High Low  Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low \n[676] Low  Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low \n[691] Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[706] Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  High Low  Low \n[721] High High High Low  High High High High Low  Low  Low  Low  High High Low \n[736] Low  Low  High Low  Low  Low  High High Low  High Low  Low  Low  Low  Low \n[751] High Low  Low  Low  Low  High High Low  Low  Low  Low  Low  Low  Low  Low \n[766] Low  Low  High Low  Low  Low  Low  Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = nga_wp$`wpt non-functional`, listw = wm72_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\n\nnga_wp.gi <- cbind(nga_wp, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n\n(2) Mapping Gi values with fixed distance weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc <- qtm(nga_wp, \"wpt non-functional\")\n\nGimap <-tm_shape(nga_wp.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n(3) Gi statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\nfips <- order(nga_wp$shapeName)\ngi.adaptive <- localG(nga_wp$`wpt non-functional`\n, knn_lw)\nnga_wp.gi <- cbind(nga_wp, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n(4) Mapping Gi values with adaptive distance weights\nNow I visualize the location of hot spot and cold spot area. The code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc<- qtm(nga_wp, \"wpt non-functional\")\n\nGimap <- tm_shape(nga_wp.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex1.html",
    "href": "Take-home Exercise/Take-home Ex1.html",
    "title": "Take home ex1",
    "section": "",
    "text": "First of all we load the package that needed: sf, spdep, tmap, tidyverse,dplyr, funModeling\n\npacman::p_load(sf, spdep, tmap, tidyverse,dplyr, funModeling)\n\nThere are two dataset we used:\n\ngeo_export:\nnga_admbnda_adm2_osgof_20190417\n\nchange it to shorter name\n\n\n\nwp<- st_read(dsn=\"geodata\",\n             layer=\"geo_export\",\n             crs=4326) %>%\n  filter(clean_coun==\"Nigeria\")\n\nI saved it into wp_nga.rds. In this way I can delete geo_export data which is too large to git push.\nI add #eval: false to make sure the code chunk will only display\nref\n\nwp_nga<-write_rds(wp,\"geodata/wp_nga.rds\")\n\n\n\n\n\nnga<- st_read(dsn=\"geodata\",\n             layer=\"geoBoundaries-NGA-ADM2\",\n             crs=4326)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Take-home Exercise\\geodata' using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\n\nIn the code chunk below, replace_na() is used to recode all the NA values in status_cle field into Unknown.\n\nwp_nga <- read_rds(\"geodata/wp_nga.rds\") %>%\n  mutate(status_cle = replace_na(status_cle, \"Unknown\"))\n\n\n\n\nIn the code chunk below, freq() of funModeling package is used to display the distribution of status_cle field in wp_nga.\n\nfreq(data=wp_nga, \n     input = 'status_cle')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n                        status_cle frequency percentage cumulative_perc\n1                       Functional     16919      83.29           83.29\n2      Functional but needs repair      2102      10.35           93.64\n3        Functional but not in use       579       2.85           96.49\n4                          Unknown       396       1.95           98.44\n5         Abandoned/Decommissioned       234       1.15           99.59\n6                        Abandoned        76       0.37           99.96\n7                   Non-Functional         5       0.02           99.98\n8 Non functional due to dry season         2       0.01          100.00\n\n\n\n\n\n\nIn this section, we will extract the water point records by using classes in status_cle field.\n\n\nin this code chunk below, filter() is used to select functional water points\n\nwpt_functional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\n\nfreq(data=wpt_functional, \n     input = 'status_cle')\n\n\n\n\n                   status_cle frequency percentage cumulative_perc\n1                  Functional     16919      86.32           86.32\n2 Functional but needs repair      2102      10.72           97.04\n3   Functional but not in use       579       2.95          100.00\n\n\n\n\n\nIn the code chunk below, filter() of dplyr is used to select non-functional water points.\n\nwpt_nonfunctional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\n\nfreq(data=wpt_nonfunctional, \n     input = 'status_cle')\n\n\n\n\n                        status_cle frequency percentage cumulative_perc\n1         Abandoned/Decommissioned       234      73.82           73.82\n2                        Abandoned        76      23.97           97.79\n3                   Non-Functional         5       1.58           99.37\n4 Non functional due to dry season         2       0.63          100.00\n\n\n\n\n\nIn the code chunk below, filter() of dplyr is used to select water points with unknown status.\n\nwpt_unknown <- wp_nga %>%\n  filter(status_cle == \"Unknown\")\n\n\nfreq(data=wpt_unknown, \n     input = 'status_cle')\n\n\n\n\n  status_cle frequency percentage cumulative_perc\n1    Unknown       396        100             100\n\n\n\n\n\n\nThe point-in-polygon (PIP) problem asks whether a given point in the plane lies inside, outside, or on the boundary of a polygon.\n\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_nga))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown)))\n\n\n\n\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`) %>%\n  select(3:4, 9:10, 18:23)\n\nThings to learn from the code chunk above:\nmutate() of dplyr package is used to derive two fields namely pct_functional and pct_non-functional.\nto keep the file size small, select() of dplyr is used to retain only field 3,4,9,10, 18,19,20,21,22,and 23.\nNow, you have the tidy sf data table subsequent analysis. We will save the sf data table into rds format.\n\nwrite_rds(nga_wp, \"geodata/nga_wp.rds\")\n\nThere is only data file we use, nga_wp.rds, which is the combination of the geospatial and aspatial data.\n\n\n\n\nnga_wp <- read_rds(\"geodata/nga_wp.rds\")\ntotal <- qtm(nga_wp, \"total wpt\")\nwp_functional <- qtm(nga_wp, \"wpt functional\")\nwp_nonfunctional <- qtm(nga_wp, \"wpt non-functional\")\nunknown <- qtm(nga_wp, \"wpt unknown\")\n\ntmap_arrange(total, wp_functional, wp_nonfunctional, unknown, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on Exercise/3/Hands-on Exercise 3.html",
    "href": "Hands-on Exercise/3/Hands-on Exercise 3.html",
    "title": "Hands-on Exercise 3 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "In this hands-on exercise, you will gain hands-on experience on how to delineate homogeneous region by using geographically referenced multivariate data. There are two major analysis, namely:\n\nhierarchical cluster analysis; and\nspatially constrained cluster analysis."
  },
  {
    "objectID": "Hands-on Exercise/3/Hands-on Exercise 3.html#getting-started",
    "href": "Hands-on Exercise/3/Hands-on Exercise 3.html#getting-started",
    "title": "Hands-on Exercise 3 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "Getting Started",
    "text": "Getting Started\n\nQuestion:\nIn geobusiness and spatial policy, it is a common practice to delineate the market or planning area into homogeneous regions by using multivariate data. In this hands-on exercise, we are interested to delineate Shan State, Myanmar into homogeneous regions by using multiple Information and Communication technology (ICT) measures, namely: Radio, Television, Land line phone, Mobile phone, Computer, and Internet at home.\n\n\nData\nTwo data sets will be used in this study. They are:\n\nMyanmar Township Boundary Data (i.e. myanmar_township_boundaries) : This is a GIS data in ESRI shapefile format. It consists of township boundary information of Myanmar. The spatial data are captured in polygon features.\nShan-ICT.csv: This is an extract of The 2014 Myanmar Population and Housing Census Myanmar at the township level.\n\nBoth data sets are download from Myanmar Information Management Unit (MIMU)"
  },
  {
    "objectID": "Hands-on Exercise/3/Hands-on Exercise 3.html#data-preparation",
    "href": "Hands-on Exercise/3/Hands-on Exercise 3.html#data-preparation",
    "title": "Hands-on Exercise 3 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "3 Data Preparation",
    "text": "3 Data Preparation\n\npacman::p_load(rgdal, spdep, tmap, sf, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse)\n\n\n3.1 Importing geospatial data into R environment\n\nshan_sf <- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %>%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\"))\n\nReading layer `myanmar_township_boundaries' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Hands-on Exercise\\3\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n\nshan_sf\n\nSimple feature collection with 55 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   OBJECTID           ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1       163 Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2       203 Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3       240 Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4       106 Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5        72 Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6        40 Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7       194 Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8       159 Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9        61 Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10      124 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                 ST_2            LABEL2 SELF_ADMIN ST_RG T_NAME_WIN T_NAME_M3\n1  Shan State (North)    Mongmit\\n61072       <NA> State   rdk;rdwf      မိုးမိတ်\n2  Shan State (South)    Pindaya\\n77769       Danu State     yif;w,     ပင်းတယ\n3  Shan State (South)    Ywangan\\n76933       Danu State      &GmiH       ရွာငံ\n4  Shan State (South)  Pinlaung\\n162537       Pa-O State  yifavmif;   ပင်လောင်း\n5  Shan State (North)     Mabein\\n35718       <NA> State     rbdrf;      မဘိမ်း\n6  Shan State (South)     Kalaw\\n163138       <NA> State       uavm      ကလော\n7  Shan State (South)      Pekon\\n94226       <NA> State     z,fcHk       ဖယ်ခုံ\n8  Shan State (South)          Lawksawk       <NA> State   &yfapmuf    ရပ်စောက်\n9  Shan State (North) Nawnghkio\\n128357       <NA> State  aemifcsdK    နောင်ချို\n10 Shan State (North)   Kyaukme\\n172874       <NA> State   ausmufrJ    ကျောက်မဲ\n       AREA                       geometry\n1  2703.611 MULTIPOLYGON (((96.96001 23...\n2   629.025 MULTIPOLYGON (((96.7731 21....\n3  2984.377 MULTIPOLYGON (((96.78483 21...\n4  3396.963 MULTIPOLYGON (((96.49518 20...\n5  5034.413 MULTIPOLYGON (((96.66306 24...\n6  1456.624 MULTIPOLYGON (((96.49518 20...\n7  2073.513 MULTIPOLYGON (((97.14738 19...\n8  5145.659 MULTIPOLYGON (((96.94981 22...\n9  3271.537 MULTIPOLYGON (((96.75648 22...\n10 3920.869 MULTIPOLYGON (((96.95498 22...\n\n\n\nglimpse(shan_sf)\n\nRows: 55\nColumns: 15\n$ OBJECTID   <dbl> 163, 203, 240, 106, 72, 40, 194, 159, 61, 124, 71, 155, 101…\n$ ST         <chr> \"Shan (North)\", \"Shan (South)\", \"Shan (South)\", \"Shan (Sout…\n$ ST_PCODE   <chr> \"MMR015\", \"MMR014\", \"MMR014\", \"MMR014\", \"MMR015\", \"MMR014\",…\n$ DT         <chr> \"Mongmit\", \"Taunggyi\", \"Taunggyi\", \"Taunggyi\", \"Mongmit\", \"…\n$ DT_PCODE   <chr> \"MMR015D008\", \"MMR014D001\", \"MMR014D001\", \"MMR014D001\", \"MM…\n$ TS         <chr> \"Mongmit\", \"Pindaya\", \"Ywangan\", \"Pinlaung\", \"Mabein\", \"Kal…\n$ TS_PCODE   <chr> \"MMR015017\", \"MMR014006\", \"MMR014007\", \"MMR014009\", \"MMR015…\n$ ST_2       <chr> \"Shan State (North)\", \"Shan State (South)\", \"Shan State (So…\n$ LABEL2     <chr> \"Mongmit\\n61072\", \"Pindaya\\n77769\", \"Ywangan\\n76933\", \"Pinl…\n$ SELF_ADMIN <chr> NA, \"Danu\", \"Danu\", \"Pa-O\", NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ST_RG      <chr> \"State\", \"State\", \"State\", \"State\", \"State\", \"State\", \"Stat…\n$ T_NAME_WIN <chr> \"rdk;rdwf\", \"yif;w,\", \"&GmiH\", \"yifavmif;\", \"rbdrf;\", \"uavm…\n$ T_NAME_M3  <chr> \"မိုးမိတ်\", \"ပင်းတယ\", \"ရွာငံ\", \"ပင်လောင်း\", \"မဘိမ်း\", \"ကလော\", \"ဖယ်ခုံ\", \"…\n$ AREA       <dbl> 2703.611, 629.025, 2984.377, 3396.963, 5034.413, 1456.624, …\n$ geometry   <MULTIPOLYGON [°]> MULTIPOLYGON (((96.96001 23..., MULTIPOLYGON (…\n\n\n\n\n3.2 Importing aspatial data into R environment\n\nict <- read_csv (\"data/aspatial/Shan-ICT.csv\",show_col_types = FALSE)\n\nThe imported InfoComm variables are extracted from The 2014 Myanmar Population and Housing Census Myanmar. The attribute data set is called ict. It is saved in R’s * tibble data.frame* format.\nThe code chunk below reveal the summary statistics of ict data.frame.\n\nsummary(ict)\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n\n\n\n\n3.3 Derive new variables using dplyr package\nThe unit of measurement of the values are number of household. Using these values directly will be bias by the underlying total number of households. In general, the townships with relatively higher total number of households will also have higher number of households owning radio, TV, etc.\nIn order to overcome this problem, we will derive the penetration rate of each ICT variable by using the code chunk below.\n\nict_derived <- ict %>%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %>%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %>%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %>%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %>%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %>%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %>%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nLet us review the summary statistics of the newly derived penetration rates using the code chunk below.\n\nsummary(ict_derived)\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985  \n\n\nNotice that six new fields have been added into the data.frame. They are RADIO_PR, TV_PR, LLPHONE_PR, MPHONE_PR, COMPUTER_PR, and INTERNET_PR."
  },
  {
    "objectID": "Hands-on Exercise/3/Hands-on Exercise 3.html#exploratory-data-analysis-eda",
    "href": "Hands-on Exercise/3/Hands-on Exercise 3.html#exploratory-data-analysis-eda",
    "title": "Hands-on Exercise 3 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "4 Exploratory Data Analysis (EDA)",
    "text": "4 Exploratory Data Analysis (EDA)\n\n4.1 EDA using statistical graphics\nWe can plot the distribution of the variables (i.e. Number of households with radio) by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\nHistogram is useful to identify the overall distribution of the data values (i.e. left skew, right skew or normal distribution)\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\nBoxplot is useful to detect if there are outliers.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\nNext, we will also plotting the distribution of the newly derived variables (i.e. Radio penetration rate) by using the code chunk below.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\nWhat can you observed from the distributions reveal in the histogram and boxplot.\nIn the figure below, multiple histograms are plotted to reveal the distribution of the selected variables in the ict_derived data.frame.\n\nradio <- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv <- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone <- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone <- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer <- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet <- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\n\n4.2 EDA using choropleth map\n\n4.2.1 Joining geospatial data with aspatial data\nBefore we can prepare the choropleth map, we need to combine both the geospatial data object (i.e. shan_sf) and aspatial data.frame object (i.e. ict_derived) into one. This will be performed by using the left_join function of dplyr package. The shan_sf simple feature data.frame will be used as the base data object and the ict_derived data.frame will be used as the join table.\nThe code chunks below is used to perform the task. The unique identifier used to join both data objects is TS_PCODE.\n\nshan_sf <- left_join(shan_sf, \n                     ict_derived, \n                     by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n\nThe message above shows that TS_CODE field is the common field used to perform the left-join.\nIt is important to note that there is no new output data been created. Instead, the data fields from ict_derived data frame are now updated into the data frame of shan_sf.\n\n\n4.2.2 Preparing a choropleth map\nTo have a quick look at the distribution of Radio penetration rate of Shan State at township level, a choropleth map will be prepared.\nThe code chunks below are used to prepare the choroplethby using the qtm() function of tmap package.\n\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\nIn order to reveal the distribution shown in the choropleth map above are bias to the underlying total number of households at the townships, we will create two choropleth maps, one for the total number of households (i.e. TT_HOUSEHOLDS.map) and one for the total number of household with Radio (RADIO.map) by using the code chunk below.\n\nTT_HOUSEHOLDS.map <- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map <- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\nNotice that the choropleth maps above clearly show that townships with relatively larger number ot households are also showing relatively higher number of radio ownership.\nNow let us plot the choropleth maps showing the dsitribution of total number of households and Radio penetration rate by using the code chunk below.\n\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)"
  },
  {
    "objectID": "Hands-on Exercise/3/Hands-on Exercise 3.html#correlation-analysis",
    "href": "Hands-on Exercise/3/Hands-on Exercise 3.html#correlation-analysis",
    "title": "Hands-on Exercise 3 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "5 Correlation Analysis",
    "text": "5 Correlation Analysis\nBefore we perform cluster analysis, it is important for us to ensure that the cluster variables are not highly correlated.\nIn this section, you will learn how to use corrplot.mixed() function of corrplot package to visualise and analyse the correlation of the input variables.\n\ncluster_vars.cor = cor(ict_derived[,12:17])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\nThe correlation plot above shows that COMPUTER_PR and INTERNET_PR are highly correlated. This suggest that only one of them should be used in the cluster analysis instead of both."
  },
  {
    "objectID": "Hands-on Exercise/3/Hands-on Exercise 3.html#hierarchy-cluster-analysis",
    "href": "Hands-on Exercise/3/Hands-on Exercise 3.html#hierarchy-cluster-analysis",
    "title": "Hands-on Exercise 3 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "6 Hierarchy Cluster Analysis",
    "text": "6 Hierarchy Cluster Analysis\n\n6.1 Extrating clustering variables\nIn this section, you will learn how to perform hierarchical cluster analysis. The analysis consists of four major steps:\n\ncluster_vars <- shan_sf %>%\n  st_set_geometry(NULL) %>%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nNotice that the final clustering variables list does not include variable INTERNET_PR because it is highly correlated with variable COMPUTER_PR.\nNext, we need to change the rows by township name instead of row number by using the code chunk below\n\nrow.names(cluster_vars) <- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nNotice that the row number has been replaced into the township name.\nNow, we will delete the TS.x field by using the code chunk below.\n\nshan_ict <- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\n\n6.2 Data Standardisation\nIn general, multiple variables will be used in cluster analysis. It is not unusual their values range are different. In order to avoid the cluster analysis result is baised to clustering variables with large values, it is useful to standardise the input variables before performing cluster analysis.\n\n\n6.3 Min-Max standardisation\nIn the code chunk below, normalize() of heatmaply package is used to stadardisation the clustering variables by using Min-Max method. The summary() is then used to display the summary statistics of the standardised clustering variables.\n\nshan_ict.std <- normalize(shan_ict)\nsummary(shan_ict.std)\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000  \n\n\nNotice that the values range of the Min-max standardised clustering variables are 0-1 now.\n\n\n6.4 Z-score standardisation\nZ-score standardisation can be performed easily by using scale() of Base R. The code chunk below will be used to stadardisation the clustering variables by using Z-score method.\n\nshan_ict.z <- scale(shan_ict)\ndescribe(shan_ict.z)\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13\n\n\nNotice the mean and standard deviation of the Z-score standardised clustering variables are 0 and 1 respectively.\nNote: describe() of psych package is used here instead of summary() of Base R because the earlier provides standard deviation.\nWarning: Z-score standardisation method should only be used if we would assume all variables come from some normal distribution.\n\n\n6.5 Visualising the standardised clustering variables\nBeside reviewing the summary statistics of the standardised clustering variables, it is also a good practice to visualise their distribution graphical.\nThe code chunk below plot the scaled Radio_PR field.\n\nr <- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nshan_ict_s_df <- as.data.frame(shan_ict.std)\ns <- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df <- as.data.frame(shan_ict.z)\nz <- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\nNotice that the overall distribution of the clustering variables will change after the data standardisation. Hence, it is advisible NOT to perform data standardisation if the values range of the clustering variables are not very large.\n\n\n6.6 Computing proximity matrix\nIn R, many packages provide functions to calculate distance matrix. We will compute the proximity matrix by using dist() of R.\ndist() supports six distance proximity calculations, they are: euclidean, maximum, manhattan, canberra, binary and minkowski. The default is euclidean proximity matrix.\nThe code chunk below is used to compute the proximity matrix using euclidean method.\n\nproxmat <- dist(shan_ict, method = 'euclidean')\n\nThe code chunk below can then be used to list the content of proxmat for visual inspection.\n\nproxmat\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613\n\n\n\n\n6.7 Computing hierarchical clustering\nIn R, there are several packages provide hierarchical clustering function. In this hands-on exercise, hclust() of R stats will be used.\nhclust() employed agglomeration method to compute the cluster. Eight clustering algorithms are supported, they are: ward.D, ward.D2, single, complete, average(UPGMA), mcquitty(WPGMA), median(WPGMC) and centroid(UPGMC).\nThe code chunk below performs hierarchical cluster analysis using ward.D method. The hierarchical clustering output is stored in an object of class hclust which describes the tree produced by the clustering process.\n\nhclust_ward <- hclust(proxmat, method = 'ward.D')\n\nWe can then plot the tree by using plot() of R Graphics as shown in the code chunk below.\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\n6.8 Selecting the optimal clustering algorithm\nOne of the challenge in performing hierarchical clustering is to identify stronger clustering structures. The issue can be solved by using use agnes() function of cluster package. It functions like hclus(), however, with the agnes() function you can also get the agglomerative coefficient, which measures the amount of clustering structure found (values closer to 1 suggest strong clustering structure).\nThe code chunk below will be used to compute the agglomerative coefficients of all hierarchical clustering algorithms.\n\nm <- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) <- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac <- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\nWith reference to the output above, we can see that Ward's method provides the strongest clustering structure among the four methods assessed. Hence, in the subsequent analysis, only Ward's method will be used.\n\n\n6.9 Determining Optimal Clusters\nAnother technical challenge face by data analyst in performing clustering analysis is to determine the optimal clusters to retain.\nThere are three commonly used methods to determine the optimal clusters, they are:\n\nElbow Method\nAverage Silhouette Method\nGap Statistic Method\n\n\n6.9.1 Gap Statistic Method\nThe gap statistic compares the total within intra-cluster variation for different values of k with their expected values under null reference distribution of the data. The estimate of the optimal clusters will be value that maximize the gap statistic (i.e., that yields the largest gap statistic). This means that the clustering structure is far away from the random uniform distribution of points.\nTo compute the gap statistic, clusGap() of cluster package will be used.\n\nset.seed(12345)\ngap_stat <- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --> Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\nAlso note that the hcut function used is from factoextra package.\nNext, we can visualise the plot by using fviz_gap_stat() of factoextra package.\n\nfviz_gap_stat(gap_stat)\n\n\n\n\nWith reference to the gap statistic graph above, the recommended number of cluster to retain is 1. However, it is not logical to retain only one cluster. By examine the gap statistic graph, the 6-cluster gives the largest gap statistic and should be the next best cluster to pick.\nNote: In addition to these commonly used approaches, the NbClust package, published by Charrad et al., 2014, provides 30 indices for determining the relevant number of clusters and proposes to users the best clustering scheme from the different results obtained by varying all combinations of number of clusters, distance measures, and clustering methods.\n\n\n\n6.10 Interpreting the dendrograms\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n6.11 Visually-driven hierarchical clustering analysis\nIn this section, we will learn how to perform visually-driven hiearchical clustering analysis by using heatmaply package.\nWith heatmaply, we are able to build both highly interactive cluster heatmap or static cluster heatmap.\n\n6.11.1 Transforming the data frame into a matrix\n\nshan_ict_mat <- data.matrix(shan_ict)\n\n\n\n6.11.2 Plotting interactive cluster heatmap using heatmaply()\nIn the code chunk below, the heatmaply() of heatmaply package is used to build an interactive cluster heatmap.\n\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n\n\n\n\n\n\n\n\n6.12 Mapping the clusters formed\n\ngroups <- as.factor(cutree(hclust_ward, k=6))\n\n\nshan_sf_cluster <- cbind(shan_sf, as.matrix(groups)) %>%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\nqtm(shan_sf_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on Exercise/3/Hands-on Exercise 3.html#spatially-constrained-clustering---skater-approach",
    "href": "Hands-on Exercise/3/Hands-on Exercise 3.html#spatially-constrained-clustering---skater-approach",
    "title": "Hands-on Exercise 3 Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "7 Spatially Constrained Clustering - SKATER approach",
    "text": "7 Spatially Constrained Clustering - SKATER approach\nIn this section, you will learn how to derive spatially constrained cluster by using skater() method of spdep package.\n\n7.1 Converting into SpatialPolygonsDataFrame\nFirst, we need to convert shan_sf into SpatialPolygonsDataFrame. This is because SKATER function only support sp objects such as SpatialPolygonDataFrame.\nThe code chunk below uses as_Spatial() of sf package to convert shan_sf into a SpatialPolygonDataFrame called shan_sp.\n\nshan_sp <- as_Spatial(shan_sf)\n\n\n\n7.2 Computing Neighbour List\n\nshan.nb <- poly2nb(shan_sp)\nsummary(shan.nb)\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\n\nWe can plot the neighbours list on shan_sp by using the code chunk below. Since we now can plot the community area boundaries as well, we plot this graph on top of the map. The first plot command gives the boundaries. This is followed by the plot of the neighbor list object, with coordinates applied to the original SpatialPolygonDataFrame (Shan state township boundaries) to extract the centroids of the polygons. These are used as the nodes for the graph representation. We also set the color to blue and specify add=TRUE to plot the network on top of the boundaries.\n\nplot(shan_sp, \n     border=grey(.5))\nplot(shan.nb, \n     coordinates(shan_sp), \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\nNote that if you plot the network first and then the boundaries, some of the areas will be clipped. This is because the plotting area is determined by the characteristics of the first plot. In this example, because the boundary map extends further than the graph, we plot it first.\n\n\n7.3 Computing minimum spanning tree\n\n7.3.1 Calculating edge costs\nNext, nbcosts() of spdep package is used to compute the cost of each edge. It is the distance between it nodes. This function compute this distance using a data.frame with observations vector in each node.\nThe code chunk below is used to compute the cost of each edge.\n\nlcosts <- nbcosts(shan.nb, shan_ict)\n\nFor each observation, this gives the pairwise dissimilarity between its values on the five variables and the values for the neighbouring observation (from the neighbour list). Basically, this is the notion of a generalised weight for a spatial weights matrix.\nNext, We will incorporate these costs into a weights object in the same way as we did in the calculation of inverse of distance weights. In other words, we convert the neighbour list to a list weights object by specifying the just computed lcosts as the weights.\nIn order to achieve this, nb2listw() of spdep package is used as shown in the code chunk below.\nNote that we specify the style as B to make sure the cost values are not row-standardised.\n\nshan.w <- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n\n\n\n\n\n7.4 Computing minimum spanning tree\n\nshan.mst <- mstree(shan.w)\n\nAfter computing the MST, we can check its class and dimension by using the code chunk below.\n\nclass(shan.mst)\n\n[1] \"mst\"    \"matrix\"\n\n\n\ndim(shan.mst)\n\n[1] 54  3\n\n\nNote that the dimension is 54 and not 55. This is because the minimum spanning tree consists on n-1 edges (links) in order to traverse all the nodes.\nWe can display the content of shan.mst by using head() as shown in the code chunk below.\n\nhead(shan.mst)\n\n     [,1] [,2]      [,3]\n[1,]   31   25 229.44658\n[2,]   25   10 163.95741\n[3,]   10    1 144.02475\n[4,]   10    9 157.04230\n[5,]    9    8  90.82891\n[6,]    8    6 140.01101\n\n\n\nplot(shan_sp, border=gray(.5))\nplot.mst(shan.mst, \n         coordinates(shan_sp), \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n\n\n\n\n\n\n\n\n\n7.5 Computing spatially constrained clusters using SKATER method\nThe code chunk below compute the spatially constrained cluster using skater() of spdep package.\n\nclust6 <- skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\n\nstr(clust6)\n\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 31 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 31 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\nccs6 <- clust6$groups\nccs6\n\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n\n\nWe can find out how many observations are in each cluster by means of the table command. Parenthetially, we can also find this as the dimension of each vector in the lists contained in edges.groups. For example, the first list has node with dimension 12, which is also the number of observations in the first cluster.\n\ntable(ccs6)\n\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n\n\nLastly, we can also plot the pruned tree that shows the five clusters on top of the townshop area.\n\nplot(shan_sp, border=gray(.5))\nplot(clust6, \n     coordinates(shan_sp), \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005,add=TRUE)\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1],\ncoords[id2, : \"add\" is not a graphical parameter\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1],\ncoords[id2, : \"add\" is not a graphical parameter\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1],\ncoords[id2, : \"add\" is not a graphical parameter\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1],\ncoords[id2, : \"add\" is not a graphical parameter\n\n\n\n\n\n\n\n7.6 Visualising the clusters in choropleth map\nThe code chunk below is used to plot the newly derived clusters by using SKATER method.\n\ngroups_mat <- as.matrix(clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\n\nhclust.map <- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map <- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "In-class_Ex/In-class Ex3/In-class Exercise 3.html",
    "href": "In-class_Ex/In-class Ex3/In-class Exercise 3.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "pacman::p_load(rgdal, spdep, tmap, sf,ClustGeo,\n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse)\n\n\nshan_sf <- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %>%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\"))\n\nReading layer `myanmar_township_boundaries' from data source \n  `D:\\Xu-Siyi\\ISSS624\\In-class_Ex\\In-class Ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\nTips:\n\nWe can use str() to explore the data columns\n\nWhat is %>%? This operator will forward a value, or the result of an expression, into the next function call/expression. There is flexible support for the type of right-hand side expressions.\nWe can use it to clean memory after finishing the work.\n\n\n\nglimpse(shan_sf)\n\nRows: 55\nColumns: 15\n$ OBJECTID   <dbl> 163, 203, 240, 106, 72, 40, 194, 159, 61, 124, 71, 155, 101…\n$ ST         <chr> \"Shan (North)\", \"Shan (South)\", \"Shan (South)\", \"Shan (Sout…\n$ ST_PCODE   <chr> \"MMR015\", \"MMR014\", \"MMR014\", \"MMR014\", \"MMR015\", \"MMR014\",…\n$ DT         <chr> \"Mongmit\", \"Taunggyi\", \"Taunggyi\", \"Taunggyi\", \"Mongmit\", \"…\n$ DT_PCODE   <chr> \"MMR015D008\", \"MMR014D001\", \"MMR014D001\", \"MMR014D001\", \"MM…\n$ TS         <chr> \"Mongmit\", \"Pindaya\", \"Ywangan\", \"Pinlaung\", \"Mabein\", \"Kal…\n$ TS_PCODE   <chr> \"MMR015017\", \"MMR014006\", \"MMR014007\", \"MMR014009\", \"MMR015…\n$ ST_2       <chr> \"Shan State (North)\", \"Shan State (South)\", \"Shan State (So…\n$ LABEL2     <chr> \"Mongmit\\n61072\", \"Pindaya\\n77769\", \"Ywangan\\n76933\", \"Pinl…\n$ SELF_ADMIN <chr> NA, \"Danu\", \"Danu\", \"Pa-O\", NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ST_RG      <chr> \"State\", \"State\", \"State\", \"State\", \"State\", \"State\", \"Stat…\n$ T_NAME_WIN <chr> \"rdk;rdwf\", \"yif;w,\", \"&GmiH\", \"yifavmif;\", \"rbdrf;\", \"uavm…\n$ T_NAME_M3  <chr> \"မိုးမိတ်\", \"ပင်းတယ\", \"ရွာငံ\", \"ပင်လောင်း\", \"မဘိမ်း\", \"ကလော\", \"ဖယ်ခုံ\", \"…\n$ AREA       <dbl> 2703.611, 629.025, 2984.377, 3396.963, 5034.413, 1456.624, …\n$ geometry   <MULTIPOLYGON [°]> MULTIPOLYGON (((96.96001 23..., MULTIPOLYGON (…\n\n\n\nict <- read_csv (\"data/aspatial/Shan-ICT.csv\",show_col_types = FALSE)\n\n\nsummary(ict)\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n\n\n\nict_derived <- ict %>%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %>%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %>%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %>%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %>%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %>%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %>%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nmutate() : Create new variable\nReference"
  },
  {
    "objectID": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#eda",
    "href": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#eda",
    "title": "In-class Exercise 3",
    "section": "EDA",
    "text": "EDA\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\nradio <- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv <- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone <- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone <- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer <- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet <- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\nEDA using choropleth map\n\nshan_sf <- left_join(shan_sf, \n                     ict_derived, \n                     by=c(\"TS_PCODE\"=\"TS_PCODE\"))\nwrite_rds(shan_sf, \"data/rds/shan_sf.rds\")\n\n\nqtm(shan_sf, \"RADIO_PR\")"
  },
  {
    "objectID": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#correlation-analysis",
    "href": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#correlation-analysis",
    "title": "In-class Exercise 3",
    "section": "Correlation Analysis",
    "text": "Correlation Analysis\nBefore we perform cluster analysis, it is important for us to ensure that the cluster variables are not highly correlated.\nIn this section, you will learn how to use corrplot.mixed() function of corrplot package to visualise and analyse the correlation of the input variables.\n\ncluster_vars.cor = cor(ict_derived[,12:17])#Only consider column 12-17\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#hierarchy-cluster-analysis",
    "href": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#hierarchy-cluster-analysis",
    "title": "In-class Exercise 3",
    "section": "Hierarchy Cluster Analysis",
    "text": "Hierarchy Cluster Analysis\n\ncluster_vars <- shan_sf %>%\n  st_set_geometry(NULL) %>%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nWe only choose those column above to do clustering.\nNotice that the final clustering variables list does not include variable INTERNET_PR because it is highly correlated with variable COMPUTER_PR.\nNext, we need to change the rows by township name instead of row number by using the code chunk below\n\nrow.names(cluster_vars) <- cluster_vars$\"TS.x\"\nhead(cluster_vars,10) \n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\nshan_ict <- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\nComputing proximity matrix\nIn R, many packages provide functions to calculate distance matrix. We will compute the proximity matrix by using dist() of R.\ndist() supports six distance proximity calculations, they are: euclidean, maximum, manhattan, canberra, binary and minkowski. The default is euclidean proximity matrix.\nThe code chunk below is used to compute the proximity matrix using euclidean method.\n\nproxmat <- dist(shan_ict, method = 'euclidean')\n\n\nproxmat\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613\n\n\nSmaller proximity matrix means those two place are similar\n\n\nComputing hierarchical clustering\n\nhclust_ward <- hclust(proxmat, method = 'ward.D')\n\n\n\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\nWe use cex=0.6 to avoid overlaping\n\n\nSelecting the optimal clustering algorithm\nCreate a function(x) to compute the agglomerative coefficients of all hierarchical clustering algorithms.\n\nm <- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) <- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac <- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\n\n\nDetermining Optimal Clusters\nAnother technical challenge face by data analyst in performing clustering analysis is to determine the optimal clusters to retain.\nThere are three commonly used methods to determine the optimal clusters, they are:\n\nElbow Method\nAverage Silhouette Method\nGap Statistic Method\n\n\n\nGap Statistic Method-decide the number of cluster\n\nset.seed(12345)\ngap_stat <- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --> Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\n\nfviz_gap_stat(gap_stat)\n\n\n\n\n\n\nInterpreting the dendrograms\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\nVisually-driven hierarchical clustering analysis\n\n\n\nfor each cluster(green, red…), we can see the attribute color(high or low"
  },
  {
    "objectID": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#spatially-constrained-clustering---skater-approach",
    "href": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#spatially-constrained-clustering---skater-approach",
    "title": "In Class Exercise 3",
    "section": "7 Spatially Constrained Clustering - SKATER approach",
    "text": "7 Spatially Constrained Clustering - SKATER approach\nIn this section, you will learn how to derive spatially constrained cluster by using skater() method of spdep package.\n\n7.1 Converting into SpatialPolygonsDataFrame\nFirst, we need to convert shan_sf into SpatialPolygonsDataFrame. This is because SKATER function only support sp objects such as SpatialPolygonDataFrame.\nThe code chunk below uses as_Spatial() of sf package to convert shan_sf into a SpatialPolygonDataFrame called shan_sp.\n\nshan_sp <- as_Spatial(shan_sf)\n\n\n\n7.2 Computing Neighbour List\n\nshan.nb <- poly2nb(shan_sp)\nsummary(shan.nb)\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\n\n\nWe can plot the neighbours list on shan_sp by using the code chunk below. Since we now can plot the community area boundaries as well, we plot this graph on top of the map. The first plot command gives the boundaries. This is followed by the plot of the neighbor list object, with coordinates applied to the original SpatialPolygonDataFrame (Shan state township boundaries) to extract the centroids of the polygons. These are used as the nodes for the graph representation. We also set the color to blue and specify add=TRUE to plot the network on top of the boundaries.\n\nplot(shan_sp, \n     border=grey(.5))\nplot(shan.nb, \n     coordinates(shan_sp), \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\nNote that if you plot the network first and then the boundaries, some of the areas will be clipped. This is because the plotting area is determined by the characteristics of the first plot. In this example, because the boundary map extends further than the graph, we plot it first.\n\n\n7.3 Computing minimum spanning tree\n\n7.3.1 Calculating edge costs\nNext, nbcosts() of spdep package is used to compute the cost of each edge. It is the distance between it nodes. This function compute this distance using a data.frame with observations vector in each node.\nThe code chunk below is used to compute the cost of each edge.\n\nlcosts <- nbcosts(shan.nb, shan_ict)\n\nlcosts:\n\nFor each observation, this gives the pairwise dissimilarity between its values on the five variables and the values for the neighbouring observation (from the neighbour list). Basically, this is the notion of a generalised weight for a spatial weights matrix.\nNext, We will incorporate these costs into a weights object in the same way as we did in the calculation of inverse of distance weights. In other words, we convert the neighbour list to a list weights object by specifying the just computed lcosts as the weights.\nIn order to achieve this, nb2listw() of spdep package is used as shown in the code chunk below.\nNote that we specify the style as B to make sure the cost values are not row-standardised.\n\nshan.w <- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n\n\n\n\n\n7.4 Computing minimum spanning tree\n\nshan.mst <- mstree(shan.w)\n\nAfter computing the MST, we can check its class and dimension by using the code chunk below.\n\nclass(shan.mst)\n\n[1] \"mst\"    \"matrix\"\n\n\n\ndim(shan.mst)\n\n[1] 54  3\n\n\nNote that the dimension is 54 and not 55. This is because the minimum spanning tree consists on n-1 edges (links) in order to traverse all the nodes.\nWe can display the content of shan.mst by using head() as shown in the code chunk below.\n\nhead(shan.mst)\n\n     [,1] [,2]      [,3]\n[1,]   31   25 229.44658\n[2,]   25   10 163.95741\n[3,]   10    1 144.02475\n[4,]   10    9 157.04230\n[5,]    9    8  90.82891\n[6,]    8    6 140.01101\n\n\n\nplot(shan_sp, border=gray(.5))\nplot.mst(shan.mst, \n         coordinates(shan_sp), \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n\n\n\n\n\n\n\n\n\n\n7.5 Computing spatially constrained clusters using SKATER method\nThe code chunk below compute the spatially constrained cluster using skater() of spdep package.\n\nclust6 <- skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\n\nstr(clust6)\n\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 31 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 31 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\nccs6 <- clust6$groups\nccs6\n\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n\n\nWe can find out how many observations are in each cluster by means of the table command. Parenthetially, we can also find this as the dimension of each vector in the lists contained in edges.groups. For example, the first list has node with dimension 12, which is also the number of observations in the first cluster.\n\ntable(ccs6)\n\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n\n\nLastly, we can also plot the pruned tree that shows the five clusters on top of the townshop area.\n\nplot(shan_sp, border=gray(.5))\nplot(clust6, \n     coordinates(shan_sp), \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005,add=TRUE)\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1],\ncoords[id2, : \"add\" is not a graphical parameter\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1],\ncoords[id2, : \"add\" is not a graphical parameter\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1],\ncoords[id2, : \"add\" is not a graphical parameter\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1],\ncoords[id2, : \"add\" is not a graphical parameter\n\n\n\n\n\n\n\n7.6 Visualising the clusters in choropleth map\nThe code chunk below is used to plot the newly derived clusters by using SKATER method.\n\ngroups_mat <- as.matrix(clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\n\nhclust.map <- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map <- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#find-meaning",
    "href": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#find-meaning",
    "title": "In Class Exercise 3",
    "section": "Find meaning:",
    "text": "Find meaning:\ngo back to attribute\n\n\n\nfor each cluster(green, red…), we can see the attribute color(high or low"
  },
  {
    "objectID": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#spatially-constrained-clustering-clustgeo-method",
    "href": "In-class_Ex/In-class Ex3/In-class Exercise 3.html#spatially-constrained-clustering-clustgeo-method",
    "title": "In-class Exercise 3",
    "section": "Spatially Constrained Clustering: ClustGeo Method",
    "text": "Spatially Constrained Clustering: ClustGeo Method\n\nA short note about ClustGeo package\nClustGeo package is an R package specially designed to support the need of performing spatially constrained cluster analysis. More specifically, it provides a Ward-like hierarchical clustering algorithm called hclustgeo() including spatial/geographical constraints.\nIn the nutshell, the algorithm uses two dissimilarity matrices D0 and D1 along with a mixing parameter alpha, whereby the value of alpha must be a real number between [0, 1]. D0 can be non-Euclidean and the weights of the observations can be non-uniform. It gives the dissimilarities in the attribute/clustering variable space. D1, on the other hand, gives the dissimilarities in the constraint space. The criterion minimised at each stage is a convex combination of the homogeneity criterion calculated with D0 and the homogeneity criterion calculated with D1.\nThe idea is then to determine a value of alpha which increases the spatial contiguity without deteriorating too much the quality of the solution based on the variables of interest. This need is supported by a function called choicealpha().\n\n\nWard-like hierarchical clustering: ClustGeo\n\nnongeo_cluster <- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\nNote that the dissimilarity matrix must be an object of class dist, i.e. an object obtained with the function dist(). For sample code chunk, please refer to 5.7.6 Computing proximity matrix\n\nMapping the clusters formed\n\ngroups <- as.factor(cutree(nongeo_cluster, k=6))\n\n\nshan_sf_ngeo_cluster <- cbind(shan_sf, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\nSpatially Constrained Hierarchical Clustering\nBefore we can performed spatially constrained hierarchical clustering, a spatial distance matrix will be derived by using st_distance() of sf package.\n\ndist <- st_distance(shan_sf, shan_sf)\ndistmat <- as.dist(dist)\n\nNotice that as.dist() is used to convert the data frame into matrix.\nNext, choicealpha() will be used to determine a suitable value for the mixing parameter alpha as shown in the code chunk below.\n\ncr <- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\n\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.3)\n\n\ngroups <- as.factor(cutree(clustG, k=6))\n\n\nshan_sf_Gcluster <- cbind(shan_sf, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(shan_sf_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this hands-on exercise, you will learn how to build hedonic pricing models by using GWR methods. The dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational."
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html#the-data",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html#the-data",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "2 The Data",
    "text": "2 The Data\nTwo data sets will be used in this model building exercise, they are:\n\nURA Master Plan subzone boundary in shapefile format (i.e. MP14_SUBZONE_WEB_PL)\ncondo_resale_2015 in csv format (i.e. condo_resale_2015.csv)"
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html#getting-started",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html#getting-started",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3 Getting Started",
    "text": "3 Getting Started\nBefore we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows:\n\nR package for building OLS and performing diagnostics tests\n\nolsrr\n\nR package for calibrating geographical weighted family of models\n\nGWmodel\n\nR package for multivariate data visualisation and analysis\n\ncorrplot\n\nSpatial data handling\n\nsf\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\n\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)"
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html#a-shirt-note-about-gwmodel",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html#a-shirt-note-about-gwmodel",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "4 A shirt note about GWmodel",
    "text": "4 A shirt note about GWmodel\nGWmodel package provides a collection of localised spatial statistical methods, namely: GW summary statistics, GW principal components analysis, GW discriminant analysis and various forms of GW regression; some of which are provided in basic and robust (outlier resistant) forms. Commonly, outputs or parameters of the GWmodel are mapped to provide a useful exploratory tool, which can often precede (and direct) a more traditional or sophisticated statistical analysis."
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html#geospatial-data-wrangling",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5 Geospatial Data Wrangling",
    "text": "5 Geospatial Data Wrangling\n\n5.1 Importing geospatial data\nThe geospatial data used in this hands-on exercise is called MP14_SUBZONE_WEB_PL. It is in ESRI shapefile format. The shapefile consists of URA Master Plan 2014’s planning subzone boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\nThe code chunk below is used to import MP_SUBZONE_WEB_PL shapefile by using st_read() of sf packages.\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Hands-on Exercise\\4\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe report above shows that the R object used to contain the imported MP14_SUBZONE_WEB_PL shapefile is called mpsz and it is a simple feature object. The geometry type is multipolygon. it is also important to note that mpsz simple feature object does not have EPSG information.\n\n\nUpdating CRS information\nThe code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 3414)\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\nAfter transforming the projection metadata, you can varify the projection of the newly transformed mpsz_svy21 by using st_crs() of sf package.\nThe code chunk below will be used to varify the newly transformed mpsz_svy21.\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that the EPSG: is indicated as 3414 now.\nNext, you will reveal the extent of mpsz_svy21 by using st_bbox() of sf package.\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html#aspatial-data-wrangling",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html#aspatial-data-wrangling",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "6 Aspatial Data Wrangling",
    "text": "6 Aspatial Data Wrangling\n\n6.1 Importing the aspatial data\nThe condo_resale_2015 is in csv file format. The codes chunk below uses read_csv() function of readr package to import condo_resale_2015 into R as a tibble data frame called condo_resale.\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\",show_col_types = FALSE)\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe codes chunks below uses glimpse() to display the data structure of will do the job\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nNext, summary() of base R is used to display the summary statistics of cond_resale tibble data frame.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n\n6.2 Converting aspatial data frame into a sf object\nCurrently, the condo_resale tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts condo_resale data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\nNotice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).\nNext, head() is used to list the content of condo_resale.sf object.\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 12 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>, and abbreviated variable names\n#   ¹​SELLING_PRICE, ²​AREA_SQM, ³​PROX_CBD, ⁴​PROX_CHILDCARE, ⁵​PROX_ELDERLYCARE,\n#   ⁶​PROX_URA_GROWTH_AREA, ⁷​PROX_HAWKER_MARKET, ⁸​PROX_KINDERGARTEN"
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html#exploratory-data-analysis-eda",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html#exploratory-data-analysis-eda",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "7 Exploratory Data Analysis (EDA)",
    "text": "7 Exploratory Data Analysis (EDA)\nIn the section, you will learn how to use statistical graphics functions of ggplot2 package to perform EDA.\n\n7.1 EDA using statistical graphics\nWe can plot the distribution of SELLING_PRICE by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nStatistically, the skewed dsitribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow, you can plot the LOG_SELLING_PRICE using the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nNotice that the distribution is relatively less skewed after the transformation.\n\n\n7.2 Multiple Histogram Plots distribution of variables\nIn this section, you will learn how to draw a small multiple histograms (also known as trellis plot) by using ggarrange() of ggpubr package.\nThe code chunk below is used to create 12 histograms. Then, ggarrange() is used to organised these histogram into a 3 columns by 4 rows small multiple plot.\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\n\n\n7.3 Drawing Statistical Point Map\nLastly, we want to reveal the geospatial distribution condominium resale prices in Singapore. The map will be prepared by using tmap package.\nFirst, we will turn on the interactive mode of tmap by using the code chunk below.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nNext, the code chunks below is used to create an interactive point symbol map. I met some problem here so I firstly set tmap_options(check.and.fix = TRUE)\n\ntmap_options(check.and.fix = TRUE)\n\n\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\nNotice that tm_dots() is used instead of tm_bubbles().\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively.\nBefore moving on to the next section, the code below will be used to turn R display into plot mode.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html#hedonic-pricing-modelling-in-r",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html#hedonic-pricing-modelling-in-r",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8 Hedonic Pricing Modelling in R",
    "text": "8 Hedonic Pricing Modelling in R\nIn this section, you will learn how to building hedonic pricing models for condominium resale units using lm() of R base.\n\n8.1 Simple Linear Regression Method\nFirst, we will build a simple linear regression model by using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n      *y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nTo visualise the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFigure above reveals that there are a few statistical outliers with relatively high selling prices.\n\n\n8.2 Multiple Linear Regression Method\n\n8.2.1 Visualising the relationships of the independent variables\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nCorrelation matrix is commonly used to visualise the relationships between the independent variables. Beside the pairs() of R, there are many packages support the display of a correlation matrix. In this section, the corrplot package will be used.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in condo_resale data.frame.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building.\n\n\n\n8.3 Building a hedonic pricing model using multiple linear regression method\nThe code chunk below using lm() to calibrate the multiple linear regression model.\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16\n\n\n\n\n8.4 Preparing Publication Quality Table: olsrr method\nWith reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing those variables which are not statistically significant.\nNow, we are ready to calibrate the revised model by using the code chunk below.\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\n8.5 Preparing Publication Quality Table: gtsummary method\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R.\nIn the code chunk below, tbl_regression() is used to create a well formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nFor more customisation options, refer to Tutorial: tbl_regression\n\n6.8.5.1 Checking for multicolinearity\nIn this section, we would like to introduce you a fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\n\n8.5.2 Test for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nThe figure above reveals that most of the data poitns are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n8.5.3 Test for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chun below.\n\nols_test_normality(condo.mlr1)\n\nWarning in ks.test.default(y, \"pnorm\", mean(y), sd(y)): ties should not be\npresent for the Kolmogorov-Smirnov test\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n8.5.4 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %>%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\nThe code chunk below will be used to perform the data conversion process.\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nNext, we will use tmap package to display the distribution of the residuals on an interactive map.\nThe code churn below will turn on the interactive mode of tmap.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nThe code chunks below is used to create an interactive point symbol map.\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nRemember to switch back to “plot” mode before continue.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nThe figure above reveal that there is sign of spatial autocorrelation.\nTo proof that our observation is indeed true, the Moran’s I test will be performed\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "Hands-on Exercise/4/Hands-on Ex4.html#building-hedonic-pricing-models-using-gwmodel",
    "href": "Hands-on Exercise/4/Hands-on Ex4.html#building-hedonic-pricing-models-using-gwmodel",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9 Building Hedonic Pricing Models using GWmodel",
    "text": "9 Building Hedonic Pricing Models using GWmodel\nIn this section, you are going to learn how to modelling hedonic pricing using both the fixed and adaptive bandwidth schemes\n\n9.1 Building Fixed Bandwidth GWR Model\n\n9.1.1 Computing fixed bandwith\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nThere are two possible approaches can be uused to determine the stopping rule, they are: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach argeement.\n\nbw.fixed <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\n9.1.2 GWModel method - fixed bandwith\nNow we can use the code chunk below to calibrate the gwr model using fixed bandwidth and gaussian kernel\n\ngwr.fixed <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-10 11:18:16 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2022-12-10 11:18:17 \n\n\nThe report shows that the adjusted r-square of the gwr is 0.8430 which is significantly better than the globel multiple linear regression model of 0.6472.\n\n\n\n9.2 Building Adaptive Bandwidth GWR Model\nIn this section, we will calibrate the gwr-absed hedonic pricing model by using adaptive bandwidth approach.\n\n9.2.1 Computing the adaptive bandwidth\nSimilar to the earlier section, we will first use bw.ger() to determine the recommended data point to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\nbw.adaptive <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n\n9.2.2 Constructing the adaptive bandwidth gwr model\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and gaussian kernel as shown in the code chunk below.\n\ngwr.adaptive <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\nThe code below can be used to display the model output.\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-10 11:18:22 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2022-12-10 11:18:24 \n\n\nThe report shows that the adjusted r-square of the gwr is 0.8561 which is significantly better than the globel multiple linear regression model of 0.6472.\n\n\n\n9.3 Visualising GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list.\n\n\n9.4 Converting SDF into sf data.frame\nTo visualise the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ncondo_resale.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 <- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output <- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive <- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                <dbl> 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       <dbl> 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 <dbl> -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               <dbl> 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              <dbl> 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   <dbl> -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              <dbl> -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        <dbl> 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      <dbl> -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  <dbl> -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              <dbl> -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             <dbl> -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      <dbl> 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    <dbl> 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         <dbl> 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           <dbl> 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       <dbl> -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              <dbl> 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    <dbl> 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                <dbl> 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           <dbl> 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            <dbl> 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             <dbl> 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  <dbl> 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             <dbl> 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       <dbl> 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     <dbl> 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE <dbl> 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             <dbl> 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            <dbl> 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     <dbl> 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   <dbl> 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        <dbl> 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          <dbl> 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      <dbl> 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             <dbl> 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            <dbl> 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             <dbl> 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  <dbl> -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             <dbl> -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       <dbl> 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     <dbl> -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV <dbl> -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             <dbl> -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            <dbl> -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     <dbl> 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   <dbl> 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        <dbl> 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          <dbl> 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      <dbl> -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             <dbl> 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                <dbl> 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               <dbl> 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               <dbl> 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                <POINT [m]> POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901 \n\n\n\n\n9.5 Visualising local R2\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n9.6 Visualising coefficient estimates\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nAREA_SQM_SE <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n9.6.1 By URA Plannign Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)\n\nWarning: The shape mpsz_svy21[mpsz_svy21$REGION_N == \"CENTRAL REGION\", ] is\ninvalid. See sf::st_is_valid"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2.html#getting-started",
    "href": "Take-home Exercise/Take-home Ex2.html#getting-started",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2.html#data-import",
    "href": "Take-home Exercise/Take-home Ex2.html#data-import",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Data Import",
    "text": "Data Import\n\nImport water point data\n\nwp <- read_csv(\"Take home 2 data/WPdx.csv\",show_col_types = FALSE) %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\n\nI use show_col_types = FALSE to avoid warning message.\nTo extract Nigeria data I use filter()\n\nI saved it into wp_nga.rds. In this way I can delete geo_export data which is too large to git push.\n\nwp_nga<-write_rds(wp,\"Take home 2 data/wp_nga.rds\")\n\n\nwp_nga <- read_rds(\"Take home 2 data/wp_nga.rds\") \n\n\nConvert wkt data\nColumn ‘New Georaferenced Column’ represent spatial data in a textual format. this kind of text file is popularly known as Well Known Text in short wkt.\n\nTwo steps will be used to convert an asptial data file in wkt format into a sf data frame by using sf.\nFirst, st_as_sfc() of sf package is used to derive a new field called Geometry as shown in the code chunk below.\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\n\nNow we get the new column called Geometry.\n\nNext, st_sf() will be used to convert the tibble data frame into sf data frame.\n\nwp_sf <- st_sf(wp_nga, crs=4326) \n\nWhen the process completed, a new sf data frame called wp_sf will be created.\n\n\n\nImporting Nigeria LGA level boundary data\n\nnga<- st_read(dsn=\"Take home 2 data\",\n             layer=\"geoBoundaries-NGA-ADM2\",\n             crs=4326)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Take-home Exercise\\Take home 2 data' using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\nPoint in Polygon Overlay\nTo make sure the data accuracy, we are going to use a geoprocessing function (or commonly know as GIS analysis) called point-in-polygon overlay to transfer the attribute information in nga sf data frame into wp_sf data frame.\n\nwp_sf <- st_join(wp_sf, nga)\n\nNow we have column called “shapeName”, which is the LGA name of Nigeria water point."
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2.html#data-wrangling",
    "href": "Take-home Exercise/Take-home Ex2.html#data-wrangling",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Data Wrangling",
    "text": "Data Wrangling\nReference: Ong Zhi Rong Jordan\n\nChecking of duplicated area name\nWe use duplicate function to retrieve all the shapeName that has duplicates and store it in a list. From the result below, we identified 12 shapeNames that are duplicates.\n\nnga <- (nga[order(nga$shapeName), ])\n\nduplicate_area <- nga$shapeName[ nga$shapeName %in% nga$shapeName[duplicated(nga$shapeName)] ]\n\nduplicate_area\n\n [1] \"Bassa\"    \"Bassa\"    \"Ifelodun\" \"Ifelodun\" \"Irepodun\" \"Irepodun\"\n [7] \"Nasarawa\" \"Nasarawa\" \"Obi\"      \"Obi\"      \"Surulere\" \"Surulere\"\n\n\nNext, we will leverage on the interactive viewer of tmap to check the location of each area. Through the use of Google, we are able to retrieve the actual name and state of the areas. The table below shows the index and the actual name of the area.\n\n\n\nIndex\nActual Area Name\n\n\n\n\n94\nBassa (Kogi)\n\n\n95\nBassa (Plateau)\n\n\n304\nIfelodun (Kwara)\n\n\n305\nIfelodun (Osun)\n\n\n355\nIrepodun (Kwara)\n\n\n356\nIrepodun (Osun)\n\n\n518\nNassarawa\n\n\n546\nObi (Benue)\n\n\n547\nObi(Nasarawa)\n\n\n693\nSurulere (lagos)\n\n\n694\nSurulere (Oyo)\n\n\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(nga[nga$shapeName %in% duplicate_area,]) +\n  tm_polygons()\n\n\n\n\n\n\nMake sure the tmap mode set back to plot\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nWe will now access the individual index of the nga data frame and change the value. Lastly, we use the length() function to ensure there is no more duplicated shapeName.\n\nnga$shapeName[c(94,95,304,305,355,356,519,546,547,693,694)] <- c(\"Bassa (Kogi)\",\"Bassa (Plateau)\",\n                                                                               \"Ifelodun (Kwara)\",\"Ifelodun (Osun)\",\n                                                                               \"Irepodun (Kwara)\",\"Irepodun (Osun)\",\n                                                                               \"Nassarawa\",\"Obi (Benue)\",\"Obi(Nasarawa)\",\n                                                                               \"Surulere (Lagos)\",\"Surulere (Oyo)\")\n\nlength((nga$shapeName[ nga$shapeName %in% nga$shapeName[duplicated(nga$shapeName)] ]))\n\n[1] 0\n\n\n\n\nProjection of sf dataframe\n\nngaT <- wp_sf  %>%\n  rename (\"Country\" = \"#clean_country_name\",\n          \"clean_adm2\" = \"#clean_adm2\",\n          \"status\" = \"#status_clean\",\n          \"lat\" = \"#lat_deg\",\n          \"long\" = \"#lon_deg\") %>%\n  select (clean_adm2,status,lat,long) %>%\n  mutate(status = replace_na(status, \"Unknown\"))\n\nngaT_sf <- st_as_sf(ngaT, coords = c(\"long\", \"lat\"),  crs = 4326)\n\n\nngaT_sf <- st_transform(ngaT_sf, crs = 26391)\n\nst_crs (nga)\n\nCoordinate Reference System:\n  User input: EPSG:4326 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n        MEMBER[\"World Geodetic System 1984 (Transit)\"],\n        MEMBER[\"World Geodetic System 1984 (G730)\"],\n        MEMBER[\"World Geodetic System 1984 (G873)\"],\n        MEMBER[\"World Geodetic System 1984 (G1150)\"],\n        MEMBER[\"World Geodetic System 1984 (G1674)\"],\n        MEMBER[\"World Geodetic System 1984 (G1762)\"],\n        MEMBER[\"World Geodetic System 1984 (G2139)\"],\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]],\n        ENSEMBLEACCURACY[2.0]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"World.\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]\n\nst_crs (ngaT_sf)\n\nCoordinate Reference System:\n  User input: EPSG:26391 \n  wkt:\nPROJCRS[\"Minna / Nigeria West Belt\",\n    BASEGEOGCRS[\"Minna\",\n        DATUM[\"Minna\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4263]],\n    CONVERSION[\"Nigeria West Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",4,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",4.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.99975,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",230738.26,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Nigeria - onshore west of 6°30'E, onshore and offshore shelf.\"],\n        BBOX[3.57,2.69,13.9,6.5]],\n    ID[\"EPSG\",26391]]"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2.html#exploratory-data-analysis-eda",
    "href": "Take-home Exercise/Take-home Ex2.html#exploratory-data-analysis-eda",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\n\nEDA using statistical graphics\nWe can plot the distribution of the variables (i.e. Number of households with radio) by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\nHistogram is useful to identify the overall distribution of the data values (i.e. left skew, right skew or normal distribution)\n\nggplot(data= ngaT_sf, \n       aes(x= fct_infreq(status))) +\n  geom_bar(aes(fill = status), show.legend = FALSE) +\n  geom_text(stat = 'count',\n           aes(label= paste0(after_stat(count), ', ', \n                             round(after_stat(count)/sum(after_stat(count))*100, \n                             2), '%')), vjust= -0.5, size= 2.5) +\n  labs(y= 'No. of\\nOccurence', x= 'Status',\n       title = \"Distribution of Water Tap Status\") +\n  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        panel.background= element_blank(), axis.line= element_line(color= 'grey'),\n        axis.text.x = element_text(angle = 90, vjust = 0.5))"
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this hands-on exercise, you will learn how to build hedonic pricing models by using GWR methods. The dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational."
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html#the-data",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html#the-data",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "2 The Data",
    "text": "2 The Data\nTwo data sets will be used in this model building exercise, they are:\n\nURA Master Plan subzone boundary in shapefile format (i.e. MP14_SUBZONE_WEB_PL)\ncondo_resale_2015 in csv format (i.e. condo_resale_2015.csv)"
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html#getting-started",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html#getting-started",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3 Getting Started",
    "text": "3 Getting Started\nBefore we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows:\n\nR package for building OLS and performing diagnostics tests\n\nolsrr\nNote: used to test assumption, calibrate different model.\n\n\n\n\n\n\nNote\n\n\n\nThe olsrr package provides following tools for building OLS regression models using R:\n\nComprehensive Regression Output\nVariable Selection Procedures\nHeteroskedasticity Tests\nCollinearity Diagnostics\nModel Fit Assessment\nMeasures of Influence\nResidual Diagnostics\nVariable Contribution Assessment\n\n\n\n\nR package for calibrating geographical weighted family of models\n\nGWmodel\n\nR package for multivariate data visualisation and analysis\n\ncorrplot\n\nSpatial data handling\n\nsf\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\n\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\nNote: Once we run this, it will check the installation of each package. This code chunk should be run every time we exit then back to open the RStudio. Or else there will be error message."
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html#a-shirt-note-about-gwmodel",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html#a-shirt-note-about-gwmodel",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "4 A shirt note about GWmodel",
    "text": "4 A shirt note about GWmodel\nGWmodel package provides a collection of localised spatial statistical methods, namely: GW summary statistics, GW principal components analysis, GW discriminant analysis and various forms of GW regression; some of which are provided in basic and robust (outlier resistant) forms. Commonly, outputs or parameters of the GWmodel are mapped to provide a useful exploratory tool, which can often precede (and direct) a more traditional or sophisticated statistical analysis."
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html#geospatial-data-wrangling",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html#geospatial-data-wrangling",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5 Geospatial Data Wrangling",
    "text": "5 Geospatial Data Wrangling\n\n5.1 Importing geospatial data\nThe geospatial data used in this hands-on exercise is called MP14_SUBZONE_WEB_PL. It is in ESRI shapefile format. The shapefile consists of URA Master Plan 2014’s planning subzone boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\nThe code chunk below is used to import MP_SUBZONE_WEB_PL shapefile by using st_read() of sf packages.\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\Xu-Siyi\\ISSS624\\In-class_Ex\\In-class Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe report above shows that the R object used to contain the imported MP14_SUBZONE_WEB_PL shapefile is called mpsz and it is a simple feature object. The geometry type is multipolygon. it is also important to note that mpsz simple feature object does not have EPSG information.\n\n\n5.2 Updating CRS information\nThe code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 3414)\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\nNote: ref: https://epsg.io/?q=Singapore\nAfter transforming the projection metadata, you can varify the projection of the newly transformed mpsz_svy21 by using st_crs() of sf package.\nThe code chunk below will be used to varify the newly transformed mpsz_svy21.\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that the EPSG: is indicated as 3414 now.\nNext, you will reveal the extent of mpsz_svy21 by using st_bbox() of sf package.\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html#aspatial-data-wrangling",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html#aspatial-data-wrangling",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "6 Aspatial Data Wrangling",
    "text": "6 Aspatial Data Wrangling\n\n6.1 Importing the aspatial data\nThe condo_resale_2015 is in csv file format. The codes chunk below uses read_csv() function of readr package to import condo_resale_2015 into R as a tibble data frame called condo_resale.\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\",show_col_types = FALSE)\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe codes chunks below uses glimpse() to display the data structure of will do the job\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nNext, summary() of base R is used to display the summary statistics of cond_resale tibble data frame.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n\n6.2 Converting aspatial data frame into a sf object\nCurrently, the condo_resale tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts condo_resale data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\nNotice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).\nNext, head() is used to list the content of condo_resale.sf object.\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 12 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>, and abbreviated variable names\n#   ¹​SELLING_PRICE, ²​AREA_SQM, ³​PROX_CBD, ⁴​PROX_CHILDCARE, ⁵​PROX_ELDERLYCARE,\n#   ⁶​PROX_URA_GROWTH_AREA, ⁷​PROX_HAWKER_MARKET, ⁸​PROX_KINDERGARTEN"
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html#exploratory-data-analysis-eda",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html#exploratory-data-analysis-eda",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "7 Exploratory Data Analysis (EDA)",
    "text": "7 Exploratory Data Analysis (EDA)\nIn the section, you will learn how to use statistical graphics functions of ggplot2 package to perform EDA.\n\n7.1 EDA using statistical graphics\nWe can plot the distribution of SELLING_PRICE by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nStatistically, the skewed dsitribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow, you can plot the LOG_SELLING_PRICE using the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nNotice that the distribution is relatively less skewed after the transformation.\n\n\n7.2 Multiple Histogram Plots distribution of variables\nIn this section, you will learn how to draw a small multiple histograms (also known as trellis plot) by using ggarrange() of ggpubr package.\nThe code chunk below is used to create 12 histograms. Then, ggarrange() is used to organised these histogram into a 3 columns by 4 rows small multiple plot.\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\n\n\n7.3 Drawing Statistical Point Map\nLastly, we want to reveal the geospatial distribution condominium resale prices in Singapore. The map will be prepared by using tmap package.\nFirst, we will turn on the interactive mode of tmap by using the code chunk below.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nNext, the code chunks below is used to create an interactive point symbol map.\nNote: There is a error:\n\nso I firstly set tmap_options(check.and.fix = TRUE)\n\ntmap_options(check.and.fix = TRUE)\n\n\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\nNotice that tm_dots() is used instead of tm_bubbles().\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively.\nBefore moving on to the next section, the code below will be used to turn R display into plot mode.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html#hedonic-pricing-modelling-in-r",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html#hedonic-pricing-modelling-in-r",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8 Hedonic Pricing Modelling in R",
    "text": "8 Hedonic Pricing Modelling in R\nIn this section, you will learn how to building hedonic pricing models for condominium resale units using lm() of R base.\n\n8.1 Simple Linear Regression Method\n\nFirst, we will build a simple linear regression model by using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n      *y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nTo visualise the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nFigure above reveals that there are a few statistical outliers with relatively high selling prices.\n\n\n8.2 Multiple Linear Regression Method\n\n8.2.1 Visualising the relationships of the independent variables\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nCorrelation matrix is commonly used to visualise the relationships between the independent variables. Beside the pairs() of R, there are many packages support the display of a correlation matrix. In this section, the corrplot package will be used.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in condo_resale data.frame.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building.\n\n\n\n8.3 Building a hedonic pricing model using multiple linear regression method\nThe code chunk below using lm() to calibrate the multiple linear regression model.\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16\n\n\n\n\n8.4 Preparing Publication Quality Table: olsrr method\nWith reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing those variables which are not statistically significant.\nNow, we are ready to calibrate the revised model by using the code chunk below.\nNote: if used olsrr method, it will give us a tidy result summary.\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\nNote:\n\nWe can reject the H0.\nWhen we interpret the result, it should make sense.\n\nAge increase 1 unit, the price will decrease $24687.739\nIf it the house is freehold, the price will increase $350599.812\n\n\n8.5 Preparing Publication Quality Table: gtsummary method\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R.\nIn the code chunk below, tbl_regression() is used to create a well formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nFor more customisation options, refer to Tutorial: tbl_regression\n\n8.5.1 Checking for multicolinearity\nIn this section, we would like to introduce you a fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\n\n8.5.2 Test for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nThe figure above reveals that most of the data poitns are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n8.5.3 Test for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chun below.\n\nols_test_normality(condo.mlr1)\n\nWarning in ks.test.default(y, \"pnorm\", mean(y), sd(y)): ties should not be\npresent for the Kolmogorov-Smirnov test\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n8.5.4 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %>%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\nThe code chunk below will be used to perform the data conversion process.\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nNext, we will use tmap package to display the distribution of the residuals on an interactive map.\nThe code churn below will turn on the interactive mode of tmap.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n\nThe code chunks below is used to create an interactive point symbol map.\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nRemember to switch back to “plot” mode before continue.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nThe figure above reveal that there is sign of spatial autocorrelation.\nTo proof that our observation is indeed true, the Moran’s I test will be performed\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "In-class_Ex/In-class Ex4/In-class Ex4.html#building-hedonic-pricing-models-using-gwmodel",
    "href": "In-class_Ex/In-class Ex4/In-class Ex4.html#building-hedonic-pricing-models-using-gwmodel",
    "title": "In-class Exercise 4: : Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9 Building Hedonic Pricing Models using GWmodel",
    "text": "9 Building Hedonic Pricing Models using GWmodel\nIn this section, you are going to learn how to modelling hedonic pricing using both the fixed and adaptive bandwidth schemes\n\n9.1 Building Fixed Bandwidth GWR Model\n\n9.1.1 Computing fixed bandwith\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nThere are two possible approaches can be uused to determine the stopping rule, they are: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach argeement.\n\nbw.fixed <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\n9.1.2 GWModel method - fixed bandwith\nNow we can use the code chunk below to calibrate the gwr model using fixed bandwidth and gaussian kernel\n\ngwr.fixed <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-10 11:44:14 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2022-12-10 11:44:15 \n\n\nThe report shows that the adjusted r-square of the gwr is 0.8430 which is significantly better than the globel multiple linear regression model of 0.6472.\n\n\n\n9.2 Building Adaptive Bandwidth GWR Model\nIn this section, we will calibrate the gwr-absed hedonic pricing model by using adaptive bandwidth approach.\n\n9.2.1 Computing the adaptive bandwidth\nSimilar to the earlier section, we will first use bw.ger() to determine the recommended data point to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\nbw.adaptive <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n\n9.2.2 Constructing the adaptive bandwidth gwr model\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and gaussian kernel as shown in the code chunk below.\n\ngwr.adaptive <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\nThe code below can be used to display the model output.\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-10 11:44:20 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2022-12-10 11:44:21 \n\n\nThe report shows that the adjusted r-square of the gwr is 0.8561 which is significantly better than the globel multiple linear regression model of 0.6472.\n\n\n\n9.3 Visualising GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list.\n\n\n9.4 Converting SDF into sf data.frame\nTo visualise the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ncondo_resale.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 <- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output <- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive <- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                <dbl> 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       <dbl> 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 <dbl> -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               <dbl> 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              <dbl> 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   <dbl> -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              <dbl> -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        <dbl> 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      <dbl> -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  <dbl> -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              <dbl> -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             <dbl> -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      <dbl> 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    <dbl> 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         <dbl> 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           <dbl> 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       <dbl> -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              <dbl> 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    <dbl> 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                <dbl> 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           <dbl> 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            <dbl> 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             <dbl> 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  <dbl> 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             <dbl> 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       <dbl> 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     <dbl> 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE <dbl> 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             <dbl> 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            <dbl> 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     <dbl> 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   <dbl> 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        <dbl> 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          <dbl> 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      <dbl> 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             <dbl> 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            <dbl> 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             <dbl> 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  <dbl> -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             <dbl> -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       <dbl> 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     <dbl> -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV <dbl> -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             <dbl> -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            <dbl> -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     <dbl> 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   <dbl> 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        <dbl> 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          <dbl> 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      <dbl> -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             <dbl> 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                <dbl> 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               <dbl> 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               <dbl> 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                <POINT [m]> POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901 \n\n\n\n\n9.5 Visualising local R2\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n9.6 Visualising coefficient estimates\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nAREA_SQM_SE <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\nWarning: The shape mpsz_svy21 is invalid (after reprojection). See\nsf::st_is_valid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n9.6.1 By URA Plannign Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)\n\nWarning: The shape mpsz_svy21[mpsz_svy21$REGION_N == \"CENTRAL REGION\", ] is\ninvalid. See sf::st_is_valid"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#getting-started",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#getting-started",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(sf,spdep, tmap, tidyverse,dplyr, funModeling,rgdal,  ClustGeo, ggpubr, cluster, factoextra, NbClust,heatmaply, corrplot, psych, GGally)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#data-import",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#data-import",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Data Import",
    "text": "Data Import\n\nImport water point data\n\nwp <- read_csv(\"Take home 2 data/WPdx.csv\",show_col_types = FALSE) %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\n\nI use show_col_types = FALSE to avoid warning message.\nTo extract Nigeria data I use filter()\n\nI saved it into wp_nga.rds. In this way I can delete geo_export data which is too large to git push.\n\nwp_nga<-write_rds(wp,\"Take home 2 data/wp_nga.rds\")\n\n\nwp_nga <- read_rds(\"Take home 2 data/wp_nga.rds\") \n\n\nConvert wkt data\nColumn ‘New Georaferenced Column’ represent spatial data in a textual format. this kind of text file is popularly known as Well Known Text in short wkt.\n\nTwo steps will be used to convert an asptial data file in wkt format into a sf data frame by using sf.\nFirst, st_as_sfc() of sf package is used to derive a new field called Geometry as shown in the code chunk below.\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\n\nNow we get the new column called Geometry.\n\nNext, st_sf() will be used to convert the tibble data frame into sf data frame.\n\nwp_sf <- st_sf(wp_nga, crs=4326) \n\nWhen the process completed, a new sf data frame called wp_sf will be created.\n\n\n\nImporting Nigeria LGA level boundary data\n\nnga<- st_read(dsn=\"Take home 2 data\",\n             layer=\"geoBoundaries-NGA-ADM2\",\n             crs=4326)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Take-home Exercise\\Take home 2 data' using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\nPoint in Polygon Overlay\nTo make sure the data accuracy, we are going to use a geoprocessing function (or commonly know as GIS analysis) called point-in-polygon overlay to transfer the attribute information in nga sf data frame into wp_sf data frame.\n\nwp_sf <- st_join(wp_sf, nga)%>%\n  mutate(status_cle = replace_na(status_cle, \"Unknown\")) %>%\n  mutate(X_water_tec = replace_na(X_water_tec, \"Unknown\"))\n\nNow we have column called “shapeName”, which is the LGA name of Nigeria water point."
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#data-wrangling",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#data-wrangling",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Data Wrangling",
    "text": "Data Wrangling\nThe reference of the code chunk in Data Wrangling part: Ong Zhi Rong Jordan\n\nChecking of duplicated area name\nWe use duplicate function to retrieve all the shapeName that has duplicates and store it in a list. From the result below, we identified 12 shapeNames that are duplicates.\n\nnga <- (nga[order(nga$shapeName), ])\n\nduplicate_area <- nga$shapeName[ nga$shapeName %in% nga$shapeName[duplicated(nga$shapeName)] ]\n\nduplicate_area\n\n [1] \"Bassa\"    \"Bassa\"    \"Ifelodun\" \"Ifelodun\" \"Irepodun\" \"Irepodun\"\n [7] \"Nasarawa\" \"Nasarawa\" \"Obi\"      \"Obi\"      \"Surulere\" \"Surulere\"\n\n\nNext, we will leverage on the interactive viewer of tmap to check the location of each area. Through the use of Google, we are able to retrieve the actual name and state of the areas. The table below shows the index and the actual name of the area.\n\n\n\nIndex\nActual Area Name\n\n\n\n\n94\nBassa (Kogi)\n\n\n95\nBassa (Plateau)\n\n\n304\nIfelodun (Kwara)\n\n\n305\nIfelodun (Osun)\n\n\n355\nIrepodun (Kwara)\n\n\n356\nIrepodun (Osun)\n\n\n518\nNassarawa\n\n\n546\nObi (Benue)\n\n\n547\nObi(Nasarawa)\n\n\n693\nSurulere (lagos)\n\n\n694\nSurulere (Oyo)\n\n\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(nga[nga$shapeName %in% duplicate_area,]) +\n  tm_polygons()\n\n\n\n\n\n\nMake sure the tmap mode set back to plot\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nWe will now access the individual index of the nga data frame and change the value. Lastly, we use the length() function to ensure there is no more duplicated shapeName.\n\nnga$shapeName[c(94,95,304,305,355,356,519,546,547,693,694)] <- c(\"Bassa (Kogi)\",\"Bassa (Plateau)\",\n                                                                               \"Ifelodun (Kwara)\",\"Ifelodun (Osun)\",\n                                                                               \"Irepodun (Kwara)\",\"Irepodun (Osun)\",\n                                                                               \"Nassarawa\",\"Obi (Benue)\",\"Obi(Nasarawa)\",\n                                                                               \"Surulere (Lagos)\",\"Surulere (Oyo)\")\n\nlength((nga$shapeName[ nga$shapeName %in% nga$shapeName[duplicated(nga$shapeName)] ]))\n\n[1] 0\n\n\n\n\nProjection of sf dataframe\n\nwp_sf <- st_as_sf(nga, coords = c(\"long\", \"lat\"),  crs = 4326)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#derive-new-variables",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#derive-new-variables",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Derive new variables",
    "text": "Derive new variables\n\n\n\n\n\n\nTake-home Exercise 2 Objective\n\n\n\nIn this take-home exercise you are required to regionalise Nigeria by using, but not limited to the following measures:\n\nTotal number of functional water points\nTotal number of nonfunctional water points\nPercentage of functional water points\nPercentage of non-functional water points\nPercentage of main water point technology (i.e. Hand Pump)\nPercentage of usage capacity (i.e. < 1000, >=1000)\nPercentage of rural water points\n\n\n\nIn this section, we will extract the water point records by using classes in status_cle field.\nin this code chunk below, filter() is used to select functional water points\n\nwpt_functional <- wp_sf %>%\n  filter(status_cle %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nIn the code chunk below, filter() of dplyr is used to select non-functional water points.\n\nwpt_nonfunctional <- wp_sf %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\nIn the code chunk below, filter() of dplyr is used to select water points with unknown status.\n\nwpt_unknown <- wp_sf %>%\n  filter(status_cle == \"Unknown\")\n\n\nwpt_handpump <- wp_sf %>%\n  filter(X_water_tec == \"Hand Pump\")\n\n\nusage_low <- wp_sf %>%\n  filter(`usage_cap` < 1000)\n\n\nusage_high <- wp_sf %>%\n  filter(`usage_cap` >= 1000)\n\n\nwpt_rural<-wp_sf %>%\n  filter(`is_urban` == \"False\")\n\nThen we add new variable called total wpt, wpt functional, wpt non-functional, wpt unknown, wpt handpump, usage low, usage high, `wpt rural into nga dataframe.\n\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_sf))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown)))%>%\n  mutate(`wpt handpump` = lengths(\n    st_intersects(nga, wpt_handpump)))%>%\n  mutate(`usage low` = lengths(\n    st_intersects(nga, usage_low)))%>%\n  mutate(`usage high` = lengths(\n    st_intersects(nga, usage_high)))%>%\n  mutate(`wpt rural` = lengths(\n    st_intersects(nga, wpt_rural)))\n\nThen we can calculate the percentage of functional water point and non-functional water points, the percentage of Hand Pump, the percentage of usage capacity and the percentage of rural water points\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`) %>%\n  mutate(`pct_handpump` = `wpt handpump`/`total wpt`) %>%\n  mutate(`pct_usagelow` = `usage low`/`total wpt`) %>%\n  mutate(`pct_usagehigh` = `usage high`/`total wpt`) %>%\n  mutate(`pct_rural` = `wpt rural`/`total wpt`)\n\nThings to learn from the code chunk above:\nmutate() of dplyr package is used to derive two fields namely pct_functional and pct_non-functional.\nThere are some NaN field in the nga_wp because of the zero number of total water point. I replace them with zero value.\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = replace_na(pct_functional, 0)) %>%\n  mutate(`pct_non-functional` = replace_na(`pct_non-functional`, 0)) %>%\n  mutate(pct_handpump = replace_na(pct_handpump, 0)) %>%\n  mutate(pct_usagelow = replace_na(pct_usagelow, 0)) %>%\n  mutate(pct_usagehigh = replace_na(pct_usagehigh, 0)) %>%\n  mutate(pct_rural = replace_na(pct_rural, 0))\n\n\nwp_sf <- st_transform(wp_sf, crs = 26391)\n\nst_crs (wp_sf)\n\nCoordinate Reference System:\n  User input: EPSG:26391 \n  wkt:\nPROJCRS[\"Minna / Nigeria West Belt\",\n    BASEGEOGCRS[\"Minna\",\n        DATUM[\"Minna\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4263]],\n    CONVERSION[\"Nigeria West Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",4,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",4.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.99975,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",230738.26,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Nigeria - onshore west of 6°30'E, onshore and offshore shelf.\"],\n        BBOX[3.57,2.69,13.9,6.5]],\n    ID[\"EPSG\",26391]]\n\n\nNow, I have the tidy sf data table subsequent analysis and save the sf data table into rds format. nga_wp.rds, which is the combination of the geospatial and aspatial data.\n\nwrite_rds(nga_wp, \"Take home 2 data/nga_wp.rds\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#exploratory-data-analysis-eda",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#exploratory-data-analysis-eda",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\n\nnga_wp <- read_rds(\"Take home 2 data/nga_wp.rds\")\n\n\nEDA using statistical graphics\nFirstly, I plot the distribution of the variables (i.e. Number of functional water point) by using bar graph.\n\nfreq(data=wp_sf, \n     input = 'status_cle')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n                        status_cle frequency percentage cumulative_perc\n1                       Functional     45883      48.29           48.29\n2                   Non-Functional     29385      30.93           79.22\n3                          Unknown     10656      11.22           90.44\n4      Functional but needs repair      4579       4.82           95.26\n5 Non-Functional due to dry season      2403       2.53           97.79\n6        Functional but not in use      1686       1.77           99.56\n7         Abandoned/Decommissioned       234       0.25           99.81\n8                        Abandoned       175       0.18           99.99\n9 Non functional due to dry season         7       0.01          100.00\n\n\nFrom the graph above we can see there are 48.29% water points in Nigeria are functional. 30.93% water points are non-functional and 11.22% water points are unknown.\n\nfreq(data=wp_sf, \n     input = 'X_water_tec')\n\n\n\n\n      X_water_tec frequency percentage cumulative_perc\n1       Hand Pump     58755      61.84           61.84\n2 Mechanized Pump     25644      26.99           88.83\n3         Unknown     10055      10.58           99.41\n4        Tapstand       553       0.58           99.99\n5 Rope and Bucket         1       0.00          100.00\n\n\nFrom the above graph we can see that 61.84% of all water points in Nigeria are hand pump, 26.99% are mechanized pump and 10.58% are unknown.\n\nfreq(data=wp_sf, \n     input = 'is_urban')\n\n\n\n\n  is_urban frequency percentage cumulative_perc\n1    False     75444      79.41           79.41\n2     True     19564      20.59          100.00\n\n\nFrom the above graph we can see that 79.14% of all water points in Nigeria are rural, 20.59% are urban.\nSecondly, I plot the distribution of the variables (i.e. Number of functional water point) by using historgram graph.\n\npct_functional <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_nonfunctional <- ggplot(data=nga_wp, \n             aes(x= `pct_non-functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_handpump <- ggplot(data=nga_wp, \n           aes(x= `pct_handpump`)) +\ngeom_histogram(bins=20, \n               color=\"black\", \n                 fill=\"light blue\")\n\npct_usagelow <- ggplot(data=nga_wp, \n             aes(x= `pct_usagelow`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_usagehigh <- ggplot(data=nga_wp, \n             aes(x= `pct_usagehigh`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_rural <- ggplot(data=nga_wp, \n             aes(x= `pct_rural`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\nggarrange(pct_functional, pct_nonfunctional,pct_handpump, pct_usagehigh, pct_usagelow, pct_rural, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\n\nEDA using choropleth map\nI prepared a choropleth map to have a quick look at the distribution of water point in Nigeria\nThe code chunks below are used to prepare the choroplethby using the qtm() function of tmap package.\n\nqtm(nga_wp, \"total wpt\")\n\n\n\n\n\nfunc.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_functional\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nnonfunc.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_non-functional\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nhandpump.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_handpump\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nusagelow.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_usagelow\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nusagehigh.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_usagehigh\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nrural.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_rural\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(func.map, nonfunc.map,handpump.map,usagelow.map,usagehigh.map,rural.map,\n             asp=NA, ncol=2)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#correlation-analysis",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#correlation-analysis",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Correlation Analysis",
    "text": "Correlation Analysis\n\nnga_wp_cor <- nga_wp %>%\n  st_drop_geometry() %>%\n  select(\"shapeName\",\"wpt functional\",\"wpt non-functional\", \"pct_functional\", \"pct_non-functional\", \"pct_handpump\",\"pct_usagelow\",\"pct_usagehigh\", \"pct_rural\")\ncluster_vars.cor = cor(nga_wp_cor[,2:8])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#hierarchy-cluster-analysis",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#hierarchy-cluster-analysis",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Hierarchy Cluster Analysis",
    "text": "Hierarchy Cluster Analysis\n\nExtracting clustering variables\n\ncluster_vars <- nga_wp_cor %>%\n  select(\"shapeName\",\"wpt functional\",\"wpt non-functional\",\"pct_functional\", \"pct_non-functional\", \"pct_handpump\",\"pct_usagelow\",\"pct_usagehigh\", \"pct_rural\")\nhead(cluster_vars,10)\n\n        shapeName wpt functional wpt non-functional pct_functional\n1       Aba North              7                  9      0.4117647\n2       Aba South             29                 35      0.4084507\n3          Abadam              0                  0      0.0000000\n4           Abaji             23                 34      0.4035088\n5            Abak             23                 25      0.4791667\n6       Abakaliki             82                 42      0.3519313\n7  Abeokuta North             16                 15      0.4705882\n8  Abeokuta South             72                 33      0.6050420\n9             Abi             79                 62      0.5197368\n10    Aboh-Mbaise             18                 26      0.2727273\n   pct_non-functional pct_handpump pct_usagelow pct_usagehigh  pct_rural\n1           0.5294118   0.11764706   0.17647059     0.8235294 0.00000000\n2           0.4929577   0.09859155   0.12676056     0.8732394 0.05633803\n3           0.0000000   0.00000000   0.00000000     0.0000000 0.00000000\n4           0.5964912   0.40350877   0.40350877     0.5964912 0.84210526\n5           0.5208333   0.08333333   0.08333333     0.9166667 0.83333333\n6           0.1802575   0.43776824   0.90557940     0.0944206 0.87553648\n7           0.4411765   0.14705882   0.23529412     0.7647059 0.20588235\n8           0.2773109   0.16806723   0.29411765     0.7058824 0.00000000\n9           0.4078947   0.59868421   0.67105263     0.3289474 0.95394737\n10          0.3939394   0.01515152   0.34848485     0.6515152 0.72727273\n\n\nNext, we need to change the rows by shape name instead of row number by using the code chunk below.\n\nrow.names(cluster_vars) <- cluster_vars$\"shapeName\"\nhead(cluster_vars,10)\n\n                    shapeName wpt functional wpt non-functional pct_functional\nAba North           Aba North              7                  9      0.4117647\nAba South           Aba South             29                 35      0.4084507\nAbadam                 Abadam              0                  0      0.0000000\nAbaji                   Abaji             23                 34      0.4035088\nAbak                     Abak             23                 25      0.4791667\nAbakaliki           Abakaliki             82                 42      0.3519313\nAbeokuta North Abeokuta North             16                 15      0.4705882\nAbeokuta South Abeokuta South             72                 33      0.6050420\nAbi                       Abi             79                 62      0.5197368\nAboh-Mbaise       Aboh-Mbaise             18                 26      0.2727273\n               pct_non-functional pct_handpump pct_usagelow pct_usagehigh\nAba North               0.5294118   0.11764706   0.17647059     0.8235294\nAba South               0.4929577   0.09859155   0.12676056     0.8732394\nAbadam                  0.0000000   0.00000000   0.00000000     0.0000000\nAbaji                   0.5964912   0.40350877   0.40350877     0.5964912\nAbak                    0.5208333   0.08333333   0.08333333     0.9166667\nAbakaliki               0.1802575   0.43776824   0.90557940     0.0944206\nAbeokuta North          0.4411765   0.14705882   0.23529412     0.7647059\nAbeokuta South          0.2773109   0.16806723   0.29411765     0.7058824\nAbi                     0.4078947   0.59868421   0.67105263     0.3289474\nAboh-Mbaise             0.3939394   0.01515152   0.34848485     0.6515152\n                pct_rural\nAba North      0.00000000\nAba South      0.05633803\nAbadam         0.00000000\nAbaji          0.84210526\nAbak           0.83333333\nAbakaliki      0.87553648\nAbeokuta North 0.20588235\nAbeokuta South 0.00000000\nAbi            0.95394737\nAboh-Mbaise    0.72727273\n\n\nNotice that the row number has been replaced into the township name.\nNow, we will delete the Shape Name field by using the code chunk below.\n\nnga_wp_clu <- select(cluster_vars, c(2:9))\nhead(nga_wp_clu, 10)\n\n               wpt functional wpt non-functional pct_functional\nAba North                   7                  9      0.4117647\nAba South                  29                 35      0.4084507\nAbadam                      0                  0      0.0000000\nAbaji                      23                 34      0.4035088\nAbak                       23                 25      0.4791667\nAbakaliki                  82                 42      0.3519313\nAbeokuta North             16                 15      0.4705882\nAbeokuta South             72                 33      0.6050420\nAbi                        79                 62      0.5197368\nAboh-Mbaise                18                 26      0.2727273\n               pct_non-functional pct_handpump pct_usagelow pct_usagehigh\nAba North               0.5294118   0.11764706   0.17647059     0.8235294\nAba South               0.4929577   0.09859155   0.12676056     0.8732394\nAbadam                  0.0000000   0.00000000   0.00000000     0.0000000\nAbaji                   0.5964912   0.40350877   0.40350877     0.5964912\nAbak                    0.5208333   0.08333333   0.08333333     0.9166667\nAbakaliki               0.1802575   0.43776824   0.90557940     0.0944206\nAbeokuta North          0.4411765   0.14705882   0.23529412     0.7647059\nAbeokuta South          0.2773109   0.16806723   0.29411765     0.7058824\nAbi                     0.4078947   0.59868421   0.67105263     0.3289474\nAboh-Mbaise             0.3939394   0.01515152   0.34848485     0.6515152\n                pct_rural\nAba North      0.00000000\nAba South      0.05633803\nAbadam         0.00000000\nAbaji          0.84210526\nAbak           0.83333333\nAbakaliki      0.87553648\nAbeokuta North 0.20588235\nAbeokuta South 0.00000000\nAbi            0.95394737\nAboh-Mbaise    0.72727273\n\n\n\n\nData Standardisation\nIn order to avoid the cluster analysis result is baised to clustering variables with large values, it is useful to standardise the input variables before performing cluster analysis\n\nMin-Max standardisation\nIn the code chunk below, normalize() of heatmaply package is used to stadardisation the clustering variables by using Min-Max method. The summary() is then used to display the summary statistics of the standardised clustering variables.\n\nnga_wp_clu.std <- normalize(cluster_vars)\nsummary(nga_wp_clu.std)\n\n  shapeName         wpt functional    wpt non-functional pct_functional  \n Length:774         Min.   :0.00000   Min.   :0.00000    Min.   :0.0000  \n Class :character   1st Qu.:0.02261   1st Qu.:0.04406    1st Qu.:0.3261  \n Mode  :character   Median :0.06051   Median :0.12230    Median :0.4741  \n                    Mean   :0.08957   Mean   :0.14962    Mean   :0.4984  \n                    3rd Qu.:0.11669   3rd Qu.:0.21853    3rd Qu.:0.6699  \n                    Max.   :1.00000   Max.   :1.00000    Max.   :1.0000  \n pct_non-functional  pct_handpump     pct_usagelow    pct_usagehigh   \n Min.   :0.0000     Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2105     1st Qu.:0.1670   1st Qu.:0.3968   1st Qu.:0.1220  \n Median :0.3505     Median :0.5099   Median :0.6703   Median :0.3127  \n Mean   :0.3592     Mean   :0.4873   Mean   :0.6078   Mean   :0.3754  \n 3rd Qu.:0.5076     3rd Qu.:0.7778   3rd Qu.:0.8735   3rd Qu.:0.5771  \n Max.   :1.0000     Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n   pct_rural     \n Min.   :0.0000  \n 1st Qu.:0.5727  \n Median :0.8645  \n Mean   :0.7271  \n 3rd Qu.:1.0000  \n Max.   :1.0000  \n\n\nNotice that the values range of the Min-max standardised clustering variables are 0-1 now.\n\n\nZ-score standardisation\nZ-score standardisation can be performed easily by using scale() of Base R. The code chunk below will be used to stadardisation the clustering variables by using Z-score method.\nI wont use Z score standardisation because not all variables come from normal distribution.\n\n\n\nVisualising the standardised clustering variables\n\nr <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nnga_clu_s_df <- as.data.frame(nga_wp_clu.std)\ns <- ggplot(data=nga_clu_s_df, \n       aes(x=`pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nggarrange(r, s,\n          ncol = 2,\n          nrow = 1)\n\n\n\n\n\nr <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nnga_clu_s_df <- as.data.frame(nga_wp_clu.std)\ns <- ggplot(data=nga_clu_s_df, \n       aes(x=`pct_functional`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nggarrange(r, s,\n          ncol = 2,\n          nrow = 1)\n\n\n\n\n\n\nComputing proximity matrix\nThe code chunk below is used to compute the proximity matrix using euclidean method.\n\nproxmat <- dist(nga_wp_clu, method = 'euclidean')\n\nThe code chunk below can then be used to list the content of proxmat for visual inspection.\n\nproxmat\n\n\n\nComputing hierarchical clustering\n\nhclust_ward <- hclust(proxmat, method = 'ward.D')\n\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\nSelecting the optimal clustering algorithm\nThe code chunk below will be used to compute the agglomerative coefficients of all hierarchical clustering algorithms.\nValues closer to 1 suggest strong clustering structure.\n\nm <- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) <- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac <- function(x) {\n  agnes(nga_wp_clu, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.9921897 0.9697080 0.9935520 0.9980737 \n\n\nWith reference to the output above, we can see that Ward's method, which value=0.998 is most closer to 1 provides the strongest clustering structure among the four methods assessed. Hence, in the subsequent analysis, only Ward's method will be used.\n\n\nDetermining Optimal Clusters\nThere are three commonly used methods to determine the optimal clusters, they are:\n\nElbow Method\nAverage Silhouette Method\nGap Statistic Method\n\n\nGap Statistic Method\n\nset.seed(12345)\ngap_stat <- clusGap(nga_wp_clu, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = nga_wp_clu, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --> Number of clusters (method 'firstmax'): 1\n          logW    E.logW       gap     SE.sim\n [1,] 9.759081 10.929294 1.1702127 0.01229128\n [2,] 9.530917 10.480479 0.9495622 0.03877423\n [3,] 9.233846 10.254240 1.0203943 0.02385991\n [4,] 9.174800 10.134953 0.9601525 0.01510867\n [5,] 8.979863 10.037263 1.0573998 0.01251681\n [6,] 8.904423  9.944337 1.0399141 0.01385733\n [7,] 8.875087  9.856673 0.9815857 0.01630355\n [8,] 8.818574  9.780783 0.9622091 0.01593100\n [9,] 8.731714  9.711495 0.9797818 0.01720114\n[10,] 8.675618  9.650590 0.9749730 0.01810535\n\n\n\nfviz_gap_stat(gap_stat)\n\n\n\n\nWith reference to the gap statistic graph above, the recommended number of cluster to retain is 1. However, it is not logical to retain only one cluster. By examine the gap statistic graph, the 5-cluster gives the largest gap statistic and should be the next best cluster to pick.\n\n\n\nInterpreting the dendrograms\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 5, \n            border = 2:5)\n\n\n\n\n\n\nVisually-driven hierarchical clustering analysis\nWith heatmaply, we are able to build both highly interactive cluster heatmap or static cluster heatmap.\n\nTransforming the data frame into a matrix\n\nnga_wp_clu_mat <- data.matrix(nga_wp_clu)\n\n\n\nPlotting interactive cluster heatmap using heatmaply()\n\nheatmaply(normalize(nga_wp_clu_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Nigeria by Water point indicators\",\n          xlab = \"Water point indicators Indicators\",\n          ylab = \"Shape Name of Nigeria\"\n          )\n\n\n\n\n\n\n\n\nMapping the clusters formed\n\ngroups <- as.factor(cutree(hclust_ward, k=5))\n\n\nnga_wp_cluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\nqtm(nga_wp_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#spatially-constrained-clustering-skater-approach",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#spatially-constrained-clustering-skater-approach",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Spatially Constrained Clustering: SKATER approach",
    "text": "Spatially Constrained Clustering: SKATER approach\n\nConverting into SpatialPolygonsDataFrame\nFirst, I convert nga_wp into SpatialPolygonsDataFrame. This is because SKATER function only support sp objects such as SpatialPolygonDataFrame.\nThe code chunk below uses as_Spatial() of sf package to convert nga_wpinto a SpatialPolygonDataFrame called nga_sp.\n\nnga_sp <- as_Spatial(nga_wp)\n\n\n\nComputing Neighbour List\npoly2nb\n\nnga.nb <- poly2nb(nga_sp, snap=sqrt(.Machine$double.eps)*1000,queen=FALSE)\nsummary(nga.nb)\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4420 \nPercentage nonzero weights: 0.7378029 \nAverage number of links: 5.710594 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  59 127 181 141 124  66  42  11   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\n\nplot(nga_sp, \n     border=grey(.5))\nplot(nga.nb, \n     coordinates(nga_sp), \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\n\n\nComputing minimum spanning tree\n\nCalculating edge costs\n\n#lcosts <- nbcosts(nga.nb, nga_wp_clu)\n\n\n#nga.w <- nb2listw(nga.nb, \n#                   lcosts, \n#                   style=\"B\")\n#summary(nga.w)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#spatially-constrained-clustering-clustgeo-method",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#spatially-constrained-clustering-clustgeo-method",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Spatially Constrained Clustering: ClustGeo Method",
    "text": "Spatially Constrained Clustering: ClustGeo Method\n\nWard-like hierarchical clustering: ClustGeo\nTo perform non-spatially constrained hierarchical clustering, we only need to provide the function a dissimilarity matrix as shown in the code chunk below\n\nnongeo_cluster <- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 5, \n            border = 2:5)\n\n\n\n\n\nMapping the clusters formed\n\ngroups <- as.factor(cutree(nongeo_cluster, k=5))\n\n\nnga_wp_ngeo_cluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(nga_wp_ngeo_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\nSpatially Constrained Hierarchical Clustering\nBefore we can performed spatially constrained hierarchical clustering, a spatial distance matrix will be derived by using st_distance() of sf package.\n\ndist <- st_distance(nga_wp, nga_wp)\ndistmat <- as.dist(dist)\n\nNotice that as.dist() is used to convert the data frame into matrix.\nNext, choicealpha() will be used to determine a suitable value for the mixing parameter alpha as shown in the code chunk below.\n\ncr <- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=5, graph = TRUE)\n\n\n\n\n\n\n\nWith reference to the graphs above, alpha = 0.1 will be used as shown in the code chunk below.\n\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.1)\n\n\ngroups <- as.factor(cutree(clustG, k=5))\n\n\nnga_wp_Gcluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(nga_wp_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 12.13.html#visual-interpretation-of-clusters",
    "href": "Take-home Exercise/Take-home Ex2 12.13.html#visual-interpretation-of-clusters",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Visual Interpretation of Clusters",
    "text": "Visual Interpretation of Clusters\n\nMultivariate Visualisation\nPast studies shown that parallel coordinate plot can be used to reveal clustering variables by cluster very effectively. In the code chunk below, ggparcoord() of GGally package\n\nggparcoord(data = nga_wp_ngeo_cluster, \n           columns = c(14:19), \n           groupColumn = \"CLUSTER\",\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of water points Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30)) +\n  scale_color_viridis(option = \"D\", discrete=TRUE)\n\n\n\n\nwe can also compute the summary statistics such as mean, median, sd, etc to complement the visual interpretation.\nIn the code chunk below, group_by() and summarise() of dplyr are used to derive mean values of the clustering variables.\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(mean_pct_functional = mean(pct_functional),\n            mean_pct_non.functional = mean(pct_non.functional),\n            mean_pct_handpump = mean(pct_handpump),\n            mean_pct_usagelow = mean(pct_usagelow),\n            mean_pct_usagehigh = mean(pct_usagehigh),\n            mean_pct_rural = mean(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER mean_pct_functional mean_pct_non.fun…¹ mean_…² mean_…³ mean_…⁴ mean_…⁵\n  <chr>                 <dbl>              <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                     0.404              0.369   0.277   0.450  0.511    0.650\n2 2                     0.526              0.381   0.670   0.768  0.232    0.802\n3 3                     0.563              0.362   0.579   0.656  0.344    0.749\n4 4                     0.766              0.210   0.832   0.857  0.143    0.846\n5 5                     0.868              0.132   0.917   0.923  0.0772   0.945\n# … with abbreviated variable names ¹​mean_pct_non.functional,\n#   ²​mean_pct_handpump, ³​mean_pct_usagelow, ⁴​mean_pct_usagehigh,\n#   ⁵​mean_pct_rural\n\n\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(median_pct_functional = median(pct_functional),\n            median_pct_non.functional = median(pct_non.functional),\n            median_pct_handpump = median(pct_handpump),\n            median_pct_usagelow = median(pct_usagelow),\n            median_pct_usagehigh = median(pct_usagehigh),\n            median_pct_rural = median(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER median_pct_functional median_pct_non…¹ media…² media…³ media…⁴ media…⁵\n  <chr>                   <dbl>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                       0.373            0.356   0.158   0.462  0.5      0.788\n2 2                       0.501            0.383   0.674   0.808  0.192    0.893\n3 3                       0.522            0.363   0.614   0.703  0.297    0.904\n4 4                       0.783            0.199   0.904   0.922  0.0782   0.912\n5 5                       0.872            0.128   0.943   0.958  0.0421   1    \n# … with abbreviated variable names ¹​median_pct_non.functional,\n#   ²​median_pct_handpump, ³​median_pct_usagelow, ⁴​median_pct_usagehigh,\n#   ⁵​median_pct_rural\n\n\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(sd_pct_functional = sd(pct_functional),\n            sd_pct_non.functional = sd(pct_non.functional),\n            sd_pct_handpump = sd(pct_handpump),\n            sd_pct_usagelow = sd(pct_usagelow),\n            sd_pct_usagehigh = sd(pct_usagehigh),\n            sd_pct_rural = sd(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER sd_pct_functional sd_pct_non.functio…¹ sd_pc…² sd_pc…³ sd_pc…⁴ sd_pc…⁵\n  <chr>               <dbl>                <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                  0.253                0.249    0.295   0.307   0.311   0.357\n2 2                  0.183                0.156    0.217   0.180   0.180   0.256\n3 3                  0.208                0.184    0.263   0.256   0.256   0.326\n4 4                  0.148                0.123    0.193   0.186   0.186   0.230\n5 5                  0.0544               0.0544   0.114   0.115   0.115   0.121\n# … with abbreviated variable names ¹​sd_pct_non.functional, ²​sd_pct_handpump,\n#   ³​sd_pct_usagelow, ⁴​sd_pct_usagehigh, ⁵​sd_pct_rural"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#getting-started",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#getting-started",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(sf,spdep, tmap, tidyverse,dplyr, funModeling,rgdal,  ClustGeo, ggpubr, cluster, factoextra, NbClust,heatmaply, corrplot, psych, GGally)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#data-import",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#data-import",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Data Import",
    "text": "Data Import\n\nImport water point data\n\nwp <- read_csv(\"Take home 2 data/WPdx.csv\",show_col_types = FALSE) %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\n\nI use show_col_types = FALSE to avoid warning message.\nTo extract Nigeria data I use filter()\n\nI saved it into wp_nga.rds. In this way I can delete geo_export data which is too large to git push.\n\nwp_nga<-write_rds(wp,\"Take home 2 data/wp_nga.rds\")\n\n\nwp_nga <- read_rds(\"Take home 2 data/wp_nga.rds\") \n\n\nwp_nga <- wp_nga %>%\n  select(`lat_deg`, `lon_deg`, `X_water_tec`, `clean_adm2`, `status_cle`, `usage_cap`, `is_urban`,`geometry`)\n\n\nwrite_rds(wp_nga,\"Take home 2 data/wp_nga mini.rds\")\n\n\nwp_nga <- read_rds(\"Take home 2 data/wp_nga mini.rds\") \n\n\nConvert wkt data\nColumn ‘New Georaferenced Column’ represent spatial data in a textual format. this kind of text file is popularly known as Well Known Text in short wkt.\n\nTwo steps will be used to convert an asptial data file in wkt format into a sf data frame by using sf.\nFirst, st_as_sfc() of sf package is used to derive a new field called Geometry as shown in the code chunk below.\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\n\nNow we get the new column called Geometry.\n\nNext, st_sf() will be used to convert the tibble data frame into sf data frame.\n\nwp_sf <- st_sf(wp_nga, crs=4326) \n\nWhen the process completed, a new sf data frame called wp_sf will be created.\n\n\n\nImporting Nigeria LGA level boundary data\n\nnga<- st_read(dsn=\"Take home 2 data\",\n             layer=\"geoBoundaries-NGA-ADM2\",\n             crs=4326)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Take-home Exercise\\Take home 2 data' using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\nPoint in Polygon Overlay\nTo make sure the data accuracy, we are going to use a geoprocessing function (or commonly know as GIS analysis) called point-in-polygon overlay to transfer the attribute information in nga sf data frame into wp_sf data frame.\n\nwp_sf <- st_join(wp_sf, nga)%>%\n  mutate(status_cle = replace_na(status_cle, \"Unknown\")) %>%\n  mutate(X_water_tec = replace_na(X_water_tec, \"Unknown\"))\n\nNow we have column called “shapeName”, which is the LGA name of Nigeria water point."
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#data-wrangling",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#data-wrangling",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Data Wrangling",
    "text": "Data Wrangling\nThe reference of the code chunk in Data Wrangling part: Ong Zhi Rong Jordan\n\nChecking of duplicated area name\nWe use duplicate function to retrieve all the shapeName that has duplicates and store it in a list. From the result below, we identified 12 shapeNames that are duplicates.\n\nnga <- (nga[order(nga$shapeName), ])\n\nduplicate_area <- nga$shapeName[ nga$shapeName %in% nga$shapeName[duplicated(nga$shapeName)] ]\n\nduplicate_area\n\n [1] \"Bassa\"    \"Bassa\"    \"Ifelodun\" \"Ifelodun\" \"Irepodun\" \"Irepodun\"\n [7] \"Nasarawa\" \"Nasarawa\" \"Obi\"      \"Obi\"      \"Surulere\" \"Surulere\"\n\n\nNext, we will leverage on the interactive viewer of tmap to check the location of each area. Through the use of Google, we are able to retrieve the actual name and state of the areas. The table below shows the index and the actual name of the area.\n\n\n\nIndex\nActual Area Name\n\n\n\n\n94\nBassa (Kogi)\n\n\n95\nBassa (Plateau)\n\n\n304\nIfelodun (Kwara)\n\n\n305\nIfelodun (Osun)\n\n\n355\nIrepodun (Kwara)\n\n\n356\nIrepodun (Osun)\n\n\n518\nNassarawa\n\n\n546\nObi (Benue)\n\n\n547\nObi(Nasarawa)\n\n\n693\nSurulere (lagos)\n\n\n694\nSurulere (Oyo)\n\n\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(nga[nga$shapeName %in% duplicate_area,]) +\n  tm_polygons()\n\n\n\n\n\n\nMake sure the tmap mode set back to plot\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nWe will now access the individual index of the nga data frame and change the value. Lastly, we use the length() function to ensure there is no more duplicated shapeName.\n\nnga$shapeName[c(94,95,304,305,355,356,519,546,547,693,694)] <- c(\"Bassa (Kogi)\",\"Bassa (Plateau)\",\n                                                                               \"Ifelodun (Kwara)\",\"Ifelodun (Osun)\",\n                                                                               \"Irepodun (Kwara)\",\"Irepodun (Osun)\",\n                                                                               \"Nassarawa\",\"Obi (Benue)\",\"Obi(Nasarawa)\",\n                                                                               \"Surulere (Lagos)\",\"Surulere (Oyo)\")\n\nlength((nga$shapeName[ nga$shapeName %in% nga$shapeName[duplicated(nga$shapeName)] ]))\n\n[1] 0\n\n\n\n\nProjection of sf dataframe\n\nwp_sf <- st_as_sf(nga, coords = c(\"long\", \"lat\"),  crs = 4326)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#derive-new-variables",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#derive-new-variables",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Derive new variables",
    "text": "Derive new variables\n\n\n\n\n\n\nTake-home Exercise 2 Objective\n\n\n\nIn this take-home exercise you are required to regionalise Nigeria by using, but not limited to the following measures:\n\nTotal number of functional water points\nTotal number of nonfunctional water points\nPercentage of functional water points\nPercentage of non-functional water points\nPercentage of main water point technology (i.e. Hand Pump)\nPercentage of usage capacity (i.e. < 1000, >=1000)\nPercentage of rural water points\n\n\n\nIn this section, we will extract the water point records by using classes in status_cle field.\nin this code chunk below, filter() is used to select functional water points\n\nwpt_functional <- wp_sf %>%\n  filter(status_cle %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nIn the code chunk below, filter() of dplyr is used to select non-functional water points.\n\nwpt_nonfunctional <- wp_sf %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\nIn the code chunk below, filter() of dplyr is used to select water points with unknown status.\n\nwpt_unknown <- wp_sf %>%\n  filter(status_cle == \"Unknown\")\n\n\nwpt_handpump <- wp_sf %>%\n  filter(X_water_tec == \"Hand Pump\")\n\n\nusage_low <- wp_sf %>%\n  filter(`usage_cap` < 1000)\n\n\nusage_high <- wp_sf %>%\n  filter(`usage_cap` >= 1000)\n\n\nwpt_rural<-wp_sf %>%\n  filter(`is_urban` == \"False\")\n\nThen we add new variable called total wpt, wpt functional, wpt non-functional, wpt unknown, wpt handpump, usage low, usage high, `wpt rural into nga dataframe.\n\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_sf))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown)))%>%\n  mutate(`wpt handpump` = lengths(\n    st_intersects(nga, wpt_handpump)))%>%\n  mutate(`usage low` = lengths(\n    st_intersects(nga, usage_low)))%>%\n  mutate(`usage high` = lengths(\n    st_intersects(nga, usage_high)))%>%\n  mutate(`wpt rural` = lengths(\n    st_intersects(nga, wpt_rural)))\n\nThen we can calculate the percentage of functional water point and non-functional water points, the percentage of Hand Pump, the percentage of usage capacity and the percentage of rural water points\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`) %>%\n  mutate(`pct_handpump` = `wpt handpump`/`total wpt`) %>%\n  mutate(`pct_usagelow` = `usage low`/`total wpt`) %>%\n  mutate(`pct_usagehigh` = `usage high`/`total wpt`) %>%\n  mutate(`pct_rural` = `wpt rural`/`total wpt`)\n\nThings to learn from the code chunk above:\nmutate() of dplyr package is used to derive two fields namely pct_functional and pct_non-functional.\nThere are some NaN field in the nga_wp because of the zero number of total water point. I replace them with zero value.\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = replace_na(pct_functional, 0)) %>%\n  mutate(`pct_non-functional` = replace_na(`pct_non-functional`, 0)) %>%\n  mutate(pct_handpump = replace_na(pct_handpump, 0)) %>%\n  mutate(pct_usagelow = replace_na(pct_usagelow, 0)) %>%\n  mutate(pct_usagehigh = replace_na(pct_usagehigh, 0)) %>%\n  mutate(pct_rural = replace_na(pct_rural, 0))\n\n\nwp_sf <- st_transform(wp_sf, crs = 26391)\n\nst_crs (wp_sf)\n\nCoordinate Reference System:\n  User input: EPSG:26391 \n  wkt:\nPROJCRS[\"Minna / Nigeria West Belt\",\n    BASEGEOGCRS[\"Minna\",\n        DATUM[\"Minna\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4263]],\n    CONVERSION[\"Nigeria West Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",4,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",4.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.99975,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",230738.26,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Nigeria - onshore west of 6°30'E, onshore and offshore shelf.\"],\n        BBOX[3.57,2.69,13.9,6.5]],\n    ID[\"EPSG\",26391]]\n\n\nNow, I have the tidy sf data table subsequent analysis and save the sf data table into rds format. nga_wp.rds, which is the combination of the geospatial and aspatial data.\n\nwrite_rds(nga_wp, \"Take home 2 data/nga_wp.rds\")\nwrite_rds(wp_sf, \"Take home 2 data/wp_sf.rds\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#exploratory-data-analysis-eda",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#exploratory-data-analysis-eda",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\n\nnga_wp <- read_rds(\"Take home 2 data/nga_wp.rds\")\nwp_sf <- read_rds(\"Take home 2 data/wp_sf.rds\")\n\n\nEDA using statistical graphics\nFirstly, I plot the distribution of the variables (i.e. Number of functional water point) by using bar graph.\n\nfreq(data=wp_sf, \n     input = 'status_cle')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n                        status_cle frequency percentage cumulative_perc\n1                       Functional     45883      48.29           48.29\n2                   Non-Functional     29385      30.93           79.22\n3                          Unknown     10656      11.22           90.44\n4      Functional but needs repair      4579       4.82           95.26\n5 Non-Functional due to dry season      2403       2.53           97.79\n6        Functional but not in use      1686       1.77           99.56\n7         Abandoned/Decommissioned       234       0.25           99.81\n8                        Abandoned       175       0.18           99.99\n9 Non functional due to dry season         7       0.01          100.00\n\n\nFrom the graph above we can see there are 48.29% water points in Nigeria are functional. 30.93% water points are non-functional and 11.22% water points are unknown.\n\nfreq(data=wp_sf, \n     input = 'X_water_tec')\n\n\n\n\n      X_water_tec frequency percentage cumulative_perc\n1       Hand Pump     58755      61.84           61.84\n2 Mechanized Pump     25644      26.99           88.83\n3         Unknown     10055      10.58           99.41\n4        Tapstand       553       0.58           99.99\n5 Rope and Bucket         1       0.00          100.00\n\n\nFrom the above graph we can see that 61.84% of all water points in Nigeria are hand pump, 26.99% are mechanized pump and 10.58% are unknown.\n\nfreq(data=wp_sf, \n     input = 'is_urban')\n\n\n\n\n  is_urban frequency percentage cumulative_perc\n1    False     75444      79.41           79.41\n2     True     19564      20.59          100.00\n\n\nFrom the above graph we can see that 79.14% of all water points in Nigeria are rural, 20.59% are urban.\nSecondly, I plot the distribution of the variables (i.e. Number of functional water point) by using historgram graph.\n\npct_functional <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_nonfunctional <- ggplot(data=nga_wp, \n             aes(x= `pct_non-functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_handpump <- ggplot(data=nga_wp, \n           aes(x= `pct_handpump`)) +\ngeom_histogram(bins=20, \n               color=\"black\", \n                 fill=\"light blue\")\n\npct_usagelow <- ggplot(data=nga_wp, \n             aes(x= `pct_usagelow`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_usagehigh <- ggplot(data=nga_wp, \n             aes(x= `pct_usagehigh`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_rural <- ggplot(data=nga_wp, \n             aes(x= `pct_rural`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\nggarrange(pct_functional, pct_nonfunctional,pct_handpump, pct_usagehigh, pct_usagelow, pct_rural, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\n\nEDA using choropleth map\nI prepared a choropleth map to have a quick look at the distribution of water point in Nigeria\nThe code chunks below are used to prepare the choroplethby using the qtm() function of tmap package.\n\nqtm(nga_wp, \"total wpt\")\n\n\n\n\n\nfunc.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_functional\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nnonfunc.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_non-functional\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nhandpump.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_handpump\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nusagelow.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_usagelow\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nusagehigh.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_usagehigh\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nrural.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_rural\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(func.map, nonfunc.map,handpump.map,usagelow.map,usagehigh.map,rural.map,\n             asp=NA, ncol=2)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#correlation-analysis",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#correlation-analysis",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Correlation Analysis",
    "text": "Correlation Analysis\n\nnga_wp_cor <- nga_wp %>%\n  st_drop_geometry() %>%\n  select(\"shapeName\",\"wpt functional\",\"wpt non-functional\", \"pct_functional\", \"pct_non-functional\", \"pct_handpump\",\"pct_usagelow\",\"pct_usagehigh\", \"pct_rural\")\ncluster_vars.cor = cor(nga_wp_cor[,2:8])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#hierarchy-cluster-analysis",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#hierarchy-cluster-analysis",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Hierarchy Cluster Analysis",
    "text": "Hierarchy Cluster Analysis\n\nExtracting clustering variables\n\ncluster_vars <- nga_wp_cor %>%\n  select(\"shapeName\",\"wpt functional\",\"wpt non-functional\",\"pct_functional\", \"pct_non-functional\", \"pct_handpump\",\"pct_usagelow\",\"pct_usagehigh\", \"pct_rural\")\nhead(cluster_vars,10)\n\n        shapeName wpt functional wpt non-functional pct_functional\n1       Aba North              7                  9      0.4117647\n2       Aba South             29                 35      0.4084507\n3          Abadam              0                  0      0.0000000\n4           Abaji             23                 34      0.4035088\n5            Abak             23                 25      0.4791667\n6       Abakaliki             82                 42      0.3519313\n7  Abeokuta North             16                 15      0.4705882\n8  Abeokuta South             72                 33      0.6050420\n9             Abi             79                 62      0.5197368\n10    Aboh-Mbaise             18                 26      0.2727273\n   pct_non-functional pct_handpump pct_usagelow pct_usagehigh  pct_rural\n1           0.5294118   0.11764706   0.17647059     0.8235294 0.00000000\n2           0.4929577   0.09859155   0.12676056     0.8732394 0.05633803\n3           0.0000000   0.00000000   0.00000000     0.0000000 0.00000000\n4           0.5964912   0.40350877   0.40350877     0.5964912 0.84210526\n5           0.5208333   0.08333333   0.08333333     0.9166667 0.83333333\n6           0.1802575   0.43776824   0.90557940     0.0944206 0.87553648\n7           0.4411765   0.14705882   0.23529412     0.7647059 0.20588235\n8           0.2773109   0.16806723   0.29411765     0.7058824 0.00000000\n9           0.4078947   0.59868421   0.67105263     0.3289474 0.95394737\n10          0.3939394   0.01515152   0.34848485     0.6515152 0.72727273\n\n\nNext, we need to change the rows by shape name instead of row number by using the code chunk below.\n\nrow.names(cluster_vars) <- cluster_vars$\"shapeName\"\nhead(cluster_vars,10)\n\n                    shapeName wpt functional wpt non-functional pct_functional\nAba North           Aba North              7                  9      0.4117647\nAba South           Aba South             29                 35      0.4084507\nAbadam                 Abadam              0                  0      0.0000000\nAbaji                   Abaji             23                 34      0.4035088\nAbak                     Abak             23                 25      0.4791667\nAbakaliki           Abakaliki             82                 42      0.3519313\nAbeokuta North Abeokuta North             16                 15      0.4705882\nAbeokuta South Abeokuta South             72                 33      0.6050420\nAbi                       Abi             79                 62      0.5197368\nAboh-Mbaise       Aboh-Mbaise             18                 26      0.2727273\n               pct_non-functional pct_handpump pct_usagelow pct_usagehigh\nAba North               0.5294118   0.11764706   0.17647059     0.8235294\nAba South               0.4929577   0.09859155   0.12676056     0.8732394\nAbadam                  0.0000000   0.00000000   0.00000000     0.0000000\nAbaji                   0.5964912   0.40350877   0.40350877     0.5964912\nAbak                    0.5208333   0.08333333   0.08333333     0.9166667\nAbakaliki               0.1802575   0.43776824   0.90557940     0.0944206\nAbeokuta North          0.4411765   0.14705882   0.23529412     0.7647059\nAbeokuta South          0.2773109   0.16806723   0.29411765     0.7058824\nAbi                     0.4078947   0.59868421   0.67105263     0.3289474\nAboh-Mbaise             0.3939394   0.01515152   0.34848485     0.6515152\n                pct_rural\nAba North      0.00000000\nAba South      0.05633803\nAbadam         0.00000000\nAbaji          0.84210526\nAbak           0.83333333\nAbakaliki      0.87553648\nAbeokuta North 0.20588235\nAbeokuta South 0.00000000\nAbi            0.95394737\nAboh-Mbaise    0.72727273\n\n\nNotice that the row number has been replaced into the township name.\nNow, we will delete the Shape Name field by using the code chunk below.\n\nnga_wp_clu <- select(cluster_vars, c(2:9))\nhead(nga_wp_clu, 10)\n\n               wpt functional wpt non-functional pct_functional\nAba North                   7                  9      0.4117647\nAba South                  29                 35      0.4084507\nAbadam                      0                  0      0.0000000\nAbaji                      23                 34      0.4035088\nAbak                       23                 25      0.4791667\nAbakaliki                  82                 42      0.3519313\nAbeokuta North             16                 15      0.4705882\nAbeokuta South             72                 33      0.6050420\nAbi                        79                 62      0.5197368\nAboh-Mbaise                18                 26      0.2727273\n               pct_non-functional pct_handpump pct_usagelow pct_usagehigh\nAba North               0.5294118   0.11764706   0.17647059     0.8235294\nAba South               0.4929577   0.09859155   0.12676056     0.8732394\nAbadam                  0.0000000   0.00000000   0.00000000     0.0000000\nAbaji                   0.5964912   0.40350877   0.40350877     0.5964912\nAbak                    0.5208333   0.08333333   0.08333333     0.9166667\nAbakaliki               0.1802575   0.43776824   0.90557940     0.0944206\nAbeokuta North          0.4411765   0.14705882   0.23529412     0.7647059\nAbeokuta South          0.2773109   0.16806723   0.29411765     0.7058824\nAbi                     0.4078947   0.59868421   0.67105263     0.3289474\nAboh-Mbaise             0.3939394   0.01515152   0.34848485     0.6515152\n                pct_rural\nAba North      0.00000000\nAba South      0.05633803\nAbadam         0.00000000\nAbaji          0.84210526\nAbak           0.83333333\nAbakaliki      0.87553648\nAbeokuta North 0.20588235\nAbeokuta South 0.00000000\nAbi            0.95394737\nAboh-Mbaise    0.72727273\n\n\n\n\nData Standardisation\nIn order to avoid the cluster analysis result is baised to clustering variables with large values, it is useful to standardise the input variables before performing cluster analysis\n\nMin-Max standardisation\nIn the code chunk below, normalize() of heatmaply package is used to stadardisation the clustering variables by using Min-Max method. The summary() is then used to display the summary statistics of the standardised clustering variables.\n\nnga_wp_clu.std <- normalize(cluster_vars)\nsummary(nga_wp_clu.std)\n\n  shapeName         wpt functional    wpt non-functional pct_functional  \n Length:774         Min.   :0.00000   Min.   :0.00000    Min.   :0.0000  \n Class :character   1st Qu.:0.02261   1st Qu.:0.04406    1st Qu.:0.3261  \n Mode  :character   Median :0.06051   Median :0.12230    Median :0.4741  \n                    Mean   :0.08957   Mean   :0.14962    Mean   :0.4984  \n                    3rd Qu.:0.11669   3rd Qu.:0.21853    3rd Qu.:0.6699  \n                    Max.   :1.00000   Max.   :1.00000    Max.   :1.0000  \n pct_non-functional  pct_handpump     pct_usagelow    pct_usagehigh   \n Min.   :0.0000     Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2105     1st Qu.:0.1670   1st Qu.:0.3968   1st Qu.:0.1220  \n Median :0.3505     Median :0.5099   Median :0.6703   Median :0.3127  \n Mean   :0.3592     Mean   :0.4873   Mean   :0.6078   Mean   :0.3754  \n 3rd Qu.:0.5076     3rd Qu.:0.7778   3rd Qu.:0.8735   3rd Qu.:0.5771  \n Max.   :1.0000     Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n   pct_rural     \n Min.   :0.0000  \n 1st Qu.:0.5727  \n Median :0.8645  \n Mean   :0.7271  \n 3rd Qu.:1.0000  \n Max.   :1.0000  \n\n\nNotice that the values range of the Min-max standardised clustering variables are 0-1 now.\n\n\nZ-score standardisation\nZ-score standardisation can be performed easily by using scale() of Base R. The code chunk below will be used to stadardisation the clustering variables by using Z-score method.\nI wont use Z score standardisation because not all variables come from normal distribution.\n\n\n\nVisualising the standardised clustering variables\n\nr <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nnga_clu_s_df <- as.data.frame(nga_wp_clu.std)\ns <- ggplot(data=nga_clu_s_df, \n       aes(x=`pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nggarrange(r, s,\n          ncol = 2,\n          nrow = 1)\n\n\n\n\n\nr <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nnga_clu_s_df <- as.data.frame(nga_wp_clu.std)\ns <- ggplot(data=nga_clu_s_df, \n       aes(x=`pct_functional`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nggarrange(r, s,\n          ncol = 2,\n          nrow = 1)\n\n\n\n\n\n\nComputing proximity matrix\nThe code chunk below is used to compute the proximity matrix using euclidean method.\n\nproxmat <- dist(nga_wp_clu, method = 'euclidean')\n\nThe code chunk below can then be used to list the content of proxmat for visual inspection.\n\nproxmat\n\n\n\nComputing hierarchical clustering\n\nhclust_ward <- hclust(proxmat, method = 'ward.D')\n\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\nSelecting the optimal clustering algorithm\nThe code chunk below will be used to compute the agglomerative coefficients of all hierarchical clustering algorithms.\nValues closer to 1 suggest strong clustering structure.\n\nm <- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) <- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac <- function(x) {\n  agnes(nga_wp_clu, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.9921897 0.9697080 0.9935520 0.9980737 \n\n\nWith reference to the output above, we can see that Ward's method, which value=0.998 is most closer to 1 provides the strongest clustering structure among the four methods assessed. Hence, in the subsequent analysis, only Ward's method will be used.\n\n\nDetermining Optimal Clusters\nThere are three commonly used methods to determine the optimal clusters, they are:\n\nElbow Method\nAverage Silhouette Method\nGap Statistic Method\n\n\nGap Statistic Method\n\nset.seed(12345)\ngap_stat <- clusGap(nga_wp_clu, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = nga_wp_clu, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --> Number of clusters (method 'firstmax'): 1\n          logW    E.logW       gap     SE.sim\n [1,] 9.759081 10.929294 1.1702127 0.01229128\n [2,] 9.530917 10.480479 0.9495622 0.03877423\n [3,] 9.233846 10.254240 1.0203943 0.02385991\n [4,] 9.174800 10.134953 0.9601525 0.01510867\n [5,] 8.979863 10.037263 1.0573998 0.01251681\n [6,] 8.904423  9.944337 1.0399141 0.01385733\n [7,] 8.875087  9.856673 0.9815857 0.01630355\n [8,] 8.818574  9.780783 0.9622091 0.01593100\n [9,] 8.731714  9.711495 0.9797818 0.01720114\n[10,] 8.675618  9.650590 0.9749730 0.01810535\n\n\n\nfviz_gap_stat(gap_stat)\n\n\n\n\nWith reference to the gap statistic graph above, the recommended number of cluster to retain is 1. However, it is not logical to retain only one cluster. By examine the gap statistic graph, the 5-cluster gives the largest gap statistic and should be the next best cluster to pick.\n\n\n\nInterpreting the dendrograms\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 5, \n            border = 2:5)\n\n\n\n\n\n\nVisually-driven hierarchical clustering analysis\nWith heatmaply, we are able to build both highly interactive cluster heatmap or static cluster heatmap.\n\nTransforming the data frame into a matrix\n\nnga_wp_clu_mat <- data.matrix(nga_wp_clu)\n\n\n\nPlotting interactive cluster heatmap using heatmaply()\n\nheatmaply(normalize(nga_wp_clu_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Nigeria by Water point indicators\",\n          xlab = \"Water point indicators Indicators\",\n          ylab = \"Shape Name of Nigeria\"\n          )\n\n\n\n\n\n\n\n\nMapping the clusters formed\n\ngroups <- as.factor(cutree(hclust_ward, k=5))\n\n\nnga_wp_cluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\nqtm(nga_wp_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#spatially-constrained-clustering-skater-approach",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#spatially-constrained-clustering-skater-approach",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Spatially Constrained Clustering: SKATER approach",
    "text": "Spatially Constrained Clustering: SKATER approach\n\nConverting into SpatialPolygonsDataFrame\nFirst, I convert nga_wp into SpatialPolygonsDataFrame. This is because SKATER function only support sp objects such as SpatialPolygonDataFrame.\nThe code chunk below uses as_Spatial() of sf package to convert nga_wpinto a SpatialPolygonDataFrame called nga_sp.\n\nnga_sp <- as_Spatial(nga_wp)\n\n\n\nComputing Neighbour List\npoly2nb\n\nnga.nb <- poly2nb(nga_sp,snap=1000)\nsummary(nga.nb)\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\n\nplot(nga_sp, \n     border=grey(.5))\nplot(nga.nb, \n     coordinates(nga_sp), \n     \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\n\n\nComputing minimum spanning tree\n\nCalculating edge costs\n\n#lcosts <- nbcosts(nga.nb, nga_wp_clu)\n\n\n#nga.w <- nb2listw(nga.nb,                  lcosts,       style=\"B\")\n#summary(nga.w)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#spatially-constrained-clustering-clustgeo-method",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#spatially-constrained-clustering-clustgeo-method",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Spatially Constrained Clustering: ClustGeo Method",
    "text": "Spatially Constrained Clustering: ClustGeo Method\n\nWard-like hierarchical clustering: ClustGeo\nTo perform non-spatially constrained hierarchical clustering, we only need to provide the function a dissimilarity matrix as shown in the code chunk below\n\nnongeo_cluster <- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 5, \n            border = 2:5)\n\n\n\n\n\nMapping the clusters formed\n\ngroups <- as.factor(cutree(nongeo_cluster, k=5))\n\n\nnga_wp_ngeo_cluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(nga_wp_ngeo_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\nSpatially Constrained Hierarchical Clustering\nBefore we can performed spatially constrained hierarchical clustering, a spatial distance matrix will be derived by using st_distance() of sf package.\n\ndist <- st_distance(nga_wp, nga_wp)\ndistmat <- as.dist(dist)\n\nNotice that as.dist() is used to convert the data frame into matrix.\nNext, choicealpha() will be used to determine a suitable value for the mixing parameter alpha as shown in the code chunk below.\n\ncr <- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=5, graph = TRUE)\n\n\n\n\n\n\n\nWith reference to the graphs above, alpha = 0.1 will be used as shown in the code chunk below.\n\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.1)\n\n\ngroups <- as.factor(cutree(clustG, k=5))\n\n\nnga_wp_Gcluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(nga_wp_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 1214.html#visual-interpretation-of-clusters",
    "href": "Take-home Exercise/Take-home Ex2 1214.html#visual-interpretation-of-clusters",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Visual Interpretation of Clusters",
    "text": "Visual Interpretation of Clusters\n\nMultivariate Visualisation\nPast studies shown that parallel coordinate plot can be used to reveal clustering variables by cluster very effectively. In the code chunk below, ggparcoord() of GGally package\n\nggparcoord(data = nga_wp_ngeo_cluster, \n           columns = c(14:19), \n           groupColumn = \"CLUSTER\",\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of water points Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30)) +\n  scale_color_viridis(option = \"D\", discrete=TRUE)\n\n\n\n\nThe parallel coordinate plot above reveals that\nwe can also compute the summary statistics such as mean, median, sd, etc to complement the visual interpretation.\nIn the code chunk below, group_by() and summarise() of dplyr are used to derive mean values of the clustering variables.\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(mean_pct_functional = mean(pct_functional),\n            mean_pct_non.functional = mean(pct_non.functional),\n            mean_pct_handpump = mean(pct_handpump),\n            mean_pct_usagelow = mean(pct_usagelow),\n            mean_pct_usagehigh = mean(pct_usagehigh),\n            mean_pct_rural = mean(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER mean_pct_functional mean_pct_non.fun…¹ mean_…² mean_…³ mean_…⁴ mean_…⁵\n  <chr>                 <dbl>              <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                     0.404              0.369   0.277   0.450  0.511    0.650\n2 2                     0.526              0.381   0.670   0.768  0.232    0.802\n3 3                     0.563              0.362   0.579   0.656  0.344    0.749\n4 4                     0.766              0.210   0.832   0.857  0.143    0.846\n5 5                     0.868              0.132   0.917   0.923  0.0772   0.945\n# … with abbreviated variable names ¹​mean_pct_non.functional,\n#   ²​mean_pct_handpump, ³​mean_pct_usagelow, ⁴​mean_pct_usagehigh,\n#   ⁵​mean_pct_rural\n\n\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(median_pct_functional = median(pct_functional),\n            median_pct_non.functional = median(pct_non.functional),\n            median_pct_handpump = median(pct_handpump),\n            median_pct_usagelow = median(pct_usagelow),\n            median_pct_usagehigh = median(pct_usagehigh),\n            median_pct_rural = median(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER median_pct_functional median_pct_non…¹ media…² media…³ media…⁴ media…⁵\n  <chr>                   <dbl>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                       0.373            0.356   0.158   0.462  0.5      0.788\n2 2                       0.501            0.383   0.674   0.808  0.192    0.893\n3 3                       0.522            0.363   0.614   0.703  0.297    0.904\n4 4                       0.783            0.199   0.904   0.922  0.0782   0.912\n5 5                       0.872            0.128   0.943   0.958  0.0421   1    \n# … with abbreviated variable names ¹​median_pct_non.functional,\n#   ²​median_pct_handpump, ³​median_pct_usagelow, ⁴​median_pct_usagehigh,\n#   ⁵​median_pct_rural\n\n\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(sd_pct_functional = sd(pct_functional),\n            sd_pct_non.functional = sd(pct_non.functional),\n            sd_pct_handpump = sd(pct_handpump),\n            sd_pct_usagelow = sd(pct_usagelow),\n            sd_pct_usagehigh = sd(pct_usagehigh),\n            sd_pct_rural = sd(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER sd_pct_functional sd_pct_non.functio…¹ sd_pc…² sd_pc…³ sd_pc…⁴ sd_pc…⁵\n  <chr>               <dbl>                <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                  0.253                0.249    0.295   0.307   0.311   0.357\n2 2                  0.183                0.156    0.217   0.180   0.180   0.256\n3 3                  0.208                0.184    0.263   0.256   0.256   0.326\n4 4                  0.148                0.123    0.193   0.186   0.186   0.230\n5 5                  0.0544               0.0544   0.114   0.115   0.115   0.121\n# … with abbreviated variable names ¹​sd_pct_non.functional, ²​sd_pct_handpump,\n#   ³​sd_pct_usagelow, ⁴​sd_pct_usagehigh, ⁵​sd_pct_rural"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#getting-started",
    "href": "Take-home Exercise/Take-home Ex2 final.html#getting-started",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(sf,spdep, tmap, tidyverse,dplyr, funModeling,rgdal,  ClustGeo, ggpubr, cluster, factoextra, NbClust,heatmaply, corrplot, psych, GGally)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#data-import",
    "href": "Take-home Exercise/Take-home Ex2 final.html#data-import",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "2 Data Import",
    "text": "2 Data Import\n\nImport water point data\n\nwp <- read_csv(\"Take home 2 data/WPdx.csv\",show_col_types = FALSE) %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\n\nI use show_col_types = FALSE to avoid warning message.\nTo extract Nigeria data I use filter()\n\n\nwp_nga <- read_rds(\"Take home 2 data/wp_nga.rds\") \n\n\nwp_nga <- wp_nga %>%\n  select(`lat_deg`, `lon_deg`, `X_water_tec`, `clean_adm2`, `status_cle`, `usage_cap`, `is_urban`,`geometry`)\n\n\nwrite_rds(wp_nga,\"Take home 2 data/wp_nga mini.rds\")\n\n\nwp_nga <- read_rds(\"Take home 2 data/wp_nga mini.rds\") \n\n\nConvert wkt data\nColumn ‘New Georaferenced Column’ represent spatial data in a textual format. this kind of text file is popularly known as Well Known Text in short wkt.\n\nTwo steps will be used to convert an asptial data file in wkt format into a sf data frame by using sf.\nFirst, st_as_sfc() of sf package is used to derive a new field called Geometry as shown in the code chunk below.\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\n\nNow we get the new column called Geometry.\n\nNext, st_sf() will be used to convert the tibble data frame into sf data frame.\n\nwp_sf <- st_sf(wp_nga, crs=4326) \n\nWhen the process completed, a new sf data frame called wp_sf will be created.\n\n\n\nImporting Nigeria LGA level boundary data\n\nnga<- st_read(dsn=\"Take home 2 data\",\n             layer=\"geoBoundaries-NGA-ADM2\",\n             crs=4326)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `D:\\Xu-Siyi\\ISSS624\\Take-home Exercise\\Take home 2 data' using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\nPoint in Polygon Overlay\nTo make sure the data accuracy, we are going to use a geoprocessing function (or commonly know as GIS analysis) called point-in-polygon overlay to transfer the attribute information in nga sf data frame into wp_sf data frame.\n\nwp_sf <- st_join(wp_sf, nga)%>%\n  mutate(status_cle = replace_na(status_cle, \"Unknown\")) %>%\n  mutate(X_water_tec = replace_na(X_water_tec, \"Unknown\"))\n\nNow we have column called “shapeName”, which is the LGA name of Nigeria water point."
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#data-wrangling",
    "href": "Take-home Exercise/Take-home Ex2 final.html#data-wrangling",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "3 Data Wrangling",
    "text": "3 Data Wrangling\nThe reference of the code chunk in Data Wrangling part: Ong Zhi Rong Jordan\n\nChecking of duplicated area name\nWe use duplicate function to retrieve all the shapeName that has duplicates and store it in a list. From the result below, we identified 12 shapeNames that are duplicates.\n\nnga <- (nga[order(nga$shapeName), ])\n\nduplicate_area <- nga$shapeName[ nga$shapeName %in% nga$shapeName[duplicated(nga$shapeName)] ]\n\nduplicate_area\n\n [1] \"Bassa\"    \"Bassa\"    \"Ifelodun\" \"Ifelodun\" \"Irepodun\" \"Irepodun\"\n [7] \"Nasarawa\" \"Nasarawa\" \"Obi\"      \"Obi\"      \"Surulere\" \"Surulere\"\n\n\nNext, we will leverage on the interactive viewer of tmap to check the location of each area. Through the use of Google, we are able to retrieve the actual name and state of the areas. The table below shows the index and the actual name of the area.\n\n\n\nIndex\nActual Area Name\n\n\n\n\n94\nBassa (Kogi)\n\n\n95\nBassa (Plateau)\n\n\n304\nIfelodun (Kwara)\n\n\n305\nIfelodun (Osun)\n\n\n355\nIrepodun (Kwara)\n\n\n356\nIrepodun (Osun)\n\n\n518\nNassarawa\n\n\n546\nObi (Benue)\n\n\n547\nObi(Nasarawa)\n\n\n693\nSurulere (lagos)\n\n\n694\nSurulere (Oyo)\n\n\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(nga[nga$shapeName %in% duplicate_area,]) +\n  tm_polygons()\n\n\n\n\n\n\nMake sure the tmap mode set back to plot\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nWe will now access the individual index of the nga data frame and change the value. Lastly, we use the length() function to ensure there is no more duplicated shapeName.\n\nnga$shapeName[c(94,95,304,305,355,356,519,546,547,693,694)] <- c(\"Bassa (Kogi)\",\"Bassa (Plateau)\",\n                                                                               \"Ifelodun (Kwara)\",\"Ifelodun (Osun)\",\n                                                                               \"Irepodun (Kwara)\",\"Irepodun (Osun)\",\n                                                                               \"Nassarawa\",\"Obi (Benue)\",\"Obi(Nasarawa)\",\n                                                                               \"Surulere (Lagos)\",\"Surulere (Oyo)\")\n\nlength((nga$shapeName[ nga$shapeName %in% nga$shapeName[duplicated(nga$shapeName)] ]))\n\n[1] 0\n\n\n\n\nProjection of sf dataframe\n\nwp_sf <- st_as_sf(nga, coords = c(\"long\", \"lat\"),  crs = 4326)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#derive-new-variables",
    "href": "Take-home Exercise/Take-home Ex2 final.html#derive-new-variables",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "4 Derive new variables",
    "text": "4 Derive new variables\n\n\n\n\n\n\nTake-home Exercise 2 Objective\n\n\n\nIn this take-home exercise you are required to regionalise Nigeria by using, but not limited to the following measures:\n\nTotal number of functional water points\nTotal number of nonfunctional water points\nPercentage of functional water points\nPercentage of non-functional water points\nPercentage of main water point technology (i.e. Hand Pump)\nPercentage of usage capacity (i.e. < 1000, >=1000)\nPercentage of rural water points\n\n\n\nIn this section, we will extract the water point records by using classes in status_cle field.\nin this code chunk below, filter() is used to select functional water points\n\nwpt_functional <- wp_sf %>%\n  filter(status_cle %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nIn the code chunk below, filter() of dplyr is used to select non-functional water points.\n\nwpt_nonfunctional <- wp_sf %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\nIn the code chunk below, filter() of dplyr is used to select water points with unknown status.\n\nwpt_unknown <- wp_sf %>%\n  filter(status_cle == \"Unknown\")\n\n\nwpt_handpump <- wp_sf %>%\n  filter(X_water_tec == \"Hand Pump\")\n\n\nusage_low <- wp_sf %>%\n  filter(`usage_cap` < 1000)\n\n\nusage_high <- wp_sf %>%\n  filter(`usage_cap` >= 1000)\n\n\nwpt_rural<-wp_sf %>%\n  filter(`is_urban` == \"False\")\n\nThen we add new variable called total wpt, wpt functional, wpt non-functional, wpt unknown, wpt handpump, usage low, usage high, `wpt rural into nga dataframe.\n\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_sf))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown)))%>%\n  mutate(`wpt handpump` = lengths(\n    st_intersects(nga, wpt_handpump)))%>%\n  mutate(`usage low` = lengths(\n    st_intersects(nga, usage_low)))%>%\n  mutate(`usage high` = lengths(\n    st_intersects(nga, usage_high)))%>%\n  mutate(`wpt rural` = lengths(\n    st_intersects(nga, wpt_rural)))\n\nThen we can calculate the percentage of functional water point and non-functional water points, the percentage of Hand Pump, the percentage of usage capacity and the percentage of rural water points\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`) %>%\n  mutate(`pct_handpump` = `wpt handpump`/`total wpt`) %>%\n  mutate(`pct_usagelow` = `usage low`/`total wpt`) %>%\n  mutate(`pct_usagehigh` = `usage high`/`total wpt`) %>%\n  mutate(`pct_rural` = `wpt rural`/`total wpt`)\n\nThings to learn from the code chunk above:\nmutate() of dplyr package is used to derive two fields namely pct_functional and pct_non-functional.\nThere are some NaN field in the nga_wp because of the zero number of total water point. I replace them with zero value.\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = replace_na(pct_functional, 0)) %>%\n  mutate(`pct_non-functional` = replace_na(`pct_non-functional`, 0)) %>%\n  mutate(pct_handpump = replace_na(pct_handpump, 0)) %>%\n  mutate(pct_usagelow = replace_na(pct_usagelow, 0)) %>%\n  mutate(pct_usagehigh = replace_na(pct_usagehigh, 0)) %>%\n  mutate(pct_rural = replace_na(pct_rural, 0))\n\n\nwp_sf <- st_transform(wp_sf, crs = 26391)\n\nst_crs (wp_sf)\n\nCoordinate Reference System:\n  User input: EPSG:26391 \n  wkt:\nPROJCRS[\"Minna / Nigeria West Belt\",\n    BASEGEOGCRS[\"Minna\",\n        DATUM[\"Minna\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4263]],\n    CONVERSION[\"Nigeria West Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",4,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",4.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.99975,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",230738.26,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Nigeria - onshore west of 6°30'E, onshore and offshore shelf.\"],\n        BBOX[3.57,2.69,13.9,6.5]],\n    ID[\"EPSG\",26391]]\n\n\nNow, I have the tidy sf data table subsequent analysis and save the sf data table into rds format. nga_wp.rds, which is the combination of the geospatial and aspatial data.\n\nwrite_rds(nga_wp, \"Take home 2 data/nga_wp.rds\")\nwrite_rds(wp_sf, \"Take home 2 data/wp_sf.rds\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#exploratory-data-analysis-eda",
    "href": "Take-home Exercise/Take-home Ex2 final.html#exploratory-data-analysis-eda",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "5 Exploratory Data Analysis (EDA)",
    "text": "5 Exploratory Data Analysis (EDA)\n\nnga_wp <- read_rds(\"Take home 2 data/nga_wp.rds\")\nwp_sf <- read_rds(\"Take home 2 data/wp_sf.rds\")\n\n\nEDA using statistical graphics\nFirstly, I plot the distribution of the variables (i.e. Number of functional water point) by using bar graph.\n\nfreq(data=wp_sf, \n     input = 'status_cle')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n                        status_cle frequency percentage cumulative_perc\n1                       Functional     45883      48.29           48.29\n2                   Non-Functional     29385      30.93           79.22\n3                          Unknown     10656      11.22           90.44\n4      Functional but needs repair      4579       4.82           95.26\n5 Non-Functional due to dry season      2403       2.53           97.79\n6        Functional but not in use      1686       1.77           99.56\n7         Abandoned/Decommissioned       234       0.25           99.81\n8                        Abandoned       175       0.18           99.99\n9 Non functional due to dry season         7       0.01          100.00\n\n\nFrom the graph above we can see there are 48.29% water points in Nigeria are functional. 30.93% water points are non-functional and 11.22% water points are unknown.\n\nfreq(data=wp_sf, \n     input = 'X_water_tec')\n\n\n\n\n      X_water_tec frequency percentage cumulative_perc\n1       Hand Pump     58755      61.84           61.84\n2 Mechanized Pump     25644      26.99           88.83\n3         Unknown     10055      10.58           99.41\n4        Tapstand       553       0.58           99.99\n5 Rope and Bucket         1       0.00          100.00\n\n\nFrom the above graph we can see that 61.84% of all water points in Nigeria are hand pump, 26.99% are mechanized pump and 10.58% are unknown.\n\nfreq(data=wp_sf, \n     input = 'is_urban')\n\n\n\n\n  is_urban frequency percentage cumulative_perc\n1    False     75444      79.41           79.41\n2     True     19564      20.59          100.00\n\n\nFrom the above graph we can see that 79.14% of all water points in Nigeria are rural, 20.59% are urban.\nSecondly, I plot the distribution of the variables (i.e. Number of functional water point) by using historgram graph.\n\npct_functional <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_nonfunctional <- ggplot(data=nga_wp, \n             aes(x= `pct_non-functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_handpump <- ggplot(data=nga_wp, \n           aes(x= `pct_handpump`)) +\ngeom_histogram(bins=20, \n               color=\"black\", \n                 fill=\"light blue\")\n\npct_usagelow <- ggplot(data=nga_wp, \n             aes(x= `pct_usagelow`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_usagehigh <- ggplot(data=nga_wp, \n             aes(x= `pct_usagehigh`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\npct_rural <- ggplot(data=nga_wp, \n             aes(x= `pct_rural`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\nggarrange(pct_functional, pct_nonfunctional,pct_handpump, pct_usagehigh, pct_usagelow, pct_rural, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\n\nEDA using choropleth map\nI prepared a choropleth map to have a quick look at the distribution of water point in Nigeria\nThe code chunks below are used to prepare the choroplethby using the qtm() function of tmap package.\n\nqtm(nga_wp, \"total wpt\")\n\n\n\n\n\nfunc.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_functional\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nnonfunc.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_non-functional\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nhandpump.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_handpump\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nusagelow.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_usagelow\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nusagehigh.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_usagehigh\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\nrural.map <- tm_shape(nga_wp) + \n  tm_fill(col = \"pct_rural\",\n          n = 5,\n          style = \"jenks\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(func.map, nonfunc.map,handpump.map,usagelow.map,usagehigh.map,rural.map,\n             asp=NA, ncol=2)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#correlation-analysis",
    "href": "Take-home Exercise/Take-home Ex2 final.html#correlation-analysis",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "6 Correlation Analysis",
    "text": "6 Correlation Analysis\n\nnga_wp_cor <- nga_wp %>%\n  st_drop_geometry() %>%\n  select(\"shapeName\",\"wpt functional\",\"wpt non-functional\", \"pct_functional\", \"pct_non-functional\", \"pct_handpump\",\"pct_usagelow\",\"pct_usagehigh\", \"pct_rural\")\ncluster_vars.cor = cor(nga_wp_cor[,2:8])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#hierarchy-cluster-analysis",
    "href": "Take-home Exercise/Take-home Ex2 final.html#hierarchy-cluster-analysis",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "7 Hierarchy Cluster Analysis",
    "text": "7 Hierarchy Cluster Analysis\n\nExtracting clustering variables\n\ncluster_vars <- nga_wp_cor %>%\n  select(\"shapeName\",\"wpt functional\",\"wpt non-functional\",\"pct_functional\", \"pct_non-functional\", \"pct_handpump\",\"pct_usagelow\",\"pct_usagehigh\", \"pct_rural\")\nhead(cluster_vars,10)\n\n        shapeName wpt functional wpt non-functional pct_functional\n1       Aba North              7                  9      0.4117647\n2       Aba South             29                 35      0.4084507\n3          Abadam              0                  0      0.0000000\n4           Abaji             23                 34      0.4035088\n5            Abak             23                 25      0.4791667\n6       Abakaliki             82                 42      0.3519313\n7  Abeokuta North             16                 15      0.4705882\n8  Abeokuta South             72                 33      0.6050420\n9             Abi             79                 62      0.5197368\n10    Aboh-Mbaise             18                 26      0.2727273\n   pct_non-functional pct_handpump pct_usagelow pct_usagehigh  pct_rural\n1           0.5294118   0.11764706   0.17647059     0.8235294 0.00000000\n2           0.4929577   0.09859155   0.12676056     0.8732394 0.05633803\n3           0.0000000   0.00000000   0.00000000     0.0000000 0.00000000\n4           0.5964912   0.40350877   0.40350877     0.5964912 0.84210526\n5           0.5208333   0.08333333   0.08333333     0.9166667 0.83333333\n6           0.1802575   0.43776824   0.90557940     0.0944206 0.87553648\n7           0.4411765   0.14705882   0.23529412     0.7647059 0.20588235\n8           0.2773109   0.16806723   0.29411765     0.7058824 0.00000000\n9           0.4078947   0.59868421   0.67105263     0.3289474 0.95394737\n10          0.3939394   0.01515152   0.34848485     0.6515152 0.72727273\n\n\nNext, we need to change the rows by shape name instead of row number by using the code chunk below.\n\nrow.names(cluster_vars) <- cluster_vars$\"shapeName\"\nhead(cluster_vars,10)\n\n                    shapeName wpt functional wpt non-functional pct_functional\nAba North           Aba North              7                  9      0.4117647\nAba South           Aba South             29                 35      0.4084507\nAbadam                 Abadam              0                  0      0.0000000\nAbaji                   Abaji             23                 34      0.4035088\nAbak                     Abak             23                 25      0.4791667\nAbakaliki           Abakaliki             82                 42      0.3519313\nAbeokuta North Abeokuta North             16                 15      0.4705882\nAbeokuta South Abeokuta South             72                 33      0.6050420\nAbi                       Abi             79                 62      0.5197368\nAboh-Mbaise       Aboh-Mbaise             18                 26      0.2727273\n               pct_non-functional pct_handpump pct_usagelow pct_usagehigh\nAba North               0.5294118   0.11764706   0.17647059     0.8235294\nAba South               0.4929577   0.09859155   0.12676056     0.8732394\nAbadam                  0.0000000   0.00000000   0.00000000     0.0000000\nAbaji                   0.5964912   0.40350877   0.40350877     0.5964912\nAbak                    0.5208333   0.08333333   0.08333333     0.9166667\nAbakaliki               0.1802575   0.43776824   0.90557940     0.0944206\nAbeokuta North          0.4411765   0.14705882   0.23529412     0.7647059\nAbeokuta South          0.2773109   0.16806723   0.29411765     0.7058824\nAbi                     0.4078947   0.59868421   0.67105263     0.3289474\nAboh-Mbaise             0.3939394   0.01515152   0.34848485     0.6515152\n                pct_rural\nAba North      0.00000000\nAba South      0.05633803\nAbadam         0.00000000\nAbaji          0.84210526\nAbak           0.83333333\nAbakaliki      0.87553648\nAbeokuta North 0.20588235\nAbeokuta South 0.00000000\nAbi            0.95394737\nAboh-Mbaise    0.72727273\n\n\nNotice that the row number has been replaced into the township name.\nNow, we will delete the Shape Name field by using the code chunk below.\n\nnga_wp_clu <- select(cluster_vars, c(2:9))\nhead(nga_wp_clu, 10)\n\n               wpt functional wpt non-functional pct_functional\nAba North                   7                  9      0.4117647\nAba South                  29                 35      0.4084507\nAbadam                      0                  0      0.0000000\nAbaji                      23                 34      0.4035088\nAbak                       23                 25      0.4791667\nAbakaliki                  82                 42      0.3519313\nAbeokuta North             16                 15      0.4705882\nAbeokuta South             72                 33      0.6050420\nAbi                        79                 62      0.5197368\nAboh-Mbaise                18                 26      0.2727273\n               pct_non-functional pct_handpump pct_usagelow pct_usagehigh\nAba North               0.5294118   0.11764706   0.17647059     0.8235294\nAba South               0.4929577   0.09859155   0.12676056     0.8732394\nAbadam                  0.0000000   0.00000000   0.00000000     0.0000000\nAbaji                   0.5964912   0.40350877   0.40350877     0.5964912\nAbak                    0.5208333   0.08333333   0.08333333     0.9166667\nAbakaliki               0.1802575   0.43776824   0.90557940     0.0944206\nAbeokuta North          0.4411765   0.14705882   0.23529412     0.7647059\nAbeokuta South          0.2773109   0.16806723   0.29411765     0.7058824\nAbi                     0.4078947   0.59868421   0.67105263     0.3289474\nAboh-Mbaise             0.3939394   0.01515152   0.34848485     0.6515152\n                pct_rural\nAba North      0.00000000\nAba South      0.05633803\nAbadam         0.00000000\nAbaji          0.84210526\nAbak           0.83333333\nAbakaliki      0.87553648\nAbeokuta North 0.20588235\nAbeokuta South 0.00000000\nAbi            0.95394737\nAboh-Mbaise    0.72727273\n\n\n\n\nData Standardisation\nIn order to avoid the cluster analysis result is baised to clustering variables with large values, it is useful to standardise the input variables before performing cluster analysis\n\nMin-Max standardisation\nIn the code chunk below, normalize() of heatmaply package is used to stadardisation the clustering variables by using Min-Max method. The summary() is then used to display the summary statistics of the standardised clustering variables.\n\nnga_wp_clu.std <- normalize(cluster_vars)\nsummary(nga_wp_clu.std)\n\n  shapeName         wpt functional    wpt non-functional pct_functional  \n Length:774         Min.   :0.00000   Min.   :0.00000    Min.   :0.0000  \n Class :character   1st Qu.:0.02261   1st Qu.:0.04406    1st Qu.:0.3261  \n Mode  :character   Median :0.06051   Median :0.12230    Median :0.4741  \n                    Mean   :0.08957   Mean   :0.14962    Mean   :0.4984  \n                    3rd Qu.:0.11669   3rd Qu.:0.21853    3rd Qu.:0.6699  \n                    Max.   :1.00000   Max.   :1.00000    Max.   :1.0000  \n pct_non-functional  pct_handpump     pct_usagelow    pct_usagehigh   \n Min.   :0.0000     Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2105     1st Qu.:0.1670   1st Qu.:0.3968   1st Qu.:0.1220  \n Median :0.3505     Median :0.5099   Median :0.6703   Median :0.3127  \n Mean   :0.3592     Mean   :0.4873   Mean   :0.6078   Mean   :0.3754  \n 3rd Qu.:0.5076     3rd Qu.:0.7778   3rd Qu.:0.8735   3rd Qu.:0.5771  \n Max.   :1.0000     Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n   pct_rural     \n Min.   :0.0000  \n 1st Qu.:0.5727  \n Median :0.8645  \n Mean   :0.7271  \n 3rd Qu.:1.0000  \n Max.   :1.0000  \n\n\nNotice that the values range of the Min-max standardised clustering variables are 0-1 now.\n\n\nZ-score standardisation\nZ-score standardisation can be performed easily by using scale() of Base R. The code chunk below will be used to stadardisation the clustering variables by using Z-score method.\nI wont use Z score standardisation because not all variables come from normal distribution.\n\n\n\nVisualising the standardised clustering variables\n\nr <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nnga_clu_s_df <- as.data.frame(nga_wp_clu.std)\ns <- ggplot(data=nga_clu_s_df, \n       aes(x=`pct_functional`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nggarrange(r, s,\n          ncol = 2,\n          nrow = 1)\n\n\n\n\n\nr <- ggplot(data=nga_wp, \n             aes(x= `pct_functional`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nnga_clu_s_df <- as.data.frame(nga_wp_clu.std)\ns <- ggplot(data=nga_clu_s_df, \n       aes(x=`pct_functional`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nggarrange(r, s,\n          ncol = 2,\n          nrow = 1)\n\n\n\n\n\n\nComputing proximity matrix\nThe code chunk below is used to compute the proximity matrix using euclidean method.\n\nproxmat <- dist(nga_wp_clu, method = 'euclidean')\n\nThe code chunk below can then be used to list the content of proxmat for visual inspection.\n\nproxmat\n\n\n\nComputing hierarchical clustering\n\nhclust_ward <- hclust(proxmat, method = 'ward.D')\n\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\nSelecting the optimal clustering algorithm\nThe code chunk below will be used to compute the agglomerative coefficients of all hierarchical clustering algorithms.\nValues closer to 1 suggest strong clustering structure.\n\nm <- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) <- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac <- function(x) {\n  agnes(nga_wp_clu, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.9921897 0.9697080 0.9935520 0.9980737 \n\n\nWith reference to the output above, we can see that Ward’s method, which value=0.998 is most closer to 1 provides the strongest clustering structure among the four methods assessed. Hence, in the subsequent analysis, only Ward’s method will be used.\n\n\nDetermining Optimal Clusters\nThere are three commonly used methods to determine the optimal clusters, they are:\n\nElbow Method\nAverage Silhouette Method\nGap Statistic Method\n\n\nGap Statistic Method\n\nset.seed(12345)\ngap_stat <- clusGap(nga_wp_clu, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = nga_wp_clu, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --> Number of clusters (method 'firstmax'): 1\n          logW    E.logW       gap     SE.sim\n [1,] 9.759081 10.929294 1.1702127 0.01229128\n [2,] 9.530917 10.480479 0.9495622 0.03877423\n [3,] 9.233846 10.254240 1.0203943 0.02385991\n [4,] 9.174800 10.134953 0.9601525 0.01510867\n [5,] 8.979863 10.037263 1.0573998 0.01251681\n [6,] 8.904423  9.944337 1.0399141 0.01385733\n [7,] 8.875087  9.856673 0.9815857 0.01630355\n [8,] 8.818574  9.780783 0.9622091 0.01593100\n [9,] 8.731714  9.711495 0.9797818 0.01720114\n[10,] 8.675618  9.650590 0.9749730 0.01810535\n\n\n\nfviz_gap_stat(gap_stat)\n\n\n\n\nWith reference to the gap statistic graph above, the recommended number of cluster to retain is 1. However, it is not logical to retain only one cluster. By examine the gap statistic graph, the 5-cluster gives the largest gap statistic and should be the next best cluster to pick.\n\n\n\nInterpreting the dendrograms\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 5, \n            border = 2:5)\n\n\n\n\n\n\nVisually-driven hierarchical clustering analysis\nWith heatmaply, we are able to build both highly interactive cluster heatmap or static cluster heatmap.\n\nTransforming the data frame into a matrix\n\nnga_wp_clu_mat <- data.matrix(nga_wp_clu)\n\n\n\nPlotting interactive cluster heatmap using heatmaply()\n\nheatmaply(normalize(nga_wp_clu_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Nigeria by Water point indicators\",\n          xlab = \"Water point indicators Indicators\",\n          ylab = \"Shape Name of Nigeria\"\n          )\n\n\n\n\n\n\n\n\nMapping the clusters formed\n\ngroups <- as.factor(cutree(hclust_ward, k=5))\n\n\nnga_wp_cluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\nqtm(nga_wp_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#spatially-constrained-clustering-skater-approach",
    "href": "Take-home Exercise/Take-home Ex2 final.html#spatially-constrained-clustering-skater-approach",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "8 Spatially Constrained Clustering: SKATER approach",
    "text": "8 Spatially Constrained Clustering: SKATER approach\n\nConverting into SpatialPolygonsDataFrame\nFirst, I convert nga_wp into SpatialPolygonsDataFrame. This is because SKATER function only support sp objects such as SpatialPolygonDataFrame.\nThe code chunk below uses as_Spatial() of sf package to convert nga_wpinto a SpatialPolygonDataFrame called nga_sp.\n\nnga_sp <- as_Spatial(nga_wp)\n\n\n\nComputing Neighbour List\npoly2nb\n\nnga.nb <- poly2nb(nga_sp,snap=1000)\nsummary(nga.nb)\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\n\nplot(nga_sp, \n     border=grey(.5))\nplot(nga.nb, \n     coordinates(nga_sp), \n     \n     col=\"blue\", \n     add=TRUE)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#spatially-constrained-clustering-clustgeo-method",
    "href": "Take-home Exercise/Take-home Ex2 final.html#spatially-constrained-clustering-clustgeo-method",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "9 Spatially Constrained Clustering: ClustGeo Method",
    "text": "9 Spatially Constrained Clustering: ClustGeo Method\n\nWard-like hierarchical clustering: ClustGeo\nTo perform non-spatially constrained hierarchical clustering, we only need to provide the function a dissimilarity matrix as shown in the code chunk below\n\nnongeo_cluster <- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 5, \n            border = 2:5)\n\n\n\n\n\nMapping the clusters formed\n\ngroups <- as.factor(cutree(nongeo_cluster, k=5))\n\n\nnga_wp_ngeo_cluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(nga_wp_ngeo_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\nSpatially Constrained Hierarchical Clustering\nBefore we can performed spatially constrained hierarchical clustering, a spatial distance matrix will be derived by using st_distance() of sf package.\n\ndist <- st_distance(nga_wp, nga_wp)\ndistmat <- as.dist(dist)\n\nNotice that as.dist() is used to convert the data frame into matrix.\nNext, choicealpha() will be used to determine a suitable value for the mixing parameter alpha as shown in the code chunk below.\n\ncr <- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=5, graph = TRUE)\n\n\n\n\n\n\n\nWith reference to the graphs above, alpha = 0.1 will be used as shown in the code chunk below.\n\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.1)\n\n\ngroups <- as.factor(cutree(clustG, k=5))\n\n\nnga_wp_Gcluster <- cbind(nga_wp, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(nga_wp_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html#visual-interpretation-of-clusters",
    "href": "Take-home Exercise/Take-home Ex2 final.html#visual-interpretation-of-clusters",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "10 Visual Interpretation of Clusters",
    "text": "10 Visual Interpretation of Clusters\n\nMultivariate Visualisation\nPast studies shown that parallel coordinate plot can be used to reveal clustering variables by cluster very effectively. In the code chunk below, ggparcoord() of GGally package\n\nggparcoord(data = nga_wp_ngeo_cluster, \n           columns = c(14:19), \n           groupColumn = \"CLUSTER\",\n           scale = \"std\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of water points Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30)) +\n  scale_color_viridis(option = \"D\", discrete=TRUE)\n\n\n\n\nThe parallel coordinate plot above reveals that\nwe can also compute the summary statistics such as mean, median, sd, etc to complement the visual interpretation.\nIn the code chunk below, group_by() and summarise() of dplyr are used to derive mean values of the clustering variables.\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(mean_pct_functional = mean(pct_functional),\n            mean_pct_non.functional = mean(pct_non.functional),\n            mean_pct_handpump = mean(pct_handpump),\n            mean_pct_usagelow = mean(pct_usagelow),\n            mean_pct_usagehigh = mean(pct_usagehigh),\n            mean_pct_rural = mean(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER mean_pct_functional mean_pct_non.fun…¹ mean_…² mean_…³ mean_…⁴ mean_…⁵\n  <chr>                 <dbl>              <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                     0.404              0.369   0.277   0.450  0.511    0.650\n2 2                     0.526              0.381   0.670   0.768  0.232    0.802\n3 3                     0.563              0.362   0.579   0.656  0.344    0.749\n4 4                     0.766              0.210   0.832   0.857  0.143    0.846\n5 5                     0.868              0.132   0.917   0.923  0.0772   0.945\n# … with abbreviated variable names ¹​mean_pct_non.functional,\n#   ²​mean_pct_handpump, ³​mean_pct_usagelow, ⁴​mean_pct_usagehigh,\n#   ⁵​mean_pct_rural\n\n\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(median_pct_functional = median(pct_functional),\n            median_pct_non.functional = median(pct_non.functional),\n            median_pct_handpump = median(pct_handpump),\n            median_pct_usagelow = median(pct_usagelow),\n            median_pct_usagehigh = median(pct_usagehigh),\n            median_pct_rural = median(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER median_pct_functional median_pct_non…¹ media…² media…³ media…⁴ media…⁵\n  <chr>                   <dbl>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                       0.373            0.356   0.158   0.462  0.5      0.788\n2 2                       0.501            0.383   0.674   0.808  0.192    0.893\n3 3                       0.522            0.363   0.614   0.703  0.297    0.904\n4 4                       0.783            0.199   0.904   0.922  0.0782   0.912\n5 5                       0.872            0.128   0.943   0.958  0.0421   1    \n# … with abbreviated variable names ¹​median_pct_non.functional,\n#   ²​median_pct_handpump, ³​median_pct_usagelow, ⁴​median_pct_usagehigh,\n#   ⁵​median_pct_rural\n\n\n\nnga_wp_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(sd_pct_functional = sd(pct_functional),\n            sd_pct_non.functional = sd(pct_non.functional),\n            sd_pct_handpump = sd(pct_handpump),\n            sd_pct_usagelow = sd(pct_usagelow),\n            sd_pct_usagehigh = sd(pct_usagehigh),\n            sd_pct_rural = sd(pct_rural))\n\n# A tibble: 5 × 7\n  CLUSTER sd_pct_functional sd_pct_non.functio…¹ sd_pc…² sd_pc…³ sd_pc…⁴ sd_pc…⁵\n  <chr>               <dbl>                <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1                  0.253                0.249    0.295   0.307   0.311   0.357\n2 2                  0.183                0.156    0.217   0.180   0.180   0.256\n3 3                  0.208                0.184    0.263   0.256   0.256   0.326\n4 4                  0.148                0.123    0.193   0.186   0.186   0.230\n5 5                  0.0544               0.0544   0.114   0.115   0.115   0.121\n# … with abbreviated variable names ¹​sd_pct_non.functional, ²​sd_pct_handpump,\n#   ³​sd_pct_usagelow, ⁴​sd_pct_usagehigh, ⁵​sd_pct_rural"
  },
  {
    "objectID": "Take-home Exercise/Take-home Ex2 final.html",
    "href": "Take-home Exercise/Take-home Ex2 final.html",
    "title": "Take-home Exercise 2: Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "",
    "text": "pacman::p_load(sf,spdep, tmap, tidyverse,dplyr, funModeling,rgdal,  ClustGeo, ggpubr, cluster, factoextra, NbClust,heatmaply, corrplot, psych, GGally)"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "",
    "text": "Study area: Osun State, Nigeria\nOsun.rds: LGA boundaries of Osun State\nOsun_wp_sf.rds: water points within Osun State. sf point datafram\n\n\nDependent Variable: Water point status (functional/non-functional)\nIndependent variable:\n\ndistance_to_primary_road (continuous)\ndistance_to_secondary_road (continuous)\ndistance_to_tertiary_road (continuous)\ndistance_to_city (continuous)\ndistance_to_town (continuous)\nwater_point_population (continuous)\nlocal_population_1km (continuous)\nusage_capacity (categorical)\nis_urban (categorical)\nwater_source_clean (categorical)"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#running-code",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#running-code",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#data-import",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#data-import",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Data Import",
    "text": "Data Import\n\npacman::p_load(sf,spdep, tmap, tidyverse,dplyr, funModeling,rgdal,  blorr,corrplot,ggpubr,GWmodel,skimr,caret)\n\n\nImporting the Analytic Data\n\nosun_wp_sf <- read_rds(\"rds/Osun_wp_sf.rds\") \nosun <- read_rds(\"rds/Osun.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#eda",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#eda",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "EDA",
    "text": "EDA\n\nsummary statistics with skim\n\nosun_wp_sf %>%\n  skim()\n\nWarning: Couldn't find skimmers for class: sfc_POINT, sfc; No user-defined `sfl`\nprovided. Falling back to `character`.\n\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n4760\n\n\nNumber of columns\n75\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n47\n\n\nlogical\n5\n\n\nnumeric\n23\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1.00\n5\n44\n0\n2\n0\n\n\nreport_date\n0\n1.00\n22\n22\n0\n42\n0\n\n\nstatus_id\n0\n1.00\n2\n7\n0\n3\n0\n\n\nwater_source_clean\n0\n1.00\n8\n22\n0\n3\n0\n\n\nwater_source_category\n0\n1.00\n4\n6\n0\n2\n0\n\n\nwater_tech_clean\n24\n0.99\n9\n23\n0\n3\n0\n\n\nwater_tech_category\n24\n0.99\n9\n15\n0\n2\n0\n\n\nfacility_type\n0\n1.00\n8\n8\n0\n1\n0\n\n\nclean_country_name\n0\n1.00\n7\n7\n0\n1\n0\n\n\nclean_adm1\n0\n1.00\n3\n5\n0\n5\n0\n\n\nclean_adm2\n0\n1.00\n3\n14\n0\n35\n0\n\n\nclean_adm3\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nclean_adm4\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\ninstaller\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nmanagement_clean\n1573\n0.67\n5\n37\n0\n7\n0\n\n\nstatus_clean\n0\n1.00\n9\n32\n0\n7\n0\n\n\npay\n0\n1.00\n2\n39\n0\n7\n0\n\n\nfecal_coliform_presence\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nsubjective_quality\n0\n1.00\n18\n20\n0\n4\n0\n\n\nactivity_id\n4757\n0.00\n36\n36\n0\n3\n0\n\n\nscheme_id\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nwpdx_id\n0\n1.00\n12\n12\n0\n4760\n0\n\n\nnotes\n0\n1.00\n2\n96\n0\n3502\n0\n\n\norig_lnk\n4757\n0.00\n84\n84\n0\n1\n0\n\n\nphoto_lnk\n41\n0.99\n84\n84\n0\n4719\n0\n\n\ncountry_id\n0\n1.00\n2\n2\n0\n1\n0\n\n\ndata_lnk\n0\n1.00\n79\n96\n0\n2\n0\n\n\nwater_point_history\n0\n1.00\n142\n834\n0\n4750\n0\n\n\nclean_country_id\n0\n1.00\n3\n3\n0\n1\n0\n\n\ncountry_name\n0\n1.00\n7\n7\n0\n1\n0\n\n\nwater_source\n0\n1.00\n8\n30\n0\n4\n0\n\n\nwater_tech\n0\n1.00\n5\n37\n0\n20\n0\n\n\nadm2\n0\n1.00\n3\n14\n0\n33\n0\n\n\nadm3\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nmanagement\n1573\n0.67\n5\n47\n0\n7\n0\n\n\nadm1\n0\n1.00\n4\n5\n0\n4\n0\n\n\nNew Georeferenced Column\n0\n1.00\n16\n35\n0\n4760\n0\n\n\nlat_lon_deg\n0\n1.00\n13\n32\n0\n4760\n0\n\n\npublic_data_source\n0\n1.00\n84\n102\n0\n2\n0\n\n\nconverted\n0\n1.00\n53\n53\n0\n1\n0\n\n\ncreated_timestamp\n0\n1.00\n22\n22\n0\n2\n0\n\n\nupdated_timestamp\n0\n1.00\n22\n22\n0\n2\n0\n\n\nGeometry\n0\n1.00\n33\n37\n0\n4760\n0\n\n\nADM2_EN\n0\n1.00\n3\n14\n0\n30\n0\n\n\nADM2_PCODE\n0\n1.00\n8\n8\n0\n30\n0\n\n\nADM1_EN\n0\n1.00\n4\n4\n0\n1\n0\n\n\nADM1_PCODE\n0\n1.00\n5\n5\n0\n1\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nrehab_year\n4760\n0\nNaN\n:\n\n\nrehabilitator\n4760\n0\nNaN\n:\n\n\nis_urban\n0\n1\n0.39\nFAL: 2884, TRU: 1876\n\n\nlatest_record\n0\n1\n1.00\nTRU: 4760\n\n\nstatus\n0\n1\n0.56\nTRU: 2642, FAL: 2118\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrow_id\n0\n1.00\n68550.48\n10216.94\n49601.00\n66874.75\n68244.50\n69562.25\n471319.00\n▇▁▁▁▁\n\n\nlat_deg\n0\n1.00\n7.68\n0.22\n7.06\n7.51\n7.71\n7.88\n8.06\n▁▂▇▇▇\n\n\nlon_deg\n0\n1.00\n4.54\n0.21\n4.08\n4.36\n4.56\n4.71\n5.06\n▃▆▇▇▂\n\n\ninstall_year\n1144\n0.76\n2008.63\n6.04\n1917.00\n2006.00\n2010.00\n2013.00\n2015.00\n▁▁▁▁▇\n\n\nfecal_coliform_value\n4760\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\ndistance_to_primary_road\n0\n1.00\n5021.53\n5648.34\n0.01\n719.36\n2972.78\n7314.73\n26909.86\n▇▂▁▁▁\n\n\ndistance_to_secondary_road\n0\n1.00\n3750.47\n3938.63\n0.15\n460.90\n2554.25\n5791.94\n19559.48\n▇▃▁▁▁\n\n\ndistance_to_tertiary_road\n0\n1.00\n1259.28\n1680.04\n0.02\n121.25\n521.77\n1834.42\n10966.27\n▇▂▁▁▁\n\n\ndistance_to_city\n0\n1.00\n16663.99\n10960.82\n53.05\n7930.75\n15030.41\n24255.75\n47934.34\n▇▇▆▃▁\n\n\ndistance_to_town\n0\n1.00\n16726.59\n12452.65\n30.00\n6876.92\n12204.53\n27739.46\n44020.64\n▇▅▃▃▂\n\n\nrehab_priority\n2654\n0.44\n489.33\n1658.81\n0.00\n7.00\n91.50\n376.25\n29697.00\n▇▁▁▁▁\n\n\nwater_point_population\n4\n1.00\n513.58\n1458.92\n0.00\n14.00\n119.00\n433.25\n29697.00\n▇▁▁▁▁\n\n\nlocal_population_1km\n4\n1.00\n2727.16\n4189.46\n0.00\n176.00\n1032.00\n3717.00\n36118.00\n▇▁▁▁▁\n\n\ncrucialness_score\n798\n0.83\n0.26\n0.28\n0.00\n0.07\n0.15\n0.35\n1.00\n▇▃▁▁▁\n\n\npressure_score\n798\n0.83\n1.46\n4.16\n0.00\n0.12\n0.41\n1.24\n93.69\n▇▁▁▁▁\n\n\nusage_capacity\n0\n1.00\n560.74\n338.46\n300.00\n300.00\n300.00\n1000.00\n1000.00\n▇▁▁▁▅\n\n\ndays_since_report\n0\n1.00\n2692.69\n41.92\n1483.00\n2688.00\n2693.00\n2700.00\n4645.00\n▁▇▁▁▁\n\n\nstaleness_score\n0\n1.00\n42.80\n0.58\n23.13\n42.70\n42.79\n42.86\n62.66\n▁▁▇▁▁\n\n\nlocation_id\n0\n1.00\n235865.49\n6657.60\n23741.00\n230638.75\n236199.50\n240061.25\n267454.00\n▁▁▁▁▇\n\n\ncluster_size\n0\n1.00\n1.05\n0.25\n1.00\n1.00\n1.00\n1.00\n4.00\n▇▁▁▁▁\n\n\nlat_deg_original\n4760\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\nlon_deg_original\n4760\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\ncount\n0\n1.00\n1.00\n0.00\n1.00\n1.00\n1.00\n1.00\n1.00\n▁▁▇▁▁\n\n\n\n\n\nThere are 1144 missing value in install_year column so we won’t use it.\n\nosun_wp_sf_clean<-osun_wp_sf %>%\n  filter_at(vars(status,\n                 distance_to_primary_road,\n                 distance_to_secondary_road,\n                 distance_to_tertiary_road,\n                 distance_to_city,\n                 distance_to_town,\n                 water_point_population,\n                 local_population_1km,\n                 usage_capacity,\n                 is_urban,\n                 water_source_clean),\n            all_vars(!is.na(.))) %>%\n  mutate(usage_capacity=as.factor(usage_capacity))\n\n\nosun_wp_sf_clean %>%\n  freq(input='status')\n\n\n\n\n  status frequency percentage cumulative_perc\n1   TRUE      2642      55.55           55.55\n2  FALSE      2114      44.45          100.00\n\n\n\nosun_wp_sf_clean %>%\n  skim()\n\nWarning: Couldn't find skimmers for class: sfc_POINT, sfc; No user-defined `sfl`\nprovided. Falling back to `character`.\n\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n4756\n\n\nNumber of columns\n75\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n47\n\n\nfactor\n1\n\n\nlogical\n5\n\n\nnumeric\n22\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1.00\n5\n44\n0\n2\n0\n\n\nreport_date\n0\n1.00\n22\n22\n0\n42\n0\n\n\nstatus_id\n0\n1.00\n2\n7\n0\n3\n0\n\n\nwater_source_clean\n0\n1.00\n8\n22\n0\n3\n0\n\n\nwater_source_category\n0\n1.00\n4\n6\n0\n2\n0\n\n\nwater_tech_clean\n23\n1.00\n9\n23\n0\n3\n0\n\n\nwater_tech_category\n23\n1.00\n9\n15\n0\n2\n0\n\n\nfacility_type\n0\n1.00\n8\n8\n0\n1\n0\n\n\nclean_country_name\n0\n1.00\n7\n7\n0\n1\n0\n\n\nclean_adm1\n0\n1.00\n3\n5\n0\n5\n0\n\n\nclean_adm2\n0\n1.00\n3\n14\n0\n35\n0\n\n\nclean_adm3\n4756\n0.00\nNA\nNA\n0\n0\n0\n\n\nclean_adm4\n4756\n0.00\nNA\nNA\n0\n0\n0\n\n\ninstaller\n4756\n0.00\nNA\nNA\n0\n0\n0\n\n\nmanagement_clean\n1569\n0.67\n5\n37\n0\n7\n0\n\n\nstatus_clean\n0\n1.00\n9\n32\n0\n6\n0\n\n\npay\n0\n1.00\n2\n39\n0\n7\n0\n\n\nfecal_coliform_presence\n4756\n0.00\nNA\nNA\n0\n0\n0\n\n\nsubjective_quality\n0\n1.00\n18\n20\n0\n4\n0\n\n\nactivity_id\n4753\n0.00\n36\n36\n0\n3\n0\n\n\nscheme_id\n4756\n0.00\nNA\nNA\n0\n0\n0\n\n\nwpdx_id\n0\n1.00\n12\n12\n0\n4756\n0\n\n\nnotes\n0\n1.00\n2\n96\n0\n3499\n0\n\n\norig_lnk\n4753\n0.00\n84\n84\n0\n1\n0\n\n\nphoto_lnk\n41\n0.99\n84\n84\n0\n4715\n0\n\n\ncountry_id\n0\n1.00\n2\n2\n0\n1\n0\n\n\ndata_lnk\n0\n1.00\n79\n96\n0\n2\n0\n\n\nwater_point_history\n0\n1.00\n142\n834\n0\n4746\n0\n\n\nclean_country_id\n0\n1.00\n3\n3\n0\n1\n0\n\n\ncountry_name\n0\n1.00\n7\n7\n0\n1\n0\n\n\nwater_source\n0\n1.00\n8\n30\n0\n4\n0\n\n\nwater_tech\n0\n1.00\n5\n37\n0\n19\n0\n\n\nadm2\n0\n1.00\n3\n14\n0\n33\n0\n\n\nadm3\n4756\n0.00\nNA\nNA\n0\n0\n0\n\n\nmanagement\n1569\n0.67\n5\n47\n0\n7\n0\n\n\nadm1\n0\n1.00\n4\n5\n0\n4\n0\n\n\nNew Georeferenced Column\n0\n1.00\n16\n35\n0\n4756\n0\n\n\nlat_lon_deg\n0\n1.00\n13\n32\n0\n4756\n0\n\n\npublic_data_source\n0\n1.00\n84\n102\n0\n2\n0\n\n\nconverted\n0\n1.00\n53\n53\n0\n1\n0\n\n\ncreated_timestamp\n0\n1.00\n22\n22\n0\n2\n0\n\n\nupdated_timestamp\n0\n1.00\n22\n22\n0\n2\n0\n\n\nGeometry\n0\n1.00\n33\n37\n0\n4756\n0\n\n\nADM2_EN\n0\n1.00\n3\n14\n0\n30\n0\n\n\nADM2_PCODE\n0\n1.00\n8\n8\n0\n30\n0\n\n\nADM1_EN\n0\n1.00\n4\n4\n0\n1\n0\n\n\nADM1_PCODE\n0\n1.00\n5\n5\n0\n1\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nusage_capacity\n0\n1\nFALSE\n2\n300: 2986, 100: 1770\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nrehab_year\n4756\n0\nNaN\n:\n\n\nrehabilitator\n4756\n0\nNaN\n:\n\n\nis_urban\n0\n1\n0.39\nFAL: 2882, TRU: 1874\n\n\nlatest_record\n0\n1\n1.00\nTRU: 4756\n\n\nstatus\n0\n1\n0.56\nTRU: 2642, FAL: 2114\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrow_id\n0\n1.00\n68551.03\n10221.05\n49601.00\n66875.75\n68244.50\n69562.25\n471319.00\n▇▁▁▁▁\n\n\nlat_deg\n0\n1.00\n7.68\n0.22\n7.06\n7.51\n7.71\n7.88\n8.06\n▁▂▇▇▇\n\n\nlon_deg\n0\n1.00\n4.54\n0.21\n4.08\n4.36\n4.56\n4.71\n5.06\n▃▆▇▇▂\n\n\ninstall_year\n1143\n0.76\n2008.63\n6.04\n1917.00\n2006.00\n2010.00\n2013.00\n2015.00\n▁▁▁▁▇\n\n\nfecal_coliform_value\n4756\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\ndistance_to_primary_road\n0\n1.00\n5021.73\n5650.02\n0.01\n719.36\n2968.38\n7314.73\n26909.86\n▇▂▁▁▁\n\n\ndistance_to_secondary_road\n0\n1.00\n3751.00\n3939.74\n0.15\n460.50\n2554.25\n5791.94\n19559.48\n▇▃▁▁▁\n\n\ndistance_to_tertiary_road\n0\n1.00\n1259.65\n1680.52\n0.02\n121.33\n521.77\n1834.42\n10966.27\n▇▂▁▁▁\n\n\ndistance_to_city\n0\n1.00\n16662.78\n10961.08\n53.05\n7930.75\n15020.40\n24255.75\n47934.34\n▇▇▆▃▁\n\n\ndistance_to_town\n0\n1.00\n16732.33\n12455.76\n30.00\n6876.92\n12215.09\n27745.52\n44020.64\n▇▅▃▃▂\n\n\nrehab_priority\n2650\n0.44\n489.33\n1658.81\n0.00\n7.00\n91.50\n376.25\n29697.00\n▇▁▁▁▁\n\n\nwater_point_population\n0\n1.00\n513.58\n1458.92\n0.00\n14.00\n119.00\n433.25\n29697.00\n▇▁▁▁▁\n\n\nlocal_population_1km\n0\n1.00\n2727.16\n4189.46\n0.00\n176.00\n1032.00\n3717.00\n36118.00\n▇▁▁▁▁\n\n\ncrucialness_score\n794\n0.83\n0.26\n0.28\n0.00\n0.07\n0.15\n0.35\n1.00\n▇▃▁▁▁\n\n\npressure_score\n794\n0.83\n1.46\n4.16\n0.00\n0.12\n0.41\n1.24\n93.69\n▇▁▁▁▁\n\n\ndays_since_report\n0\n1.00\n2692.69\n41.94\n1483.00\n2688.00\n2693.00\n2700.00\n4645.00\n▁▇▁▁▁\n\n\nstaleness_score\n0\n1.00\n42.80\n0.58\n23.13\n42.70\n42.79\n42.86\n62.66\n▁▁▇▁▁\n\n\nlocation_id\n0\n1.00\n235864.87\n6659.44\n23741.00\n230638.75\n236198.50\n240062.25\n267454.00\n▁▁▁▁▇\n\n\ncluster_size\n0\n1.00\n1.05\n0.25\n1.00\n1.00\n1.00\n1.00\n4.00\n▇▁▁▁▁\n\n\nlat_deg_original\n4756\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\nlon_deg_original\n4756\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\ncount\n0\n1.00\n1.00\n0.00\n1.00\n1.00\n1.00\n1.00\n1.00\n▁▁▇▁▁"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#section",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#section",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "",
    "text": "osun_wp_sf %>%\n  freq(input='status')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n  status frequency percentage cumulative_perc\n1   TRUE      2642       55.5            55.5\n2  FALSE      2118       44.5           100.0\n\n\nThe Osun state consist of 55.5% functional water point and 44.5% non functional water point.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(osun)+\n  tm_polygons(alpha=0.4)+\ntm_shape(osun_wp_sf)+\n  tm_dots(col=\"status\",\n          alpha=0.6)+\n  tm_view(set.zoom.limits = c(9,12))"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#correlation-analysis",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#correlation-analysis",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Correlation Analysis",
    "text": "Correlation Analysis\n\nosun_wp <- osun_wp_sf_clean %>%\n  select(c(7,35:39,42:43,46:47,57))%>%\n  st_set_geometry(NULL)#drop away the geometry column\n\n\ncluster_vars.cor=cor(\n  osun_wp[,2:7])\ncorrplot.mixed(cluster_vars.cor,\n               lower=\"ellipse\",\n               upper=\"number\",\n               tl.pos = \"lt\",\n               diag=\"l\",\n               tl.col=\"black\")"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#building-a-logistic-regression-model",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#building-a-logistic-regression-model",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Building a logistic regression model",
    "text": "Building a logistic regression model\n\nmodel<-glm(status ~ distance_to_primary_road+\n                 distance_to_secondary_road+\n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n           data=osun_wp_sf_clean,\n           family=binomial(link='logit'))\n\n\nblr_regress(model)\n\n                             Model Overview                              \n------------------------------------------------------------------------\nData Set    Resp Var    Obs.    Df. Model    Df. Residual    Convergence \n------------------------------------------------------------------------\n  data       status     4756      4755           4744           TRUE     \n------------------------------------------------------------------------\n\n                    Response Summary                     \n--------------------------------------------------------\nOutcome        Frequency        Outcome        Frequency \n--------------------------------------------------------\n   0             2114              1             2642    \n--------------------------------------------------------\n\n                                 Maximum Likelihood Estimates                                   \n-----------------------------------------------------------------------------------------------\n               Parameter                    DF    Estimate    Std. Error    z value     Pr(>|z|) \n-----------------------------------------------------------------------------------------------\n              (Intercept)                   1      0.3887        0.1124      3.4588       5e-04 \n        distance_to_primary_road            1      0.0000        0.0000     -0.7153      0.4744 \n       distance_to_secondary_road           1      0.0000        0.0000     -0.5530      0.5802 \n       distance_to_tertiary_road            1      1e-04         0.0000      4.6708      0.0000 \n            distance_to_city                1      0.0000        0.0000     -4.7574      0.0000 \n            distance_to_town                1      0.0000        0.0000     -4.9170      0.0000 \n         water_point_population             1      -5e-04        0.0000    -11.3686      0.0000 \n          local_population_1km              1      3e-04         0.0000     19.2953      0.0000 \n           usage_capacity1000               1     -0.6230        0.0697     -8.9366      0.0000 \n              is_urbanTRUE                  1     -0.2971        0.0819     -3.6294       3e-04 \nwater_source_cleanProtected Shallow Well    1      0.5040        0.0857      5.8783      0.0000 \n   water_source_cleanProtected Spring       1      1.2882        0.4388      2.9359      0.0033 \n-----------------------------------------------------------------------------------------------\n\n Association of Predicted Probabilities and Observed Responses  \n---------------------------------------------------------------\n% Concordant          0.7347          Somers' D        0.4693   \n% Discordant          0.2653          Gamma            0.4693   \n% Tied                0.0000          Tau-a            0.2318   \nPairs                5585188          c                0.7347   \n---------------------------------------------------------------\n\n\ndistance_to_tertiary_road, distance_to_city, distance\n\n#report(model)\n\n\nblr_confusion_matrix(model,cutoff=0.5)\n\nConfusion Matrix and Statistics \n\n          Reference\nPrediction FALSE TRUE\n         0  1301  738\n         1   813 1904\n\n                Accuracy : 0.6739 \n     No Information Rate : 0.4445 \n\n                   Kappa : 0.3373 \n\nMcNemars's Test P-Value  : 0.0602 \n\n             Sensitivity : 0.7207 \n             Specificity : 0.6154 \n          Pos Pred Value : 0.7008 \n          Neg Pred Value : 0.6381 \n              Prevalence : 0.5555 \n          Detection Rate : 0.4003 \n    Detection Prevalence : 0.5713 \n       Balanced Accuracy : 0.6680 \n               Precision : 0.7008 \n                  Recall : 0.7207 \n\n        'Positive' Class : 1"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#building-a-geographically-weight-logistic-regression-gwlr-model",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#building-a-geographically-weight-logistic-regression-gwlr-model",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Building a Geographically weight logistic regression (GWLR) model",
    "text": "Building a Geographically weight logistic regression (GWLR) model\n\nConverting from sf to sp data frame\n\nosun_wp_sp<-osun_wp_sf_clean %>%\n  select(c(status,\n                 distance_to_primary_road,\n                 distance_to_secondary_road,\n                 distance_to_tertiary_road,\n                 distance_to_city,\n                 distance_to_town,\n                 water_point_population,\n                 local_population_1km,\n                 usage_capacity,\n                 is_urban,\n                 water_source_clean)) %>%\n  as_Spatial()\nosun_wp_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 4756 \nextent      : 182502.4, 290751, 340054.1, 450905.3  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 11\nnames       : status, distance_to_primary_road, distance_to_secondary_road, distance_to_tertiary_road, distance_to_city, distance_to_town, water_point_population, local_population_1km, usage_capacity, is_urban, water_source_clean \nmin values  :      0,        0.014461356813335,          0.152195902540837,         0.017815121653488, 53.0461399623541, 30.0019777713073,                      0,                    0,           1000,        0,           Borehole \nmax values  :      1,         26909.8616132094,           19559.4793799085,          10966.2705628969,  47934.343603562, 44020.6393368124,                  29697,                36118,            300,        1,   Protected Spring \n\n\n\n\nBuilding Fixed Bandwidth GWR Model\n\nComputing fixed bandwidth\n\nbw.fixed<- bw.ggwr(status~distance_to_primary_road+\n                 distance_to_secondary_road+\n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n              data=osun_wp_sp,\n              family=\"binomial\",\n              approach = \"AIC\",\n              kernel = \"gaussian\",\n              adaptive = FALSE,\n              longlat = FALSE)\n\n\nbw.fixed\n\n\ngwlr.fixed<-ggwr.basic(status~distance_to_primary_road+\n                 distance_to_secondary_road+\n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n              data=osun_wp_sp,\n              bw=2597.255,\n              family=\"binomial\",\n              kernel=\"gaussian\",\n              adaptive=FALSE,\n              longlat=FALSE)\n\n Iteration    Log-Likelihood\n=========================\n       0        -1957 \n       1        -1675 \n       2        -1525 \n       3        -1441 \n       4        -1403 \n       5        -1403 \n\n\n\ngwlr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-17 16:04:52 \n   Call:\n   ggwr.basic(formula = status ~ distance_to_primary_road + distance_to_secondary_road + \n    distance_to_tertiary_road + distance_to_city + distance_to_town + \n    water_point_population + local_population_1km + usage_capacity + \n    is_urban + water_source_clean, data = osun_wp_sp, bw = 2597.255, \n    family = \"binomial\", kernel = \"gaussian\", adaptive = FALSE, \n    longlat = FALSE)\n\n   Dependent (y) variable:  status\n   Independent variables:  distance_to_primary_road distance_to_secondary_road distance_to_tertiary_road distance_to_city distance_to_town water_point_population local_population_1km usage_capacity is_urban water_source_clean\n   Number of data points: 4756\n   Used family: binomial\n   ***********************************************************************\n   *              Results of Generalized linear Regression               *\n   ***********************************************************************\n\nCall:\nNULL\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-124.555    -1.755     1.072     1.742    34.333  \n\nCoefficients:\n                                           Estimate Std. Error z value Pr(>|z|)\nIntercept                                 3.887e-01  1.124e-01   3.459 0.000543\ndistance_to_primary_road                 -4.642e-06  6.490e-06  -0.715 0.474422\ndistance_to_secondary_road               -5.143e-06  9.299e-06  -0.553 0.580230\ndistance_to_tertiary_road                 9.683e-05  2.073e-05   4.671 3.00e-06\ndistance_to_city                         -1.686e-05  3.544e-06  -4.757 1.96e-06\ndistance_to_town                         -1.480e-05  3.009e-06  -4.917 8.79e-07\nwater_point_population                   -5.097e-04  4.484e-05 -11.369  < 2e-16\nlocal_population_1km                      3.451e-04  1.788e-05  19.295  < 2e-16\nusage_capacity1000                       -6.230e-01  6.972e-02  -8.937  < 2e-16\nis_urbanTRUE                             -2.971e-01  8.185e-02  -3.629 0.000284\nwater_source_cleanProtected Shallow Well  5.040e-01  8.574e-02   5.878 4.14e-09\nwater_source_cleanProtected Spring        1.288e+00  4.388e-01   2.936 0.003325\n                                            \nIntercept                                ***\ndistance_to_primary_road                    \ndistance_to_secondary_road                  \ndistance_to_tertiary_road                ***\ndistance_to_city                         ***\ndistance_to_town                         ***\nwater_point_population                   ***\nlocal_population_1km                     ***\nusage_capacity1000                       ***\nis_urbanTRUE                             ***\nwater_source_cleanProtected Shallow Well ***\nwater_source_cleanProtected Spring       ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 6534.5  on 4755  degrees of freedom\nResidual deviance: 5688.0  on 4744  degrees of freedom\nAIC: 5712\n\nNumber of Fisher Scoring iterations: 5\n\n\n AICc:  5712.099\n Pseudo R-square value:  0.1295351\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 2597.255 \n   Regression points: the same locations as observations are used.\n   Distance metric: A distance matrix is specified for this model calibration.\n\n   ************Summary of Generalized GWR coefficient estimates:**********\n                                                   Min.     1st Qu.      Median\n   Intercept                                -8.9630e+02 -4.9805e+00  1.7599e+00\n   distance_to_primary_road                 -1.9477e-02 -4.8092e-04  3.0174e-05\n   distance_to_secondary_road               -1.5757e-02 -3.7583e-04  1.2438e-04\n   distance_to_tertiary_road                -1.5673e-02 -4.2538e-04  7.6217e-05\n   distance_to_city                         -1.8447e-02 -5.6287e-04 -1.2745e-04\n   distance_to_town                         -2.2450e-02 -5.7335e-04 -1.5218e-04\n   water_point_population                   -5.2830e-02 -2.2810e-03 -9.8829e-04\n   local_population_1km                     -1.2757e-01  5.0016e-04  1.0647e-03\n   usage_capacity1000                       -2.0846e+01 -9.7311e-01 -4.1596e-01\n   is_urbanTRUE                             -1.9866e+02 -4.3054e+00 -1.6908e+00\n   water_source_cleanProtected.Shallow.Well -2.0782e+01 -4.5536e-01  5.3278e-01\n   water_source_cleanProtected.Spring       -5.2495e+02 -5.5983e+00  2.5500e+00\n                                                3rd Qu.      Max.\n   Intercept                                 1.2829e+01 1075.4234\n   distance_to_primary_road                  4.8497e-04    0.0143\n   distance_to_secondary_road                6.0665e-04    0.0259\n   distance_to_tertiary_road                 6.7104e-04    0.0129\n   distance_to_city                          2.3763e-04    0.0155\n   distance_to_town                          1.9318e-04    0.0225\n   water_point_population                    5.0564e-04    0.1313\n   local_population_1km                      1.8177e-03    0.0392\n   usage_capacity1000                        3.0334e-01    5.9492\n   is_urbanTRUE                              1.2864e+00  746.9498\n   water_source_cleanProtected.Shallow.Well  1.7870e+00   67.5549\n   water_source_cleanProtected.Spring        6.7736e+00  331.1243\n   ************************Diagnostic information*************************\n   Number of data points: 4756 \n   GW Deviance: 2792.323 \n   AIC : 4413.603 \n   AICc : 4747.217 \n   Pseudo R-square value:  0.5726785 \n\n   ***********************************************************************\n   Program stops at: 2022-12-17 16:05:28 \n\n\n\n\n\nModel Assessment\n\nConverting SDF into sf data frame\n\ngwr.fixed<-as.data.frame(gwlr.fixed$SDF)\n\n\ngwr.fixed<-gwr.fixed %>%\n  mutate(most=ifelse(gwr.fixed$yhat>=0.5,T,F))\n\n\ngwr.fixed$y<- as.factor(gwr.fixed$y)\ngwr.fixed$most<- as.factor(gwr.fixed$most)\nCM<-confusionMatrix(data=gwr.fixed$most,reference=gwr.fixed$y)\nCM\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction FALSE TRUE\n     FALSE  1824  263\n     TRUE    290 2379\n                                          \n               Accuracy : 0.8837          \n                 95% CI : (0.8743, 0.8927)\n    No Information Rate : 0.5555          \n    P-Value [Acc > NIR] : <2e-16          \n                                          \n                  Kappa : 0.7642          \n                                          \n Mcnemar's Test P-Value : 0.2689          \n                                          \n            Sensitivity : 0.8628          \n            Specificity : 0.9005          \n         Pos Pred Value : 0.8740          \n         Neg Pred Value : 0.8913          \n             Prevalence : 0.4445          \n         Detection Rate : 0.3835          \n   Detection Prevalence : 0.4388          \n      Balanced Accuracy : 0.8816          \n                                          \n       'Positive' Class : FALSE"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#rerun-the-model-without-insignificant",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#rerun-the-model-without-insignificant",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Rerun the model without insignificant",
    "text": "Rerun the model without insignificant"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#visualizing-gwlr",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#visualizing-gwlr",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Visualizing gwLR",
    "text": "Visualizing gwLR\n\nosun_wp_sf_selected<-osun_wp_sf_clean%>%\n  select(c(ADM2_EN,ADM2_PCODE,ADM1_EN,ADM1_PCODE,status\n           ))\n\n\ngwr_sf.fixed<-cbind(osun_wp_sf_selected,gwr.fixed)\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nprob_T<-tm_shape(osun)+\n  tm_polygons(alpha=0.1)+\n  tm_shape(gwr_sf.fixed)+\n  tm_dots(col=\"yhat\",\n          border.col=\"gray60\",\n          border.lwd=1)+\n  tm_view(set.zoom.limits = c(8,14))\nprob_T\n\n\n\n\n\n\n\n\n\nremove the primary_road and secondary_road which is not significant and rerun the model to see the consistence result"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#rerun-the-model-without-insignificant-variables",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#rerun-the-model-without-insignificant-variables",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Rerun the model without insignificant variables",
    "text": "Rerun the model without insignificant variables\nFrom the above logistic regression model result, the p-value of distance_to_primary_road and distance_to_secondary_road are 0.4744 and 0.5802. Both of them and higher than 0.05, which means those variables are not significant. To increase the accuracy, we can remove those two variables\n\nBuilding the new logistic regression model\n\nmodel_new<-glm(status ~ \n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n           data=osun_wp_sf_clean,\n           family=binomial(link='logit'))\n\n\nblr_regress(model_new)\n\n                             Model Overview                              \n------------------------------------------------------------------------\nData Set    Resp Var    Obs.    Df. Model    Df. Residual    Convergence \n------------------------------------------------------------------------\n  data       status     4756      4755           4746           TRUE     \n------------------------------------------------------------------------\n\n                    Response Summary                     \n--------------------------------------------------------\nOutcome        Frequency        Outcome        Frequency \n--------------------------------------------------------\n   0             2114              1             2642    \n--------------------------------------------------------\n\n                                 Maximum Likelihood Estimates                                   \n-----------------------------------------------------------------------------------------------\n               Parameter                    DF    Estimate    Std. Error    z value     Pr(>|z|) \n-----------------------------------------------------------------------------------------------\n              (Intercept)                   1      0.3540        0.1055      3.3541       8e-04 \n       distance_to_tertiary_road            1      1e-04         0.0000      4.9096      0.0000 \n            distance_to_city                1      0.0000        0.0000     -5.2022      0.0000 \n            distance_to_town                1      0.0000        0.0000     -5.4660      0.0000 \n         water_point_population             1      -5e-04        0.0000    -11.3902      0.0000 \n          local_population_1km              1      3e-04         0.0000     19.4069      0.0000 \n           usage_capacity1000               1     -0.6206        0.0697     -8.9081      0.0000 \n              is_urbanTRUE                  1     -0.2667        0.0747     -3.5690       4e-04 \nwater_source_cleanProtected Shallow Well    1      0.4947        0.0850      5.8228      0.0000 \n   water_source_cleanProtected Spring       1      1.2790        0.4384      2.9174      0.0035 \n-----------------------------------------------------------------------------------------------\n\n Association of Predicted Probabilities and Observed Responses  \n---------------------------------------------------------------\n% Concordant          0.7349          Somers' D        0.4697   \n% Discordant          0.2651          Gamma            0.4697   \n% Tied                0.0000          Tau-a            0.2320   \nPairs                5585188          c                0.7349   \n---------------------------------------------------------------\n\n\n\nblr_confusion_matrix(model_new,cutoff=0.5)\n\nConfusion Matrix and Statistics \n\n          Reference\nPrediction FALSE TRUE\n         0  1300  743\n         1   814 1899\n\n                Accuracy : 0.6726 \n     No Information Rate : 0.4445 \n\n                   Kappa : 0.3348 \n\nMcNemars's Test P-Value  : 0.0761 \n\n             Sensitivity : 0.7188 \n             Specificity : 0.6149 \n          Pos Pred Value : 0.7000 \n          Neg Pred Value : 0.6363 \n              Prevalence : 0.5555 \n          Detection Rate : 0.3993 \n    Detection Prevalence : 0.5704 \n       Balanced Accuracy : 0.6669 \n               Precision : 0.7000 \n                  Recall : 0.7188 \n\n        'Positive' Class : 1\n\n\nThe accuracy didn’t increase. The possible reason is in the first logistic regression model, the Estimate of distance_to_primary_road and distance_to_secondary_road are zero, which means these two variables have no effect on the results.\n\n\nBuilding a Geographically weight logistic regression (GWLR) model\n\nConverting from sf to sp data frame\n\nosun_wp_sp_new<-osun_wp_sf_clean %>%\n  select(c(status,\n                 distance_to_tertiary_road,\n                 distance_to_city,\n                 distance_to_town,\n                 water_point_population,\n                 local_population_1km,\n                 usage_capacity,\n                 is_urban,\n                 water_source_clean)) %>%\n  as_Spatial()\nosun_wp_sp_new\n\nclass       : SpatialPointsDataFrame \nfeatures    : 4756 \nextent      : 182502.4, 290751, 340054.1, 450905.3  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 9\nnames       : status, distance_to_tertiary_road, distance_to_city, distance_to_town, water_point_population, local_population_1km, usage_capacity, is_urban, water_source_clean \nmin values  :      0,         0.017815121653488, 53.0461399623541, 30.0019777713073,                      0,                    0,           1000,        0,           Borehole \nmax values  :      1,          10966.2705628969,  47934.343603562, 44020.6393368124,                  29697,                36118,            300,        1,   Protected Spring \n\n\n\n\nBuilding Fixed Bandwidth GWR Model\n\nComputing fixed bandwidth\n\nbw.fixed_new<- bw.ggwr(status~\n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n              data=osun_wp_sp_new,\n              family=\"binomial\",\n              approach = \"AIC\",\n              kernel = \"gaussian\",\n              adaptive = FALSE,\n              longlat = FALSE)\n\n\nbw.fixed_new\n\n\ngwlr.fixed_new<-ggwr.basic(status~\n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n              data=osun_wp_sp_new,\n              bw=2597.255,\n              family=\"binomial\",\n              kernel=\"gaussian\",\n              adaptive=FALSE,\n              longlat=FALSE)\n\n Iteration    Log-Likelihood\n=========================\n       0        -2034 \n       1        -1772 \n       2        -1635 \n       3        -1561 \n       4        -1530 \n       5        -1530 \n\n\n\ngwlr.fixed_new\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-17 15:42:32 \n   Call:\n   ggwr.basic(formula = status ~ distance_to_tertiary_road + distance_to_city + \n    distance_to_town + water_point_population + local_population_1km + \n    usage_capacity + is_urban + water_source_clean, data = osun_wp_sp_new, \n    bw = 2597.255, family = \"binomial\", kernel = \"gaussian\", \n    adaptive = FALSE, longlat = FALSE)\n\n   Dependent (y) variable:  status\n   Independent variables:  distance_to_tertiary_road distance_to_city distance_to_town water_point_population local_population_1km usage_capacity is_urban water_source_clean\n   Number of data points: 4756\n   Used family: binomial\n   ***********************************************************************\n   *              Results of Generalized linear Regression               *\n   ***********************************************************************\n\nCall:\nNULL\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-129.368    -1.750     1.074     1.742    34.126  \n\nCoefficients:\n                                           Estimate Std. Error z value Pr(>|z|)\nIntercept                                 3.540e-01  1.055e-01   3.354 0.000796\ndistance_to_tertiary_road                 1.001e-04  2.040e-05   4.910 9.13e-07\ndistance_to_city                         -1.764e-05  3.391e-06  -5.202 1.97e-07\ndistance_to_town                         -1.544e-05  2.825e-06  -5.466 4.60e-08\nwater_point_population                   -5.098e-04  4.476e-05 -11.390  < 2e-16\nlocal_population_1km                      3.452e-04  1.779e-05  19.407  < 2e-16\nusage_capacity1000                       -6.206e-01  6.966e-02  -8.908  < 2e-16\nis_urbanTRUE                             -2.667e-01  7.474e-02  -3.569 0.000358\nwater_source_cleanProtected Shallow Well  4.947e-01  8.496e-02   5.823 5.79e-09\nwater_source_cleanProtected Spring        1.279e+00  4.384e-01   2.917 0.003530\n                                            \nIntercept                                ***\ndistance_to_tertiary_road                ***\ndistance_to_city                         ***\ndistance_to_town                         ***\nwater_point_population                   ***\nlocal_population_1km                     ***\nusage_capacity1000                       ***\nis_urbanTRUE                             ***\nwater_source_cleanProtected Shallow Well ***\nwater_source_cleanProtected Spring       ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 6534.5  on 4755  degrees of freedom\nResidual deviance: 5688.9  on 4746  degrees of freedom\nAIC: 5708.9\n\nNumber of Fisher Scoring iterations: 5\n\n\n AICc:  5708.923\n Pseudo R-square value:  0.129406\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 2597.255 \n   Regression points: the same locations as observations are used.\n   Distance metric: A distance matrix is specified for this model calibration.\n\n   ************Summary of Generalized GWR coefficient estimates:**********\n                                                   Min.     1st Qu.      Median\n   Intercept                                -2.7771e+02 -3.9915e+00  2.9346e+00\n   distance_to_tertiary_road                -2.0066e-02 -3.6016e-04  8.9385e-05\n   distance_to_city                         -3.0931e-02 -5.6273e-04 -1.0359e-04\n   distance_to_town                         -3.4702e-03 -4.3133e-04 -1.2398e-04\n   water_point_population                   -3.5450e-02 -2.0856e-03 -1.1271e-03\n   local_population_1km                     -5.8060e-02  4.0342e-04  1.0001e-03\n   usage_capacity1000                       -4.5295e+01 -1.0249e+00 -3.8880e-01\n   is_urbanTRUE                             -3.0233e+02 -3.1725e+00 -1.4861e+00\n   water_source_cleanProtected.Shallow.Well -1.0470e+02 -4.2423e-01  5.9626e-01\n   water_source_cleanProtected.Spring       -7.9160e+02 -5.4086e+00  2.5525e+00\n                                                3rd Qu.      Max.\n   Intercept                                 1.0668e+01 1102.7459\n   distance_to_tertiary_road                 5.3918e-04    0.0140\n   distance_to_city                          1.2672e-04    0.0129\n   distance_to_town                          2.2159e-04    0.0161\n   water_point_population                    1.9400e-04    0.0569\n   local_population_1km                      1.6838e-03    0.0293\n   usage_capacity1000                        3.5031e-01    5.9152\n   is_urbanTRUE                              8.9541e-01  739.6369\n   water_source_cleanProtected.Shallow.Well  1.8040e+00   52.4657\n   water_source_cleanProtected.Spring        6.5117e+00  152.2614\n   ************************Diagnostic information*************************\n   Number of data points: 4756 \n   GW Deviance: 3051.369 \n   AIC : 4499.24 \n   AICc : 4759.621 \n   Pseudo R-square value:  0.5330355 \n\n   ***********************************************************************\n   Program stops at: 2022-12-17 15:43:00 \n\n\n\n\n\nModel Assessment\n\nConverting SDF into sf data frame\n\ngwr.fixed_new<-as.data.frame(gwlr.fixed_new$SDF)\n\n\ngwr.fixed_new<-gwr.fixed_new %>%\n  mutate(most=ifelse(gwr.fixed_new$yhat>=0.5,T,F))\n\n\ngwr.fixed_new$y<- as.factor(gwr.fixed_new$y)\ngwr.fixed_new$most<- as.factor(gwr.fixed_new$most)\nCM<-confusionMatrix(data=gwr.fixed_new$most,reference=gwr.fixed_new$y)\nCM\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction FALSE TRUE\n     FALSE  1792  302\n     TRUE    322 2340\n                                          \n               Accuracy : 0.8688          \n                 95% CI : (0.8589, 0.8783)\n    No Information Rate : 0.5555          \n    P-Value [Acc > NIR] : <2e-16          \n                                          \n                  Kappa : 0.7341          \n                                          \n Mcnemar's Test P-Value : 0.4469          \n                                          \n            Sensitivity : 0.8477          \n            Specificity : 0.8857          \n         Pos Pred Value : 0.8558          \n         Neg Pred Value : 0.8790          \n             Prevalence : 0.4445          \n         Detection Rate : 0.3768          \n   Detection Prevalence : 0.4403          \n      Balanced Accuracy : 0.8667          \n                                          \n       'Positive' Class : FALSE           \n                                          \n\n\n\n\n\n\nVisualizing gwLR\n\nosun_wp_sf_selected_new<-osun_wp_sf_clean%>%\n  select(c(ADM2_EN,ADM2_PCODE,ADM1_EN,ADM1_PCODE,status\n           ))\n\n\ngwr_sf.fixed_new<-cbind(osun_wp_sf_selected_new,gwr.fixed_new)\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nprob_T<-tm_shape(osun)+\n  tm_polygons(alpha=0.1)+\n  tm_shape(gwr_sf.fixed_new)+\n  tm_dots(col=\"yhat\",\n          border.col=\"gray60\",\n          border.lwd=1)+\n  tm_view(set.zoom.limits = c(8,14))\nprob_T"
  },
  {
    "objectID": "In-class_Ex/In-class Ex5/In-class Ex5.html#re-calibrate-the-model-without-insignificant-variables",
    "href": "In-class_Ex/In-class Ex5/In-class Ex5.html#re-calibrate-the-model-without-insignificant-variables",
    "title": "In-class Exercise 5: Modeling the Spatial Variation of the Explanatory Factors of Water Point Status using Geograpgically Weighted Logistic Regression (GWLR)",
    "section": "Re-calibrate the model without insignificant variables",
    "text": "Re-calibrate the model without insignificant variables\nFrom the above logistic regression model result, the p-value of distance_to_primary_road and distance_to_secondary_road are 0.4744 and 0.5802. Both of them and higher than 0.05, which means those variables are not significant. Now we re-calibrate the logistic regression model and GWLR model by excluding the two independent variables that are not statistically significant during the initial round of model calibration.\n\nBuilding the new logistic regression model\n\nmodel_new<-glm(status ~ \n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n           data=osun_wp_sf_clean,\n           family=binomial(link='logit'))\n\n\nblr_regress(model_new)\n\n                             Model Overview                              \n------------------------------------------------------------------------\nData Set    Resp Var    Obs.    Df. Model    Df. Residual    Convergence \n------------------------------------------------------------------------\n  data       status     4756      4755           4746           TRUE     \n------------------------------------------------------------------------\n\n                    Response Summary                     \n--------------------------------------------------------\nOutcome        Frequency        Outcome        Frequency \n--------------------------------------------------------\n   0             2114              1             2642    \n--------------------------------------------------------\n\n                                 Maximum Likelihood Estimates                                   \n-----------------------------------------------------------------------------------------------\n               Parameter                    DF    Estimate    Std. Error    z value     Pr(>|z|) \n-----------------------------------------------------------------------------------------------\n              (Intercept)                   1      0.3540        0.1055      3.3541       8e-04 \n       distance_to_tertiary_road            1      1e-04         0.0000      4.9096      0.0000 \n            distance_to_city                1      0.0000        0.0000     -5.2022      0.0000 \n            distance_to_town                1      0.0000        0.0000     -5.4660      0.0000 \n         water_point_population             1      -5e-04        0.0000    -11.3902      0.0000 \n          local_population_1km              1      3e-04         0.0000     19.4069      0.0000 \n           usage_capacity1000               1     -0.6206        0.0697     -8.9081      0.0000 \n              is_urbanTRUE                  1     -0.2667        0.0747     -3.5690       4e-04 \nwater_source_cleanProtected Shallow Well    1      0.4947        0.0850      5.8228      0.0000 \n   water_source_cleanProtected Spring       1      1.2790        0.4384      2.9174      0.0035 \n-----------------------------------------------------------------------------------------------\n\n Association of Predicted Probabilities and Observed Responses  \n---------------------------------------------------------------\n% Concordant          0.7349          Somers' D        0.4697   \n% Discordant          0.2651          Gamma            0.4697   \n% Tied                0.0000          Tau-a            0.2320   \nPairs                5585188          c                0.7349   \n---------------------------------------------------------------\n\n\n\nblr_confusion_matrix(model_new,cutoff=0.5)\n\nConfusion Matrix and Statistics \n\n          Reference\nPrediction FALSE TRUE\n         0  1300  743\n         1   814 1899\n\n                Accuracy : 0.6726 \n     No Information Rate : 0.4445 \n\n                   Kappa : 0.3348 \n\nMcNemars's Test P-Value  : 0.0761 \n\n             Sensitivity : 0.7188 \n             Specificity : 0.6149 \n          Pos Pred Value : 0.7000 \n          Neg Pred Value : 0.6363 \n              Prevalence : 0.5555 \n          Detection Rate : 0.3993 \n    Detection Prevalence : 0.5704 \n       Balanced Accuracy : 0.6669 \n               Precision : 0.7000 \n                  Recall : 0.7188 \n\n        'Positive' Class : 1\n\n\nCompare with the previous gwLR model, the accuracy decrease from 0.6739 to 0.6726.\n\n\nBuilding a Geographically weight logistic regression (GWLR) model\n\nConverting from sf to sp data frame\n\nosun_wp_sp_new<-osun_wp_sf_clean %>%\n  select(c(status,\n                 distance_to_tertiary_road,\n                 distance_to_city,\n                 distance_to_town,\n                 water_point_population,\n                 local_population_1km,\n                 usage_capacity,\n                 is_urban,\n                 water_source_clean)) %>%\n  as_Spatial()\nosun_wp_sp_new\n\nclass       : SpatialPointsDataFrame \nfeatures    : 4756 \nextent      : 182502.4, 290751, 340054.1, 450905.3  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 9\nnames       : status, distance_to_tertiary_road, distance_to_city, distance_to_town, water_point_population, local_population_1km, usage_capacity, is_urban, water_source_clean \nmin values  :      0,         0.017815121653488, 53.0461399623541, 30.0019777713073,                      0,                    0,           1000,        0,           Borehole \nmax values  :      1,          10966.2705628969,  47934.343603562, 44020.6393368124,                  29697,                36118,            300,        1,   Protected Spring \n\n\n\n\nBuilding Fixed Bandwidth GWR Model\n\nComputing fixed bandwidth\n\nbw.fixed_new<- bw.ggwr(status~\n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n              data=osun_wp_sp_new,\n              family=\"binomial\",\n              approach = \"AIC\",\n              kernel = \"gaussian\",\n              adaptive = FALSE,\n              longlat = FALSE)\n\n\nbw.fixed_new\n\n\ngwlr.fixed_new<-ggwr.basic(status~\n                 distance_to_tertiary_road+\n                 distance_to_city+\n                 distance_to_town+\n                 water_point_population+\n                 local_population_1km+\n                 usage_capacity+\n                 is_urban+\n                 water_source_clean,\n              data=osun_wp_sp_new,\n              bw=2597.255,\n              family=\"binomial\",\n              kernel=\"gaussian\",\n              adaptive=FALSE,\n              longlat=FALSE)\n\n Iteration    Log-Likelihood\n=========================\n       0        -2034 \n       1        -1772 \n       2        -1635 \n       3        -1561 \n       4        -1530 \n       5        -1530 \n\n\n\ngwlr.fixed_new\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2022-12-17 16:05:30 \n   Call:\n   ggwr.basic(formula = status ~ distance_to_tertiary_road + distance_to_city + \n    distance_to_town + water_point_population + local_population_1km + \n    usage_capacity + is_urban + water_source_clean, data = osun_wp_sp_new, \n    bw = 2597.255, family = \"binomial\", kernel = \"gaussian\", \n    adaptive = FALSE, longlat = FALSE)\n\n   Dependent (y) variable:  status\n   Independent variables:  distance_to_tertiary_road distance_to_city distance_to_town water_point_population local_population_1km usage_capacity is_urban water_source_clean\n   Number of data points: 4756\n   Used family: binomial\n   ***********************************************************************\n   *              Results of Generalized linear Regression               *\n   ***********************************************************************\n\nCall:\nNULL\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-129.368    -1.750     1.074     1.742    34.126  \n\nCoefficients:\n                                           Estimate Std. Error z value Pr(>|z|)\nIntercept                                 3.540e-01  1.055e-01   3.354 0.000796\ndistance_to_tertiary_road                 1.001e-04  2.040e-05   4.910 9.13e-07\ndistance_to_city                         -1.764e-05  3.391e-06  -5.202 1.97e-07\ndistance_to_town                         -1.544e-05  2.825e-06  -5.466 4.60e-08\nwater_point_population                   -5.098e-04  4.476e-05 -11.390  < 2e-16\nlocal_population_1km                      3.452e-04  1.779e-05  19.407  < 2e-16\nusage_capacity1000                       -6.206e-01  6.966e-02  -8.908  < 2e-16\nis_urbanTRUE                             -2.667e-01  7.474e-02  -3.569 0.000358\nwater_source_cleanProtected Shallow Well  4.947e-01  8.496e-02   5.823 5.79e-09\nwater_source_cleanProtected Spring        1.279e+00  4.384e-01   2.917 0.003530\n                                            \nIntercept                                ***\ndistance_to_tertiary_road                ***\ndistance_to_city                         ***\ndistance_to_town                         ***\nwater_point_population                   ***\nlocal_population_1km                     ***\nusage_capacity1000                       ***\nis_urbanTRUE                             ***\nwater_source_cleanProtected Shallow Well ***\nwater_source_cleanProtected Spring       ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 6534.5  on 4755  degrees of freedom\nResidual deviance: 5688.9  on 4746  degrees of freedom\nAIC: 5708.9\n\nNumber of Fisher Scoring iterations: 5\n\n\n AICc:  5708.923\n Pseudo R-square value:  0.129406\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 2597.255 \n   Regression points: the same locations as observations are used.\n   Distance metric: A distance matrix is specified for this model calibration.\n\n   ************Summary of Generalized GWR coefficient estimates:**********\n                                                   Min.     1st Qu.      Median\n   Intercept                                -2.7771e+02 -3.9915e+00  2.9346e+00\n   distance_to_tertiary_road                -2.0066e-02 -3.6016e-04  8.9385e-05\n   distance_to_city                         -3.0931e-02 -5.6273e-04 -1.0359e-04\n   distance_to_town                         -3.4702e-03 -4.3133e-04 -1.2398e-04\n   water_point_population                   -3.5450e-02 -2.0856e-03 -1.1271e-03\n   local_population_1km                     -5.8060e-02  4.0342e-04  1.0001e-03\n   usage_capacity1000                       -4.5295e+01 -1.0249e+00 -3.8880e-01\n   is_urbanTRUE                             -3.0233e+02 -3.1725e+00 -1.4861e+00\n   water_source_cleanProtected.Shallow.Well -1.0470e+02 -4.2423e-01  5.9626e-01\n   water_source_cleanProtected.Spring       -7.9160e+02 -5.4086e+00  2.5525e+00\n                                                3rd Qu.      Max.\n   Intercept                                 1.0668e+01 1102.7459\n   distance_to_tertiary_road                 5.3918e-04    0.0140\n   distance_to_city                          1.2672e-04    0.0129\n   distance_to_town                          2.2159e-04    0.0161\n   water_point_population                    1.9400e-04    0.0569\n   local_population_1km                      1.6838e-03    0.0293\n   usage_capacity1000                        3.5031e-01    5.9152\n   is_urbanTRUE                              8.9541e-01  739.6369\n   water_source_cleanProtected.Shallow.Well  1.8040e+00   52.4657\n   water_source_cleanProtected.Spring        6.5117e+00  152.2614\n   ************************Diagnostic information*************************\n   Number of data points: 4756 \n   GW Deviance: 3051.369 \n   AIC : 4499.24 \n   AICc : 4759.621 \n   Pseudo R-square value:  0.5330355 \n\n   ***********************************************************************\n   Program stops at: 2022-12-17 16:05:58 \n\n\n\n\n\nModel Assessment\n\nConverting SDF into sf data frame\n\ngwr.fixed_new<-as.data.frame(gwlr.fixed_new$SDF)\n\n\ngwr.fixed_new<-gwr.fixed_new %>%\n  mutate(most=ifelse(gwr.fixed_new$yhat>=0.5,T,F))\n\n\ngwr.fixed_new$y<- as.factor(gwr.fixed_new$y)\ngwr.fixed_new$most<- as.factor(gwr.fixed_new$most)\nCM<-confusionMatrix(data=gwr.fixed_new$most,reference=gwr.fixed_new$y)\nCM\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction FALSE TRUE\n     FALSE  1792  302\n     TRUE    322 2340\n                                          \n               Accuracy : 0.8688          \n                 95% CI : (0.8589, 0.8783)\n    No Information Rate : 0.5555          \n    P-Value [Acc > NIR] : <2e-16          \n                                          \n                  Kappa : 0.7341          \n                                          \n Mcnemar's Test P-Value : 0.4469          \n                                          \n            Sensitivity : 0.8477          \n            Specificity : 0.8857          \n         Pos Pred Value : 0.8558          \n         Neg Pred Value : 0.8790          \n             Prevalence : 0.4445          \n         Detection Rate : 0.3768          \n   Detection Prevalence : 0.4403          \n      Balanced Accuracy : 0.8667          \n                                          \n       'Positive' Class : FALSE           \n                                          \n\n\nCompare with the previous gwLR model, the accuracy decrease from 0.8837 to 0.8668.\n\n\n\n\nVisualizing gwLR\n\nosun_wp_sf_selected_new<-osun_wp_sf_clean%>%\n  select(c(ADM2_EN,ADM2_PCODE,ADM1_EN,ADM1_PCODE,status\n           ))\n\n\ngwr_sf.fixed_new<-cbind(osun_wp_sf_selected_new,gwr.fixed_new)\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nprob_T<-tm_shape(osun)+\n  tm_polygons(alpha=0.1)+\n  tm_shape(gwr_sf.fixed_new)+\n  tm_dots(col=\"yhat\",\n          border.col=\"gray60\",\n          border.lwd=1)+\n  tm_view(set.zoom.limits = c(8,14))\nprob_T"
  }
]